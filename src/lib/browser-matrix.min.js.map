{"version":3,"sources":["node_modules/browser-pack/_prelude.js","browser-index.js","/source/lib/src/ReEmitter.js","/source/lib/src/base-apis.js","/source/lib/src/client.js","/source/lib/src/content-repo.js","/source/lib/src/crypto/DeviceList.js","/source/lib/src/crypto/OlmDevice.js","/source/lib/src/crypto/OutgoingRoomKeyRequestManager.js","/source/lib/src/crypto/algorithms/base.js","/source/lib/src/crypto/algorithms/index.js","/source/lib/src/crypto/algorithms/megolm.js","/source/lib/src/crypto/algorithms/olm.js","/source/lib/src/crypto/deviceinfo.js","/source/lib/src/crypto/index.js","/source/lib/src/crypto/olmlib.js","/source/lib/src/crypto/store/indexeddb-crypto-store-backend.js","/source/lib/src/crypto/store/indexeddb-crypto-store.js","/source/lib/src/crypto/store/memory-crypto-store.js","/source/lib/src/filter-component.js","/source/lib/src/filter.js","/source/lib/src/http-api.js","/source/lib/src/interactive-auth.js","/source/lib/src/matrix.js","/source/lib/src/models/event-context.js","/source/lib/src/models/event-timeline-set.js","/source/lib/src/models/event-timeline.js","/source/lib/src/models/event.js","/source/lib/src/models/group.js","/source/lib/src/models/room-member.js","/source/lib/src/models/room-state.js","/source/lib/src/models/room-summary.js","/source/lib/src/models/room.js","/source/lib/src/models/search-result.js","/source/lib/src/models/user.js","/source/lib/src/pushprocessor.js","/source/lib/src/realtime-callbacks.js","/source/lib/src/scheduler.js","/source/lib/src/store/indexeddb-local-backend.js","/source/lib/src/store/indexeddb-remote-backend.js","/source/lib/src/store/indexeddb.js","/source/lib/src/store/memory.js","/source/lib/src/store/session/webstorage.js","/source/lib/src/store/stub.js","/source/lib/src/sync-accumulator.js","/source/lib/src/sync.js","/source/lib/src/timeline-window.js","/source/lib/src/utils.js","/source/lib/src/webrtc/call.js","node_modules/another-json/another-json.js","node_modules/babel-runtime/core-js/get-iterator.js","node_modules/babel-runtime/core-js/is-iterable.js","node_modules/babel-runtime/core-js/json/stringify.js","node_modules/babel-runtime/core-js/object/assign.js","node_modules/babel-runtime/core-js/object/create.js","node_modules/babel-runtime/core-js/object/define-property.js","node_modules/babel-runtime/core-js/object/get-prototype-of.js","node_modules/babel-runtime/core-js/object/keys.js","node_modules/babel-runtime/core-js/object/set-prototype-of.js","node_modules/babel-runtime/core-js/symbol.js","node_modules/babel-runtime/core-js/symbol/iterator.js","node_modules/babel-runtime/helpers/classCallCheck.js","node_modules/babel-runtime/helpers/createClass.js","node_modules/babel-runtime/helpers/defineProperty.js","node_modules/babel-runtime/helpers/inherits.js","node_modules/babel-runtime/helpers/possibleConstructorReturn.js","node_modules/babel-runtime/helpers/slicedToArray.js","node_modules/babel-runtime/helpers/typeof.js","node_modules/babel-runtime/regenerator/index.js","node_modules/bluebird/js/browser/bluebird.js","node_modules/browser-request/index.js","node_modules/content-type/index.js","node_modules/core-js/library/fn/get-iterator.js","node_modules/core-js/library/fn/is-iterable.js","node_modules/core-js/library/fn/json/stringify.js","node_modules/core-js/library/fn/object/assign.js","node_modules/core-js/library/fn/object/create.js","node_modules/core-js/library/fn/object/define-property.js","node_modules/core-js/library/fn/object/get-prototype-of.js","node_modules/core-js/library/fn/object/keys.js","node_modules/core-js/library/fn/object/set-prototype-of.js","node_modules/core-js/library/fn/symbol/index.js","node_modules/core-js/library/fn/symbol/iterator.js","node_modules/core-js/library/modules/_a-function.js","node_modules/core-js/library/modules/_add-to-unscopables.js","node_modules/core-js/library/modules/_an-object.js","node_modules/core-js/library/modules/_array-includes.js","node_modules/core-js/library/modules/_classof.js","node_modules/core-js/library/modules/_cof.js","node_modules/core-js/library/modules/_core.js","node_modules/core-js/library/modules/_ctx.js","node_modules/core-js/library/modules/_defined.js","node_modules/core-js/library/modules/_descriptors.js","node_modules/core-js/library/modules/_dom-create.js","node_modules/core-js/library/modules/_enum-bug-keys.js","node_modules/core-js/library/modules/_enum-keys.js","node_modules/core-js/library/modules/_export.js","node_modules/core-js/library/modules/_fails.js","node_modules/core-js/library/modules/_global.js","node_modules/core-js/library/modules/_has.js","node_modules/core-js/library/modules/_hide.js","node_modules/core-js/library/modules/_html.js","node_modules/core-js/library/modules/_ie8-dom-define.js","node_modules/core-js/library/modules/_iobject.js","node_modules/core-js/library/modules/_is-array.js","node_modules/core-js/library/modules/_is-object.js","node_modules/core-js/library/modules/_iter-create.js","node_modules/core-js/library/modules/_iter-define.js","node_modules/core-js/library/modules/_iter-step.js","node_modules/core-js/library/modules/_iterators.js","node_modules/core-js/library/modules/_library.js","node_modules/core-js/library/modules/_meta.js","node_modules/core-js/library/modules/_object-assign.js","node_modules/core-js/library/modules/_object-create.js","node_modules/core-js/library/modules/_object-dp.js","node_modules/core-js/library/modules/_object-dps.js","node_modules/core-js/library/modules/_object-gopd.js","node_modules/core-js/library/modules/_object-gopn-ext.js","node_modules/core-js/library/modules/_object-gopn.js","node_modules/core-js/library/modules/_object-gops.js","node_modules/core-js/library/modules/_object-gpo.js","node_modules/core-js/library/modules/_object-keys-internal.js","node_modules/core-js/library/modules/_object-keys.js","node_modules/core-js/library/modules/_object-pie.js","node_modules/core-js/library/modules/_object-sap.js","node_modules/core-js/library/modules/_property-desc.js","node_modules/core-js/library/modules/_redefine.js","node_modules/core-js/library/modules/_set-proto.js","node_modules/core-js/library/modules/_set-to-string-tag.js","node_modules/core-js/library/modules/_shared-key.js","node_modules/core-js/library/modules/_shared.js","node_modules/core-js/library/modules/_string-at.js","node_modules/core-js/library/modules/_to-absolute-index.js","node_modules/core-js/library/modules/_to-integer.js","node_modules/core-js/library/modules/_to-iobject.js","node_modules/core-js/library/modules/_to-length.js","node_modules/core-js/library/modules/_to-object.js","node_modules/core-js/library/modules/_to-primitive.js","node_modules/core-js/library/modules/_uid.js","node_modules/core-js/library/modules/_wks-define.js","node_modules/core-js/library/modules/_wks-ext.js","node_modules/core-js/library/modules/_wks.js","node_modules/core-js/library/modules/core.get-iterator-method.js","node_modules/core-js/library/modules/core.get-iterator.js","node_modules/core-js/library/modules/core.is-iterable.js","node_modules/core-js/library/modules/es6.array.iterator.js","node_modules/core-js/library/modules/es6.object.assign.js","node_modules/core-js/library/modules/es6.object.create.js","node_modules/core-js/library/modules/es6.object.define-property.js","node_modules/core-js/library/modules/es6.object.get-prototype-of.js","node_modules/core-js/library/modules/es6.object.keys.js","node_modules/core-js/library/modules/es6.object.set-prototype-of.js","node_modules/core-js/library/modules/es6.string.iterator.js","node_modules/core-js/library/modules/es6.symbol.js","node_modules/core-js/library/modules/es7.symbol.async-iterator.js","node_modules/core-js/library/modules/es7.symbol.observable.js","node_modules/core-js/library/modules/web.dom.iterable.js","node_modules/events/events.js","node_modules/process/browser.js","node_modules/punycode/punycode.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/regenerator-runtime/runtime-module.js","node_modules/regenerator-runtime/runtime.js","node_modules/url/url.js","node_modules/url/util.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","matrixcs","request","indexedDB","global","setCryptoStoreFactory","IndexedDBCryptoStore","Reemitter","target","_classCallCheck3","default","this","boundHandlers","eventName","_target","_len","arguments","args","Array","_key","emit","apply","concat","source","eventNames","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","_getIterator3","next","done","value","_handleEvent","bind","boundHandler","on","err","return","MatrixBaseApis","opts","utils","checkObjectHasKeys","baseUrl","idBaseUrl","httpOpts","accessToken","prefix","httpApi","PREFIX_R0","onlyData","extraParams","queryParams","localTimeoutMs","useAuthorizationHeader","_http","MatrixHttpApi","_txnCtr","prototype","getHomeserverUrl","getIdentityServerUrl","getAccessToken","isLoggedIn","makeTxnId","Date","getTime","isUsernameAvailable","username","authedRequest","then","response","available","register","password","sessionId","auth","bindThreepids","guestAccessToken","callback","email","session","params","bind_email","msisdn","bind_msisdn","guest_access_token","x_show_msisdn","registerRequest","registerGuest","body","data","kind","loginFlows","login","loginType","login_data","type","extend","loginWithPassword","user","loginWithSAML2","relayState","relay_state","getCasLoginUrl","redirectUrl","getUrl","PREFIX_UNSTABLE","loginWithToken","token","logout","deactivateAccount","authedRequestWithPrefix","getFallbackAuthUrl","authSessionId","path","encodeUri","$loginType","createRoom","options","roomState","roomId","$roomId","getGroupSummary","groupId","$groupId","getGroupProfile","setGroupProfile","profile","getGroupUsers","inviteUserToGroup","userId","$userId","removeUserFromGroup","acceptGroupInvite","leaveGroup","getJoinedGroups","createGroup","content","getPublicisedGroups","userIds","user_ids","getStateEvent","eventType","stateKey","pathParams","$eventType","$stateKey","sendStateEvent","redactEvent","eventId","$eventId","roomInitialSync","limit","isFunction","setRoomReadMarkersHttpRequest","rmEventId","rrEventId","m.fully_read","m.read","publicRooms","query_params","server","_keys2","createAlias","alias","$alias","room_id","deleteAlias","getRoomIdForAlias","resolveRoomAlias","roomAlias","getRoomDirectoryVisibility","setRoomDirectoryVisibility","visibility","setRoomDirectoryVisibilityAppService","networkId","$networkId","searchUserDirectory","search_term","term","uploadContent","file","cancelUpload","promise","getCurrentUploads","getProfileInfo","info","$info","getThreePids","addThreePid","creds","threePidCreds","deleteThreePid","medium","address","setPassword","authDict","newPassword","new_password","getDevices","setDeviceDetails","device_id","$device_id","deleteDevice","getPushers","setPusher","pusher","getPushRules","addPushRule","scope","ruleId","$kind","$ruleId","deletePushRule","setPushRuleEnabled","enabled","setPushRuleActions","actions","search","queryparams","next_batch","uploadKeysRequest","deviceId","$deviceId","downloadKeysForUsers","device_keys","forEach","claimOneTimeKeys","devices","key_algorithm","queries","query","one_time_keys","getKeyChanges","oldToken","newToken","qps","from","to","requestEmailToken","clientSecret","sendAttempt","nextLink","client_secret","send_attempt","next_link","idServerRequest","PREFIX_IDENTITY_V1","submitMsisdnToken","sid","lookupThreePid","sendToDevice","contentMap","txnId","$txnId","messages","getThirdpartyProtocols","_typeof3","getThirdpartyLocation","protocol","$protocol","MatrixClient","endsWith","substr","reEmitter","_ReEmitter2","store","StubStore","credentials","scheduler","self","setProcessFunction","eventToSend","room","getRoom","getRoomId","status","EventStatus","SENDING","_updatePendingEventStatus","_sendEventHttpRequest","clientRunning","callList","webRtcCall","createNewMatrixCall","_supportsVoip","setupCallEventHandler","_syncingRetry","_syncApi","_peekSync","_isGuest","_ongoingScrollbacks","timelineSupport","Boolean","urlPreviewCache","_notifTimelineSet","_crypto","_cryptoStore","cryptoStore","_sessionStore","sessionStore","CRYPTO_ENABLED","olmVersion","Crypto","getOlmVersion","_sendEvent","client","event","_bluebird2","resolve","encryptionPromise","_encryptEventIfNeeded","ENCRYPTING","queueEvent","getQueueForEvent","QUEUED","res","updatePendingEvent","SENT","event_id","console","error","stack","NOT_SENT","err2","isEncrypted","isRoomEncrypted","encryptEvent","newStatus","_txnId","getWireType","getStateKey","isState","pathTemplate","getWireContent","log","_setMembershipState","membershipValue","reason","membership","_membershipChange","$room_id","$membership","user_id","_presenceList","method","onEvent","getType","indexOf","isBeingDecrypted","isDecryptionFailure","once","isClientPrepared","callEventHandler","callEventBuffer","push","getContent","call_id","getSender","getAge","lifetime","state","callId","_initWithInvite","candidatesByCall","_gotRemoteIceCandidate","existingCall","existingCalls","values","thisCall","direction","_replacedBy","answer","hangup","_onAnsweredElsewhere","_receivedAnswer","candidates","_onHangupReceived","_initWithHangup","ignoreCallIds","ev","checkTurnServers","isGuest","turnServer","uris","ttl","servers","urls","credential","_turnServers","_checkTurnServersTimeoutID","setTimeout","_reject","defer","reject","_resolve","_PojoToMatrixEventMapper","mapper","plainOldJsObject","MatrixEvent","reEmit","attemptDecryption","_callee2","verified","blocked","known","dev","_regenerator2","wrap","_context2","prev","_bluebird","setDeviceVerification","sent","stop","_ReEmitter","PushProcessor","EventEmitter","url","EventTimeline","SearchResult","contentRepo","Filter","SyncApi","MatrixError","warn","inherits","clearStores","_clientRunning","promises","deleteAllData","all","getUserId","getDomain","replace","getUserIdLocalpart","split","substring","getDeviceId","supportsVoip","getSyncState","getScheduler","setGuest","retryImmediately","getNotifTimelineSet","setNotifTimelineSet","notifTimelineSet","initCrypto","coroutine","mark","_callee","crypto","_context","abrupt","init","registerEventHandlers","isCryptoEnabled","getDeviceEd25519Key","uploadKeys","uploadDeviceKeys","downloadKeys","forceDownload","getStoredDevicesForUser","_ref2","_x","getStoredDevice","_ref3","_x2","_x3","setDeviceVerified","_setDeviceVerification","setDeviceBlocked","setDeviceKnown","setGlobalBlacklistUnverifiedDevices","getGlobalBlacklistUnverifiedDevices","getEventSenderDeviceInfo","_ref5","_x10","isEventSenderVerified","_ref6","_callee3","device","_context3","isVerified","_x11","setRoomEncryption","config","currentState","getStateEvents","getEndToEndRoom","exportRoomKeys","importRoomKeys","keys","getGroup","getGroups","getRooms","getUser","getUsers","setAccountData","contents","$type","getAccountData","getIgnoredUsers","setIgnoredUsers","ignored_users","map","isUserIgnored","joinRoom","roomIdOrAlias","syncRoom","hasMembershipState","sign_promise","inviteSignUrl","requestOtherUrl","mxid","signed_invite_object","third_party_signed","$roomid","syncApi","_clientOpts","resendEvent","cancelPendingEvent","removeEventFromQueue","CANCELLED","setRoomName","name","setRoomTopic","topic","getRoomTags","setRoomTag","tagName","metadata","$tag","deleteRoomTag","setRoomAccountData","setPowerLevel","powerLevel","users","deepCopy","sendEvent","localEvent","origin_server_ts","addPendingEvent","sendMessage","sendTextMessage","msgtype","sendNotice","sendEmoteMessage","sendImageMessage","text","sendHtmlMessage","htmlBody","format","formatted_body","sendHtmlNotice","sendHtmlEmote","sendReceipt","receiptType","$receiptType","getId","_addLocalEchoReceipt","sendReadReceipt","setRoomReadMarkers","rrEvent","getUrlPreview","ts","key","og","PREFIX_MEDIA_R0","sendTyping","isTyping","timeoutMs","typing","timeout","invite","inviteByEmail","inviteByThreePid","identityServerUrl","id_server","errcode","leave","ban","forget","deleteRoom","removeRoom","unban","kick","getPushActionsForEvent","getPushActions","pushProcessor","setPushActions","actionsForEvent","setProfileInfo","setDisplayName","displayname","setAvatarUrl","avatar_url","mxcUrlToHttp","mxcUrl","width","height","resizeMethod","allowDirectLinks","getHttpUriForMxc","setPresence","presence","getPresenceList","inviteToPresenceList","dropFromPresenceList","drop","scrollback","timeToWaitMs","errorTs","timeWaitedMs","now","Math","max","oldState","paginationToken","numAdded","dir","delay","matrixEvents","chunk","addEventsToTimeline","getLiveTimeline","end","storeEvents","paginateEventContext","eventContext","backwards","getPaginateToken","pendingRequest","_paginateRequests","getEvent","getEventMapper","reverse","addEvents","setPaginateToken","finally","getEventTimeline","timelineSet","getTimelineForEvent","events_after","events","events_before","timeline","addTimeline","initialiseState","getState","FORWARDS","start","paginateEventTimeline","eventTimeline","isNotifTimeline","getTimelineSet","BACKWARDS","getPaginationToken","_paginationRequests","only","next_token","notifications","notification","actionListToActionsObject","setPaginationToken","filter","getFilter","_stringify2","getRoomTimelineFilterComponent","resetNotifTimelineSet","resetLiveTimeline","peekInRoom","stopPeeking","peek","setGuestAccess","writePromise","guest_access","allowJoin","readPromise","allowRead","history_visibility","requestRegisterEmailToken","_requestTokenFromEndpoint","requestRegisterMsisdnToken","phoneCountry","phoneNumber","country","phone_number","requestAdd3pidEmailToken","requestAdd3pidMsisdnToken","requestPasswordEmailToken","requestPasswordMsisdnToken","endpoint","id_server_url","parse","host","postParams","_assign2","getRoomPushRule","pushRules","rule","rule_id","setRoomMutePushRule","mute","deferred","hasDontNotifyRule","roomPushRule","ruleRefreshDeferred","result","searchMessageText","roomEvents","search_categories","room_events","searchRoomEvents","order_by","event_context","before_limit","after_limit","include_profile","searchResults","_query","results","highlights","_processRoomEventsSearch","backPaginateRoomEventsSearch","searchOpts","count","hl","sr","fromJson","syncLeftRooms","_syncedLeftRooms","_syncLeftRoomsPromise","createFilter","filter_id","storeFilter","filterId","allowCached","$filterId","getOrCreateFilter","filterName","getFilterIdByName","existingFilter","oldDef","getDefinition","newDef","deepCompare","setFilterIdByName","httpStatus","existingId","createdFilter","getOpenIdToken","getTurnServers","startClient","_this","initialSyncLimit","canResetEntireTimeline","_canResetTimelineCallback","sync","stopClient","clearTimeout","setCanResetTimelineCallback","cb","getCanResetTimelineCallback","generateClientSecret","ret","chars","charAt","floor","random","mxc","serverAndMediaId","slice","fragmentOffset","fragment","encodeParams","getIdenticonUri","identiconString","$ident","_olmDevice","userStore","userResult","updated","_deviceId","deviceResult","t0","t1","hasOwnProperty","t2","t3","_storeDeviceKeys","signKeyId","signKey","unsigned","deviceStore","_olmlib2","verifySignature","getFingerprint","_deviceinfo2","algorithms","_deviceinfo","_olmlib","TRACKING_STATUS_PENDING_DOWNLOAD","TRACKING_STATUS_DOWNLOAD_IN_PROGRESS","DeviceList","baseApis","olmDevice","_serialiser","DeviceListUpdateSerialiser","_deviceTrackingStatus","getEndToEndDeviceTrackingStatus","_keyDownloadsInProgressByUser","lastKnownSyncToken","usersToDownload","trackingStatus","downloadPromise","_doKeyDownload","_getDevicesFromStore","stored","devs","getEndToEndDevicesForUser","fromStorage","algorithm","senderKey","OLM_ALGORITHM","MEGOLM_ALGORITHM","keyId","deviceKey","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","invalidateUserDeviceList","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_persistDeviceTrackingStatus","_this2","prom","updateDevicesForUsers","finished","success","storeEndToEndDeviceTrackingStatus","_baseApis","_downloadInProgress","_keyDownloadsQueuedByUser","_queuedQueryDeferred","_nextSyncToken","syncToken","_this3","_doQueuedQueries","_this4","downloadUsers","dk","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_processQueryResponseForUser","_downloadInProgressInProgress","d","_updateStoredDeviceKeysForUser","storage","toStorage","storeEndToEndDevicesForUser","checkPayloadLength","payloadString","MAX_PLAINTEXT_LENGTH","OlmDevice","_pickleKey","deviceCurve25519Key","deviceEd25519Key","_maxOneTimeKeys","_outboundGroupSessionStore","_inboundGroupSessionMessageIndexes","_initialise_account","pickleKey","account","e2eAccount","getEndToEndAccount","unpickle","create","pickled","pickle","storeEndToEndAccount","Olm","e2eKeys","Account","JSON","identity_keys","max_number_of_one_time_keys","free","curve25519","ed25519","get_library_version","_getAccount","func","pickledAccount","_saveAccount","_getSession","sessions","getEndToEndSessions","pickledSession","Session","_saveSession","storeEndToEndSession","session_id","_getUtility","utility","Utility","sign","message","getOneTimeKeys","maxNumberOfOneTimeKeys","markKeysAsPublished","mark_keys_as_published","generateOneTimeKeys","numKeys","generate_one_time_keys","createOutboundSession","theirIdentityKey","theirOneTimeKey","create_outbound","_x4","createInboundSession","_ref7","theirDeviceIdentityKey","message_type","ciphertext","create_inbound_from","remove_one_time_keys","decrypt","payload","_x5","_x6","_x7","getSessionIdsForDevice","_ref8","_x8","getSessionIdForDevice","_ref9","sessionIds","sort","_x9","getSessionInfoForDevice","_ref10","deviceIdentityKey","getSessionInfo","hasReceivedMessage","has_received_message","encryptMessage","_ref11","encrypt","_x12","_x13","decryptMessage","_ref12","_x14","_x15","_x16","_x17","matchesSession","_ref13","matches_inbound","_x18","_x19","_x20","_x21","_saveOutboundGroupSession","_getOutboundGroupSession","OutboundGroupSession","createOutboundGroupSession","encryptGroupMessage","getOutboundGroupSessionKey","chain_index","message_index","session_key","_saveInboundGroupSession","senderCurve25519Key","sessionData","storeEndToEndInboundGroupSession","_getInboundGroupSession","getEndToEndInboundGroupSession","InboundGroupSession","addInboundGroupSession","_ref14","forwardingCurve25519KeyChain","sessionKey","keysClaimed","exportFormat","updateSession","import_session","_x22","_x23","_x24","_x25","_x26","_x27","_x28","importInboundGroupSession","_ref15","sender_key","sender_claimed_keys","forwarding_curve25519_key_chain","_x29","decryptGroupMessage","_ref16","plaintext","messageIndexKey","_x30","_x31","_x32","_x33","hasInboundSessionKeys","_ref17","_x34","_x35","_x36","getInboundGroupSessionKey","_ref18","getKey","messageIndex","first_known_index","claimedKeys","senderEd25519Key","export_session","sender_claimed_ed25519_key","_x37","_x38","_x39","exportInboundGroupSession","_ref19","_x40","_x41","signature","util","ed25519_verify","stringifyRequestBody","requestBody","stringifyRecipientList","recipients","_utils2","join","_utils","ROOM_KEY_REQUEST_STATES","UNSENT","CANCELLATION_PENDING","OutgoingRoomKeyRequestManager","_sendOutgoingRoomKeyRequestsTimer","_sendOutgoingRoomKeyRequestsRunning","_startTimer","getOrAddOutgoingRoomKeyRequest","requestId","req","getOutgoingRoomKeyRequest","deleteOutgoingRoomKeyRequest","updateOutgoingRoomKeyRequest","cancellationTxnId","updatedReq","_sendOutgoingRoomKeyRequestCancellation","catch","startSendingOutgoingRoomKeyRequests","_sendOutgoingRoomKeyRequests","getOutgoingRoomKeyRequestByState","_sendOutgoingRoomKeyRequest","_this5","requestMessage","action","requesting_device_id","request_id","_sendMessageToDevices","_this6","recip","registerAlgorithm","encryptor","decryptor","ENCRYPTION_CLASSES","DECRYPTION_CLASSES","EncryptionAlgorithm","_userId","_roomId","member","oldMembership","DecryptionAlgorithm","keyRequest","DecryptionError","msg","details","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","k","UnknownDeviceError","base","OutboundSessionInfo","useCount","creationTime","sharedWithDevices","MegolmEncryption","_setupPromise","_sessionRotationPeriodMsgs","_sessionRotationPeriodMs","rotation_period_ms","rotation_period_msgs","MegolmDecryption","_pendingEvents","olmlib","needsRotation","rotationPeriodMsgs","rotationPeriodMs","sessionLifetime","sharedWithTooManyDevices","devicesInRoom","_ensureOutboundSession","returnSession","prepareSession","_ref","oldSession","shareMap","userDevices","deviceInfo","_prepareNewSession","getIdentityKey","_shareKeyWithDevices","devicesByUser","ensureOlmSessionsForDevices","devicemap","devicesToShareWith","sessionResults","sessionResult","encryptedContent","encryptMessageForDevice","_getDevicesInRoom","_checkForUnknownDevices","payloadJson","unknownDevices","isUnverified","isKnown","roomMembers","getJoinedMembers","isBlocked","getBlacklistUnverifiedDevices","decryptEvent","_addEventToPendingList","_requestKeysForEvent","toString","clearEvent","claimedEd25519Key","sender","wireContent","requestRoomKey","onRoomKeyEvent","getSenderKey","forwardingKeyChain","isArray","ed25519Key","getKeysClaimed","cancelRoomKeyRequest","_retryDecryption","hasKeysForKeyRequest","shareKeysWithDevice","_defineProperty3","_buildKeyForwardingMessage","_ref4","_callee4","_context4","importRoomKey","pending","OlmEncryption","_sessionPrepared","_prepPromise","OlmDecryption","DeviceInfo","DeviceVerification","_ensureSession","ensureOlmSessionsForUsers","payloadFields","j","BLOCKED","_decryptMessage","recipient","recipient_keys","intended","our_key","reported_sender","reported_room","decryptionErrors","foundSession","Object","defineProperty","enumerable","UNVERIFIED","obj","prop","getDisplayName","device_display_name","VERIFIED","clientStore","_clientStore","_deviceList","_lastOneTimeKeyCheck","_oneTimeKeyCheckInProgress","_roomEncryptors","_roomDecryptors","_supportedAlgorithms","_deviceKeys","_globalBlacklistUnverifiedDevices","_outgoingRoomKeyRequestManager","_OutgoingRoomKeyRequestManager2","_receivedRoomKeyRequests","_receivedRoomKeyRequestCancellations","_processingRoomKeyRequests","_maybeUploadOneTimeKeys","uploadLoop","keyCount","keyLimit","keysThisLoop","min","maxKeysPerCycle","_uploadOneTimeKeys","one_time_key_counts","signed_curve25519","maxOneTimeKeys","_oneTimeKeyCount","oneTimeKeys","oneTimeJson","_signObject","_events","_OutgoingRoomKeyRequestManager","anotherjson","myDevices","eventEmitter","_onRoomMembership","_onToDeviceEvent","deviceKeys","updateOneTimeKeyCount","currentCount","isFinite","TypeError","verificationStatus","knownStatus","getOlmSessionsForUser","deviceIdKey","getForwardingCurve25519KeyChain","getDeviceByIdentityKey","claimedKey","getClaimedEd25519Key","inhibitDeviceQuery","existingConfig","AlgClass","storeEndToEndRoom","alg","m","startTrackingDeviceList","refreshOutdatedDeviceLists","getAllEndToEndInboundGroupSessionKeys","sess","_getRoomDecryptor","makeEncrypted","handleDeviceListChanges","deviceLists","changed","left","stopTrackingDeviceList","sendRoomKeyRequest","onCryptoEvent","onSyncCompleted","_callee5","syncData","nextSyncToken","oldSyncToken","_context5","getEndToEndDeviceSyncToken","_invalidateDeviceListsSince","invalidateAllDeviceLists","storeEndToEndDeviceSyncToken","catchingUp","_processReceivedRoomKeyRequests","_callee6","_context6","_getE2eRooms","me","getMember","_this7","_onRoomKeyEvent","_onRoomKeyRequestEvent","onRoomMembership","IncomingRoomKeyRequest","_req","IncomingRoomKeyRequestCancellation","_callee7","requests","cancellations","_this8","_context7","_processReceivedRoomKeyRequest","cancellation","_processReceivedRoomKeyRequestCancellation","finish","_callee8","_context8","share","decryptors","_callee9","sigs","_context9","stringify","signatures","oneTimeKey","_verifySignature","resultsObject","ourUserId","ourDeviceId","recipientUserId","recipientDevice","sender_device","devicesWithoutSession","oneTimeKeyAlgorithm","otk_res","_loop","_ret","userRes","_j","deviceRes","_verifyKeyAndStartSession","signingUserId","signingDeviceId","signingKey","userSigs","json","upgradeDatabase","db","oldVersion","VERSION","createDatabase","outgoingRoomKeyRequestsStore","createObjectStore","keyPath","createIndex","promiseifyTxn","txn","oncomplete","onerror","Backend","_db","onversionchange","_dbName","close","transaction","_getOutgoingRoomKeyRequest","existing","objectStore","add","onsuccess","index","openCursor","cursor","continue","wantedStates","stateIndex","wantedState","expectedState","updates","update","delete","_memoryCryptoStore","_indexeddbCryptoStoreBackend","IndexedDBCryptoStoreBackend","dbName","_indexedDB","_backendPromise","open","onupgradeneeded","onblocked","_memoryCryptoStore2","deleteDatabase","_connect","backend","MemoryCryptoStore","_outgoingRoomKeyRequests","try","splice","_matches_wildcard","actual_value","filter_value","type_prefix","FilterComponent","filter_json","types","not_types","rooms","not_rooms","senders","not_senders","contains_url","check","_checkFields","event_type","literal_keys","v","match_func","allowed_values","contains_url_filter","setProp","keyNesting","val","nestedKeys","currentObj","definition","getFilterId","setDefinition","room_filter_json","room_filter_fields","_include_leave","include_leave","_room_filter","_room_timeline_filter","filterRoomTimeline","setTimelineLimit","setIncludeLeaveRooms","includeLeave","jsonObj","parseErrorResponse","statusCode","contentType","getResponseContentType","getResponseHeader","headers","parseContentType","callbacks","event_emitter","uploads","getContentUri","access_token","fileName","stream","rawResponse","XMLHttpRequest","onlyContentUri","upload","loaded","total","bodyParser","rawBody","content_uri","xhr","requestCallback","timeout_fn","abort","timeout_timer","onreadystatechange","readyState","DONE","resp","responseText","http_status","addEventListener","progressHandler","encodeURIComponent","setRequestHeader","send","filename","Content-Type","promise0","fullUri","uri","withCredentials","_matrix_opts","qs","form","Authorization","requestPromise","requestWithPrefix","_request","queryString","timeoutId","timedOut","resetTimeout","reqPromise","onprogress","ex","userDefinedCallback","errorJson","_create2","constructor","InteractiveAuth","_matrixClient","matrixClient","_data","authData","_requestCallback","doRequest","_stateUpdatedCallback","stateUpdated","startAuthStage","_completionDeferred","_inputs","inputs","_clientSecret","_emailSid","emailSid","_currentStage","attemptAuth","flows","_startNextAuthStage","_doRequest","poll","idServerParsedUrl","threepid_creds","submitAuthDict","getSessionId","getClientSecret","getStageParams","background","getEmailSid","setEmailSid","errorFlows","haveFlows","completed","nextStage","_chooseStage","stageStatus","flow","_chooseFlow","_firstUncompletedStage","haveEmail","emailAddress","haveMsisdn","flowHasEmail","flowHasMsisdn","stages","stage","required_stages","available_flows","stageType","MatrixInMemoryStore","IndexedDBStore","IndexedDBStoreBackend","SyncAccumulator","Room","EventTimelineSet","RoomMember","RoomState","User","MatrixScheduler","WebStorageSessionStore","ContentRepo","TimelineWindow","setMatrixCallAudioInput","setAudioInput","setMatrixCallVideoInput","setVideoInput","getRequest","wrapRequest","wrapper","origRequest","cryptoStoreFactory","fac","createClient","localStorage","EventContext","ourEvent","_timeline","_ourEventIndex","_paginateTokens","b","getTimeline","getOurEventIndex","atStart","_timelineSupport","_liveTimeline","_timelines","_eventIdToTimeline","_filter","debuglog","setFilter","getPendingEvents","eventIdToTimeline","replaceEventId","oldEventId","newEventId","existingTimeline","backPaginationToken","forwardPaginationToken","resetAllTimelines","newTimeline","oldTimeline","evMap","evtype","freshEndState","_endState","findEventById","tl","findElement","getEvents","toStartOfTimeline","inverseDirection","didUpdate","lastEventWasNew","neighbour","getNeighbouringTimeline","setNeighbouringTimeline","addEventToTimeline","addLiveEvent","duplicateStrategy","tlEvents","setEventMetadata","encryptedType","addEvent","liveEvent","handleRemoteEcho","removeEvent","removed","compareEventOrdering","eventId1","eventId2","timeline1","timeline2","idx1","idx2","idx","evId","eventTimelineSet","_eventTimelineSet","_baseIndex","_startState","_prevTimeline","_nextTimeline","_name","toISOString","stateEvents","oldStateEvents","mxEvent","setStateEvents","getBaseIndex","stateContext","getUnfilteredTimelineSet","insertIndex","getSentinelMember","forwardLooking","interns","_pushActions","_date","_clearEvent","_senderCurve25519Key","_claimedEd25519Key","_forwardingCurve25519KeyChain","_decryptionPromise","getTs","getDate","getPrevContent","getUnsigned","prev_content","getDirectionalContent","age","state_key","crypto_type","crypto_content","_decryptionLoop","_badEncryptedMessage","_setClearData","decryptionResult","makeRedacted","redaction_event","redacted_because","_REDACT_KEEP_KEY_MAP","keeps","_REDACT_KEEP_CONTENT_MAP","isRedacted","pushActions","reduce","m.room.member","m.room.create","creator","m.room.join_rules","join_rule","m.room.power_levels","events_default","redact","state_default","users_default","m.room.aliases","aliases","Group","avatarUrl","myMembership","inviter","setProfile","setMyMembership","setInviter","rawDisplayName","powerLevelNorm","_updateModifiedTime","calculateDisplayName","displayName","selfUserId","getUserIdsWithDisplayName","setMembershipEvent","oldName","setPowerLevelEvent","powerLevelEvent","maxLevel","lvl","oldPowerLevel","oldPowerLevelNorm","setTypingEvent","oldTyping","typingList","_modified","getLastModifiedTime","getAvatarUrl","allowDefault","rawUrl","httpUrl","members","_sentinels","_displayNameToUserIds","_userIdsToDisplayNames","_tokenToInvite","_updateThirdPartyTokenCache","memberEvent","third_party_invite","signed","_updateDisplayNameCache","existingUserIds","getMembers","sentinel","roomMember","pwrLvlEvent","getInviteForThreePidToken","maySendRedactionForEvent","_hasSufficientPowerLevelFor","powerLevelsEvent","powerLevels","requiredLevel","maySendMessage","_maySendEventOfType","maySendEvent","mayClientSendStateEvent","stateEventType","cli","maySendStateEvent","power_levels_event","power_levels","events_levels","required_level","RoomSummary","synthesizeReceipt","fakeReceipt","pendingEventOrdering","tags","accountData","summary","storageToken","_opts","_txnToEvent","_receipts","_receiptCacheByEventId","_realReceipts","_notificationCounts","_timelineSets","_fixUpLegacyTimelineFields","_filteredTimelineSets","_pendingEventList","_blacklistUnverifiedDevices","calculateRoomName","ignoreRoomNameEvent","mRoomName","getCanonicalAlias","getAliases","otherMembers","allMembers","myMemberEventArray","myMemberEvent","thirdPartyInvites","display_name","getTimelineSets","getUnreadNotificationCount","setUnreadNotificationCount","setBlacklistUnverifiedDevices","roomAvatarEvent","mainUrl","alias_strings","alias_events","alias_event","canonicalAlias","getMembersWithMembership","getDefaultRoomName","getOrCreateFilteredTimelineSet","unfilteredLiveTimeline","removeFilteredTimelineSet","_addLiveEvent","redactId","redacts","redactedEvent","transaction_id","existingEvent","_handleRemoteEcho","addReceipt","remoteEvent","oldStatus","removeElement","ALLOWED_TRANSITIONS","allowed","addLiveEvents","liveTimeline","removeEvents","event_ids","removedAny","recalculate","membershipEvent","strippedStateEvents","invite_room_state","strippedEvent","title","getUsersReadUpTo","getReceiptsForEvent","receipt","getEventReadUpTo","ignoreSynthesized","receipts","fake","_addReceiptsToStructure","_buildReceiptCache","existingReceipt","ordering","receiptCacheByEventId","addTags","addAccountData","rank","context","eventMapper","jsonContext","presenceStatusMsg","lastActiveAgo","lastPresenceTs","currentlyActive","setPresenceEvent","firstFire","eventsToFire","currently_active","status_msg","last_active_ago","setRawDisplayName","oldUrl","getLastActiveTs","escapeRegExp","string","matchingRuleFromKindSet","kindset","rulekinds_in_order","ruleKindIndex","ruleset","ruleIndex","rawrule","templateRuleToRaw","ruleMatchesEvent","tprule","conditions","pattern","profile_tag","cond","eventFulfillsCondition","condition_functions","event_match","eventFulfillsEventMatchCondition","eventFulfillsDeviceCondition","contains_display_name","eventFulfillsDisplayNameCondition","room_member_count","eventFulfillsRoomMemberCountCondition","is","memberCount","match","ineq","rhs","parseInt","isNaN","pat","RegExp","valueForDottedKey","globToRegexp","regex","glob","p1","p2","offset","parts","firstPart","shift","thispart","matchingRuleForEventWithRulesets","rulesets","allDevNames","devname","devrules","matchingRule","pushActionsForEventAndRulesets","actionObj","tweaks","highlight","actionlist","actionobj","notify","set_tweak","_scheduleRealCallback","_realCallbackKey","first","_callbackList","_now","delayMs","runAt","TIMER_CHECK_PERIOD_MS","_runCallbacks","callbacksToRun","binarySearch","array","mid","_count","setNow","el","retryAlgorithm","queueAlgorithm","RETRY_BACKOFF_RATELIMIT","QUEUE_MESSAGES","_queues","_activeQueues","_procFn","_startProcessingQueues","queueName","_processQueue","_peekNextEvent","_removeNextEvent","attempts","waitTimeMs","queue","DEBUG","_console","element","fn","cors","waitTime","retry_after_ms","pow","selectQuery","keyRange","resultMapper","errorCode","promiseifyRequest","_syncAccumulator","LocalIndexedDBStoreBackend","indexedDBInterface","_syncAccumulator2","connect","_init","_loadAccountData","_loadSyncData","_slicedToArray3","accumulate","nextBatch","roomsData","groups","groupsData","account_data","clearDatabase","getSavedSync","copy","getJSON","setSyncData","syncToDatabase","userTuples","_persistUserPresenceEvents","_persistAccountData","_persistSyncData","put","clobber","tuples","tuple","getUserPresenceEvents","_this9","_this10","RemoteIndexedDBStoreBackend","workerScript","WorkerApi","_worker","_nextSeq","_inFlight","onmessage","_onWorkerMessage","_startPromise","_doCmd","cmd","seq","def","postMessage","command","_memory","_indexeddbLocalBackend","_indexeddbRemoteBackend","_user","_event","workerApi","Worker","_indexeddbRemoteBackend2","_indexeddbLocalBackend2","startedUp","_syncTs","_userModifiedMap","startup","userPresenceEvents","rawEvent","_user2","storeUser","save","_reallySave","filters","getSyncToken","setSyncToken","storeGroup","group","storeRoom","_onRoomMember","removeListener","getRoomSummaries","toStart","getItem","setItem","storeAccountDataEvents","webStore","removeItem","keyEndToEndDevicesForUser","E2E_PREFIX","keyEndToEndSessions","keyEndToEndInboundGroupSession","keyEndToEndRoom","getJsonItem","setJsonItem","KEY_END_TO_END_ACCOUNT","statusMap","KEY_END_TO_END_DEVICE_LIST_TRACKING_STATUS","KEY_END_TO_END_DEVICE_SYNC_TOKEN","startsWith","roomInfo","fromToken","setState","eventMap","maxTimelineEntries","inviteRooms","joinRooms","syncResponse","_accumulateRooms","_accumulateGroups","_accumulateAccountData","_accumulateRoom","category","_accumulateInviteState","_accumulateJoinState","invite_state","currentData","hasAdded","current","_currentState","_accountData","_unreadNotifications","_readReceipts","unread_notifications","ephemeral","limited","prev_batch","startIndex","_accumulateGroup","_arr","_i","cat","roomData","roomJson","evType","receiptEvent","receiptData","msgData","rollBackState","timelineEvent","prevStateEvent","prev_sender","accData","getFilterName","suffix","resolveInvitesToProfiles","pollTimeout","_peekRoomId","_currentSyncRequest","_syncState","_catchingUp","_running","_keepAliveTimer","_connectionReturnedDefer","_notifEvents","_failedSyncCount","createNewUser","_registerStateListeners","_deregisterStateListeners","removeAllListeners","leaveRooms","_mapSyncResponseToRoomArray","leaveObj","isBrandNewRoom","timelineEvents","_mapSyncEventsFormat","_processRoomEvents","peekRoom","presenceEvent","_resolveInvites","_peekPoll","_startKeepAlives","_updateSyncState","_sync","document","_onOnlineBound","_onOnline","removeEventListener","syncOptions","clientSideTimeoutMs","savedSync","isCachedResponse","syncEventData","_getGuestFilter","since","_cacheBuster","hasSyncedBefore","_onSyncError","_processSyncResponse","accountDataEvent","to_device","toDeviceEvent","_processGroupSyncEntry","inviteObj","mapSeries","joinObj","ephemeralEvents","accountDataEvents","processRoomEvent","notification_count","highlight_count","device_lists","device_one_time_keys_count","_pokeKeepAlive","groupsSection","sectionName","groupInfo","isBrandNew","arrObj","_requestedProfileInfo","inviteEvent","stateEventList","timelineEventList","_guestRooms","newState","old","_client","_timelineSet","_start","_end","_eventCount","_windowLimit","windowLimit","TimelineIndex","load","initialEventId","initialWindowSize","initFields","eventIndex","endIndex","ceil","isFulfilled","canPaginate","minIndex","maxIndex","paginate","size","makeRequest","requestLimit","pendingPaginate","retreat","advance","excess","unpaginate","delta","startOfTimeline","cappedDelta","variables","checkObjectHasNoAdditionalKeys","allowedKeys","x","y","p","propName","runPolyfills","fun","len","thisArg","T","O","A","kValue","mappedValue","ctor","superCtor","Temp","hasOwn","Properties","super_","writable","configurable","MatrixCall","webRtc","forceTURN","URL","turnServers","FALLBACK_STUN_SERVER","didConnect","candidateSendQueue","candidateSendTries","mediaPromises","screenSharingStream","CALL_TIMEOUT_MS","ERR_LOCAL_OFFER_FAILED","ERR_NO_USER_MEDIA","placeVoiceCall","checkForErrorListener","_placeCallWithConstraints","_getUserMediaVideoContraints","placeVideoCall","remoteVideoElement","localVideoElement","_tryPlayRemoteStream","placeScreenSharingCall","screenConstraints","_getScreenSharingConstraints","getUserMedia","audioConstraints","callError","playElement","queueId","play","pauseElement","pause","assignElement","srcObject","getLocalVideoElement","getRemoteVideoElement","getRemoteAudioElement","remoteAudioElement","setLocalVideoElement","localAVStream","autoplay","muted","vel","setRemoteVideoElement","setRemoteAudioElement","_tryPlayRemoteAudioStream","peerConn","_createPeerConnection","setRemoteDescription","RtcSessionDescription","offer","hookCallback","_onSetRemoteDescriptionSuccess","_onSetRemoteDescriptionError","sdp","hangupParty","stopAllMedia","signalingState","waitForLocalAVStream","_maybeGotUserMediaForAnswer","newCall","successor","suppressEvent","terminate","version","setLocalVideoMuted","setTracksEnabled","getVideoTracks","isLocalVideoMuted","isTracksEnabled","setMicrophoneMuted","getAudioTracks","isMicrophoneMuted","_maybeGotUserMediaForInvite","constraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","MediaStream","videoEl","addTrack","addStream","_getUserMediaFailed","createOffer","_gotLocalOffer","_getLocalOfferFailed","localVidEl","createAnswer","description","setLocalDescription","localDescription","_gotLocalIceCandidate","candidate","sdpMid","c","sdpMLineIndex","sendCandidate","cand","addIceCandidate","RtcIceCandidate","_onIceConnectionStateChanged","iceConnectionState","_onSignallingStateChanged","_onAddStream","id","remoteAVStream","remoteAStream","forAllTracksOnStream","onstarted","_onRemoteStreamTrackStarted","oninactive","_onRemoteStreamEnded","onended","_onRemoteStreamStarted","tracks","_sendCandidateQueue","hangupReason","shouldEmit","player","isOpenWebRTC","ael","listeners","cands","vendor","pc","RtcPeerConnection","iceTransportPolicy","iceServers","oniceconnectionstatechange","onsignalingstatechange","onicecandidate","onaddstream","screen","video","mediaSource","chromeMediaSource","chromeMediaSourceId","maxWidth","maxHeight","minFrameRate","maxFrameRate","callType","isWebkit","window","navigator","webkitGetUserMedia","audio","audioInput","exact","videoInput","ideal","forAllVideoTracksOnStream","forAllAudioTracksOnStream","w","doc","scripts","getElementById","src","mozGetUserMedia","RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection","RTCSessionDescription","webkitRTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","webkitRTCIceCandidate","mozRTCIceCandidate","escapeString","escaped","lastIndex","escapes","stringifyArray","stringifyObject","sep","object","String","fromCharCode","toUpperCase","__esModule","instance","Constructor","_defineProperty","_defineProperty2","defineProperties","props","descriptor","protoProps","staticProps","_interopRequireDefault","_setPrototypeOf","_setPrototypeOf2","_create","_typeof2","subClass","superClass","ReferenceError","_isIterable2","_isIterable3","_getIterator2","sliceIterator","arr","_n","_d","_e","_s","_symbol","_symbol2","_typeof","define","amd","Promise","_dereq_","any","SomePromiseArray","setHowMany","setUnwrap","_SomePromiseArray","2","Async","_customScheduler","_isTickUsed","_lateQueue","Queue","_normalQueue","_haveDrainedQueues","_trampolineEnabled","drainQueues","_drainQueues","_schedule","schedule","AsyncInvokeLater","receiver","arg","_queueTick","AsyncInvoke","AsyncSettlePromises","_pushOne","firstLineError","setScheduler","hasCustomScheduler","enableTrampoline","disableTrampolineIfNecessary","hasDevTools","haveItemsQueued","fatalError","isNode","process","stderr","write","exit","throwLater","invokeLater","invoke","settlePromises","_settlePromises","_drainQueue","_reset","./queue","./schedule","./util","3","INTERNAL","tryConvertToPromise","debug","calledBind","rejectThis","_","targetRejected","promiseRejectionQueued","bindingPromise","_then","bindingResolved","_bitField","_resolveCallback","bindingRejected","_propagateFrom","propagateFromFunction","_boundValue","boundValueFunction","maybePromise","_setBoundTo","_setOnCancel","_boundTo","_isBound","4","noConflict","bluebird","./promise","5","cr","callerCache","getterCache","ensureMethod","methodName","classString","caller","pop","namedGetter","indexedGetter","getGetter","canEvaluate","isIdentifier","get","propertyName","getter","isIndex","maybeGetter","6","PromiseArray","apiRejection","tryCatch","errorObj","async","_async","cancel","_warn","child","_isCancellable","_cancelBy","_isFollowing","_followee","_cancelBranched","parent","_cancellationParent","_setWillBeCancelled","_branchHasCancelled","_branchesRemainingToCancel","_enoughBranchesHaveCancelled","canceller","_invokeOnCancel","_cancel","_setCancelled","_cancelPromises","_length","_unsetOnCancel","_onCancelField","isPending","_isCancelled","isCancellable","isCancelled","_doInvokeOnCancel","onCancelCallback","internalOnly","_attachExtraTrace","_resultCancelled","_onCancel","_invokeInternalOnCancel","7","NEXT_FILTER","catchFilter","instances","boundTo","predicateLoop","item","matchesPredicate","isObject","getKeys","./es5","8","Context","_trace","CapturedTrace","peekContext","createContext","longStackTraces","contextStack","_promiseCreated","_pushContext","_popContext","_peekContext","trace","deactivateLongStackTraces","activateLongStackTraces","Promise_pushContext","Promise_popContext","Promise_PeekContext","Promise_peekContext","Promise_promiseCreated","ctx","9","generatePromiseLifecycleEventObject","defaultFireEvent","cancellationExecute","executor","onCancel","_attachCancellationCallback","cancellationAttachCancellationCallback","previousOnCancel","cancellationOnCancel","cancellationSetOnCancel","cancellationClearCancellationData","cancellationPropagateFrom","flags","branchesRemainingToCancel","bindingPropagateFrom","longStackTracesCaptureStackTrace","longStackTracesAttachExtraTrace","ignoreSelf","canAttachTrace","_parent","attachExtraTrace","__stackCleaned__","parsed","parseStackAndMessage","notEnumerableProp","checkForgottenReturns","returnValue","promiseCreated","wForgottenReturn","_returnedNonUndefined","handlerLine","creatorLine","traceLines","cleanStack","line","nodeFramePattern","test","lineMatches","parseLinePattern","firstUserLine","deprecated","replacement","shouldUseOwnTrace","warnings","warning","Warning","activeFireEvent","formatAndLogError","reconstructStack","stacks","removeDuplicateOrEmptyJumps","removeCommonRoots","currentLastIndex","currentLastLine","commonRootMeetPoint","isTraceLine","stackFramePattern","isInternalFrame","shouldIgnore","indentStackFrames","stackFramesAsArray","isSoft","formatStack","printWarning","fireRejectionEvent","localHandler","localEventFired","formatNonError","str","snip","maxChars","longStackTracesIsSupported","captureStackTrace","parseLineInfo","matches","parseLineInfoRegex","setBounds","lastLineError","firstFileName","lastFileName","firstStackLines","lastStackLines","firstIndex","bluebirdFramePattern","_promisesCreated","uncycle","unhandledRejectionHandled","possiblyUnhandledRejection","_getDomain","debugging","env","suppressUnhandledRejections","_ensurePossibleRejectionHandled","_setRejectionIsUnhandled","_notifyUnhandledRejection","_notifyUnhandledRejectionIsHandled","_setReturnedNonUndefined","_isRejectionUnhandled","_settledValue","_setUnhandledRejectionIsNotified","_unsetUnhandledRejectionIsNotified","_isUnhandledRejectionNotified","_unsetRejectionIsUnhandled","onPossiblyUnhandledRejection","domain","domainBind","onUnhandledRejectionHandled","disableLongStackTraces","Promise_captureStackTrace","_captureStackTrace","Promise_attachExtraTrace","hasLongStackTraces","fireDomEvent","CustomEvent","dispatchEvent","domEvent","toLowerCase","detail","cancelable","Event","createEvent","initCustomEvent","fireGlobalEvent","eventToObjectGenerator","promiseFulfilled","promiseRejected","promiseResolved","promiseCancelled","promiseChained","unhandledRejection","rejectionHandled","globalEventFired","domEventFired","warningsOption","_clearCancellationData","_execute","monitoring","_fireEvent","handler","nodes","stackToIndex","node","currentStack","cycleEdgeNode","currentChildLength","v8stackFramePattern","v8stackFormatter","stackTraceLimit","ignoreUntil","hasStackAfterThrow","isTTY","color","./errors","10","returner","thrower","thenReturn","thenThrow","catchThrow","_reason","caught","catchReturn","_value","11","promiseAllThis","PromiseAll","PromiseMapSeries","PromiseReduce","each","12","subError","nameProperty","defaultMessage","SubError","OperationalError","cause","_TypeError","_RangeError","es5","Objectfreeze","freeze","CancellationError","TimeoutError","AggregateError","RangeError","methods","level","indent","lines","errorTypes","RejectionError","13","isES5","getDescriptor","getOwnPropertyDescriptor","names","getOwnPropertyNames","getPrototypeOf","propertyIsWritable","set","has","proto","ObjectKeys","ObjectGetDescriptor","ObjectDefineProperty","desc","ObjectFreeze","ObjectGetPrototypeOf","ArrayIsArray","14","PromiseMap","15","PassThroughHandlerContext","called","cancelPromise","FinallyHandlerCancelReaction","finallyHandler","checkCancel","succeed","fail","reasonOrValue","isFinallyHandler","isRejected","_passThrough","lastly","tap","tapCatch","handlerOrPredicate","catchInstances","./catch_filter","16","Proxyable","promiseFromYieldHandler","yieldHandlers","traceParent","PromiseSpawn","generatorFunction","yieldHandler","internal","_finallyPromise","_promise","_stack","_generatorFunction","_receiver","_generator","_yieldHandlers","_yieldedPromise","_cancellationPhase","errors","_isResolved","_cleanup","_fulfill","_promiseCancelled","implementsReturn","returnSentinel","_continue","_promiseFulfilled","_promiseRejected","_run","_rejectCallback","bitField","_proxy","PromiseSpawn$","generator","spawn","addYieldHandler","17","last","spread","18","MappingPromiseArray","constructor$","_callback","_preservedValues","_limit","_queue","_asyncInit","concurrency","_init$","_values","preservedValues","_totalResolved","booleans","19","_resolveFromSyncValue","attempt","20","isUntypedError","wrapAsOperationalError","rErrorKey","markAsOriginatingFromRejection","nodebackForPromise","multiArgs","wrapped","maybeWrapAsError","21","spreadAdapter","nodeback","successAdapter","errorAdapter","newReason","asCallback","nodeify","adapter","22","_fulfillmentHandler0","_rejectionHandler0","_promise0","_receiver0","_resolveFromExecutor","deferResolve","deferReject","fillTypes","makeSelfResolutionError","reflectHandler","PromiseInspection","UNDEFINED_BINDING","APPLY","reflect","didFulfill","didReject","_setIsFinal","toJSON","fulfillmentValue","rejectionReason","originatesFromRejection","getNewLibraryCopy","fromNode","fromCallback","_isFateSealed","_setAsyncGuaranteed","cast","_setFulfilled","fulfilled","rejected","internalData","haveInternalData","settler","_settlePromiseCtx","_settlePromiseLateCancellationObserver","_addCallbacks","_setLength","_setRejected","_setFollowing","_isFinal","_unsetCancelled","_receiverAt","_promiseAt","_fulfillmentHandlerAt","_rejectionHandlerAt","_migrateCallback0","follower","fulfill","_migrateCallbackAt","proxyable","shouldBind","_setFollowee","synchronous","ignoreNonErrorWarnings","ensureErrorObject","hasStack","_settlePromiseFromHandler","_settlePromise","isPromise","asyncGuaranteed","_settlePromise0","_clearCallbackDataAtIndex","_fulfillPromises","_rejectPromises","toFastProperties","./any.js","./async","./bind","./call_get.js","./cancel","./context","./debuggability","./direct_resolve","./each.js","./filter.js","./finally","./generators.js","./join","./map.js","./method","./nodeback","./nodeify.js","./promise_array","./promisify.js","./props.js","./race.js","./reduce.js","./settle.js","./some.js","./synchronous_inspection","./thenables","./timers.js","./using.js","23","toResolutionValue","Map","resolveValueIfEmpty","asArray","_resolveEmptyArray","_iterate","getActualLength","shouldCopyValues","isResolved","24","propsFilter","noCopyPropsPattern","isPromisified","__isPromisified__","hasPromisified","getDataPropertyOrDefault","defaultPromisified","checkValid","suffixRegexp","keyWithoutAsyncSuffix","promisifiableMethods","inheritedDataKeys","passesDefaultFilter","defaultFilter","makeNodePromisifiedClosure","__","promisified","THIS","defaultThis","withAppended","promisifyAll","promisifier","escapeIdentRegex","promisifiedKey","makeNodePromisified","promisify","makeNodePromisifiedEval","noCopyProps","copyDescriptors","isClass","25","PropertiesPromiseArray","entries","isMap","Es6Map","mapToEntries","_isMap","castValue","extractEntry","entriesToMap","keyOffset","26","arrayMove","srcIndex","dst","dstIndex","capacity","_capacity","_front","_willBeOverCapacity","_checkCapacity","wrapMask","front","_resizeTo","oldCapacity","27","race","raceLater","28","ReductionPromiseArray","initialValue","_each","_fn","_initialValue","_currentCancellable","_eachValues","valueOrReason","gotAccum","accum","_gotAccum","gotValue","_eachComplete","_resultCancelled$","29","noAsyncScheduler","NativePromise","getNativePromise","MutationObserver","GlobalSetImmediate","setImmediate","ProcessNextTick","nextTick","isRecentNode","nativePromise","standalone","cordova","div","createElement","attributes","toggleScheduled","div2","classList","toggle","observe","scheduleToggle","disconnect","30","SettledPromiseArray","_promiseResolved","inspection","_settledValueField","settle","31","_howMany","_unwrap","_initialized","some","howMany","CANCELLATION","isArrayResolved","_canPossiblyFulfill","_getRangeError","_addFulfilled","_fulfilled","_addRejected","_checkOutcome","_rejected","32","__isCancelled","33","getThen","isAnyBluebirdPromise","doThenable","doGetThen","hasProp","34","HandleWrapper","handle","successClear","failureClear","afterValue","ms","afterTimeout","handleWrapper","35","castPreservingDisposable","thenable","_isDisposable","_getDisposer","_setDisposable","dispose","resources","iterator","tryDispose","Disposer","FunctionDisposer","maybeUnwrapDisposer","isDisposer","ResourceList","NULL","resource","doDispose","_unsetDisposable","using","input","spreadArgs","disposer","reflectedResources","resultPromise","inspections","_disposer","36","tryCatcher","tryCatchTarget","isPrimitive","maybeError","safeToString","appendee","defaultValue","hasMethods","hasMethodsOtherThanConstructor","hasThisAssignmentAndStaticMethods","thisAssignmentPattern","FakeConstructor","rident","filledRange","isError","ignore","hasEnvVariables","globalObject","Child","Parent","excludedPrototypes","Function","isExcludedProto","visitedKeys","enumeration","Symbol","ArrayFrom","itResult","it","chrome","loadTimes","versions","Number","P","root","factory","returnExports","options_onResponse","onResponse","verbose","getLogger","unsupported_options","DEFAULT_TIMEOUT","accept","serialize","encoding","multi","boundry","noop","authorization","b64_enc","run_xhr","too_late","timed_out","er","duration","_id","milliseconds","on_state_change","XHR","OPENED","HEADERS_RECEIVED","on_response","LOADING","on_loading","on_end","did","timeoutTimer","is_cors","cors_err","loading","is_crossDomain","supports_cors","req_seq","seq_id","logger","levels","formatted","formatted_logger","ajaxLocation","rurl","location","href","ajaxLocParts","exec","o1","o2","o3","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","defaults","requester","de","post","head","shortcut","couch","couch_handler","parameters","TYPE_REGEXP","param","TOKEN_REGEXP","qstring","header","getcontenttype","trim","ContentType","PARAM_REGEXP","QESC_REGEXP","getHeader","TEXT_REGEXP","QUOTE_REGEXP","core","$JSON","assign","$Object","D","setPrototypeOf","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","cof","TAG","ARG","tryGet","B","callee","__e","aFunction","that","gOPS","pIE","getSymbols","symbols","isEnum","hide","$export","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","IS_WRAP","W","expProto","C","virtual","R","U","__g","dP","createDesc","documentElement","propertyIsEnumerable","setToStringTag","IteratorPrototype","NAME","LIBRARY","redefine","Iterators","$iterCreate","ITERATOR","BUGGY","returnThis","Base","DEFAULT","IS_SET","FORCED","getMethod","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","fastKey","getWeak","onFreeze","meta","NEED","KEY","toObject","IObject","$assign","K","aLen","anObject","dPs","enumBugKeys","IE_PROTO","Empty","createDict","iframeDocument","iframe","style","display","appendChild","contentWindow","lt","IE8_DOM_DEFINE","toPrimitive","Attributes","gOPD","gOPN","windowNames","getWindowNames","$keys","hiddenKeys","getOwnPropertySymbols","ObjectProto","arrayIndexOf","fails","exp","bitmap","buggy","tag","stat","shared","uid","toInteger","defined","TO_STRING","pos","valueOf","px","wksExt","$Symbol","USE_SYMBOL","classof","getIteratorMethod","getIterator","iterFn","isIterable","addToUnscopables","step","iterated","_t","_k","Arguments","$getPrototypeOf","$at","point","DESCRIPTORS","$fails","wks","wksDefine","enumKeys","gOPNExt","$GOPD","$DP","_stringify","HIDDEN","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","protoDesc","sym","isSymbol","$defineProperty","$defineProperties","$create","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","$set","es6Symbols","wellKnownSymbols","for","keyFor","useSetter","useSimple","replacer","$replacer","TO_STRING_TAG","DOMIterables","Collection","_maxListeners","isNumber","isUndefined","defaultMaxListeners","setMaxListeners","addListener","listener","newListener","warned","g","fired","list","position","listenerCount","evlistener","emitter","defaultSetTimout","defaultClearTimeout","runTimeout","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","run","Item","browser","argv","off","prependListener","prependOnceListener","binding","cwd","chdir","umask","mapDomain","regexSeparators","ucs2decode","extra","output","counter","ucs2encode","stringFromCharCode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","numPoints","firstTime","damp","baseMinusTMin","tMax","skew","decode","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","lastIndexOf","delimiter","maxInt","tMin","encode","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","toASCII","regexNonASCII","freeExports","nodeType","freeModule","freeGlobal","punycode","overflow","not-basic","invalid-input","ucs2","eq","regexp","maxKeys","kstr","vstr","decodeURIComponent","xs","stringifyPrimitive","objectKeys","ks","hadRuntime","regeneratorRuntime","oldRuntime","innerFn","outerFn","tryLocsList","protoGenerator","Generator","_invoke","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AsyncIterator","record","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","GenStateSuspendedYield","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","iteratorSymbol","Op","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","getProto","NativeIteratorPrototype","Gp","isGeneratorFunction","genFun","awrap","iter","skipTempReset","rootEntry","rootRecord","rval","exception","loc","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","Url","slashes","port","hostname","hash","pathname","urlParse","parseQueryString","slashesDenoteHost","urlFormat","isString","urlResolve","relative","urlResolveObject","resolveObject","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","http:","https:","ftp:","gopher:","file:","querystring","queryIndex","splitter","uSplit","slashRegex","rest","simplePath","lowerProto","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","h","ae","esc","escape","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","hasTrailingSlash","up","isAbsolute"],"mappings":"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","file":"dist/browser-matrix.min.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var matrixcs = require(\"./lib/matrix\");\nmatrixcs.request(require(\"browser-request\"));\n\n// just *accessing* indexedDB throws an exception in firefox with\n// indexeddb disabled.\nvar indexedDB;\ntry {\n    indexedDB = global.indexedDB;\n} catch(e) {}\n\n// if our browser (appears to) support indexeddb, use an indexeddb crypto store.\nif (indexedDB) {\n    matrixcs.setCryptoStoreFactory(\n        function() {\n            return new matrixcs.IndexedDBCryptoStore(\n                indexedDB, \"matrix-js-sdk:crypto\"\n            );\n        }\n    );\n}\n\nmodule.exports = matrixcs; // keep export for browserify package deps\nglobal.matrixcs = matrixcs;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\nCopyright 2017 Vector Creations Ltd\nCopyright 2017 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * @module\n */\n\nexport default class Reemitter {\n    constructor(target) {\n        this.target = target;\n\n        // We keep one bound event handler for each event name so we know\n        // what event is arriving\n        this.boundHandlers = {};\n    }\n\n    _handleEvent(eventName, ...args) {\n        this.target.emit(eventName, ...args);\n    }\n\n    reEmit(source, eventNames) {\n        for (const eventName of eventNames) {\n            if (this.boundHandlers[eventName] === undefined) {\n                this.boundHandlers[eventName] = this._handleEvent.bind(this, eventName);\n            }\n            const boundHandler = this.boundHandlers[eventName];\n\n            source.on(eventName, boundHandler);\n        }\n    }\n}\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/**\n * This is an internal module. MatrixBaseApis is currently only meant to be used\n * by {@link client~MatrixClient}.\n *\n * @module base-apis\n */\n\nconst httpApi = require(\"./http-api\");\nconst utils = require(\"./utils\");\n\n/**\n * Low-level wrappers for the Matrix APIs\n *\n * @constructor\n *\n * @param {Object} opts Configuration options\n *\n * @param {string} opts.baseUrl Required. The base URL to the client-server\n * HTTP API.\n *\n * @param {string} opts.idBaseUrl Optional. The base identity server URL for\n * identity server requests.\n *\n * @param {Function} opts.request Required. The function to invoke for HTTP\n * requests. The value of this property is typically <code>require(\"request\")\n * </code> as it returns a function which meets the required interface. See\n * {@link requestFunction} for more information.\n *\n * @param {string} opts.accessToken The access_token for this user.\n *\n * @param {Number=} opts.localTimeoutMs Optional. The default maximum amount of\n * time to wait before timing out HTTP requests. If not specified, there is no\n * timeout.\n *\n * @param {Object} opts.queryParams Optional. Extra query parameters to append\n * to all requests with this client. Useful for application services which require\n * <code>?user_id=</code>.\n *\n * @param {boolean} [opts.useAuthorizationHeader = false] Set to true to use\n * Authorization header instead of query param to send the access token to the server.\n */\nfunction MatrixBaseApis(opts) {\n    utils.checkObjectHasKeys(opts, [\"baseUrl\", \"request\"]);\n\n    this.baseUrl = opts.baseUrl;\n    this.idBaseUrl = opts.idBaseUrl;\n\n    const httpOpts = {\n        baseUrl: opts.baseUrl,\n        idBaseUrl: opts.idBaseUrl,\n        accessToken: opts.accessToken,\n        request: opts.request,\n        prefix: httpApi.PREFIX_R0,\n        onlyData: true,\n        extraParams: opts.queryParams,\n        localTimeoutMs: opts.localTimeoutMs,\n        useAuthorizationHeader: opts.useAuthorizationHeader,\n    };\n    this._http = new httpApi.MatrixHttpApi(this, httpOpts);\n\n    this._txnCtr = 0;\n}\n\n/**\n * Get the Homeserver URL of this client\n * @return {string} Homeserver URL of this client\n */\nMatrixBaseApis.prototype.getHomeserverUrl = function() {\n    return this.baseUrl;\n};\n\n/**\n * Get the Identity Server URL of this client\n * @return {string} Identity Server URL of this client\n */\nMatrixBaseApis.prototype.getIdentityServerUrl = function() {\n    return this.idBaseUrl;\n};\n\n/**\n * Get the access token associated with this account.\n * @return {?String} The access_token or null\n */\nMatrixBaseApis.prototype.getAccessToken = function() {\n    return this._http.opts.accessToken || null;\n};\n\n/**\n * @return {boolean} true if there is a valid access_token for this client.\n */\nMatrixBaseApis.prototype.isLoggedIn = function() {\n    return this._http.opts.accessToken !== undefined;\n};\n\n/**\n * Make up a new transaction id\n *\n * @return {string} a new, unique, transaction id\n */\nMatrixBaseApis.prototype.makeTxnId = function() {\n    return \"m\" + new Date().getTime() + \".\" + (this._txnCtr++);\n};\n\n\n// Registration/Login operations\n// =============================\n\n/**\n * Check whether a username is available prior to registration. An error response\n * indicates an invalid/unavailable username.\n * @param {string} username The username to check the availability of.\n * @return {module:client.Promise} Resolves: to `true`.\n */\nMatrixBaseApis.prototype.isUsernameAvailable = function(username) {\n    return this._http.authedRequest(\n        undefined, \"GET\", '/register/available', { username: username },\n    ).then((response) => {\n        return response.available;\n    });\n};\n\n/**\n * @param {string} username\n * @param {string} password\n * @param {string} sessionId\n * @param {Object} auth\n * @param {Object} bindThreepids Set key 'email' to true to bind any email\n *     threepid uses during registration in the ID server. Set 'msisdn' to\n *     true to bind msisdn.\n * @param {string} guestAccessToken\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.register = function(\n    username, password,\n    sessionId, auth, bindThreepids, guestAccessToken,\n    callback,\n) {\n    // backwards compat\n    if (bindThreepids === true) {\n        bindThreepids = {email: true};\n    } else if (bindThreepids === null || bindThreepids === undefined) {\n        bindThreepids = {};\n    }\n\n    if (auth === undefined || auth === null) {\n        auth = {};\n    }\n    if (sessionId) {\n        auth.session = sessionId;\n    }\n\n    const params = {\n        auth: auth,\n    };\n    if (username !== undefined && username !== null) {\n        params.username = username;\n    }\n    if (password !== undefined && password !== null) {\n        params.password = password;\n    }\n    if (bindThreepids.email) {\n        params.bind_email = true;\n    }\n    if (bindThreepids.msisdn) {\n        params.bind_msisdn = true;\n    }\n    if (guestAccessToken !== undefined && guestAccessToken !== null) {\n        params.guest_access_token = guestAccessToken;\n    }\n    // Temporary parameter added to make the register endpoint advertise\n    // msisdn flows. This exists because there are clients that break\n    // when given stages they don't recognise. This parameter will cease\n    // to be necessary once these old clients are gone.\n    // Only send it if we send any params at all (the password param is\n    // mandatory, so if we send any params, we'll send the password param)\n    if (password !== undefined && password !== null) {\n        params.x_show_msisdn = true;\n    }\n\n    return this.registerRequest(params, undefined, callback);\n};\n\n/**\n * Register a guest account.\n * @param {Object=} opts Registration options\n * @param {Object} opts.body JSON HTTP body to provide.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.registerGuest = function(opts, callback) {\n    opts = opts || {};\n    opts.body = opts.body || {};\n    return this.registerRequest(opts.body, \"guest\", callback);\n};\n\n/**\n * @param {Object} data   parameters for registration request\n * @param {string=} kind  type of user to register. may be \"guest\"\n * @param {module:client.callback=} callback\n * @return {module:client.Promise} Resolves: to the /register response\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.registerRequest = function(data, kind, callback) {\n    const params = {};\n    if (kind) {\n        params.kind = kind;\n    }\n\n    return this._http.request(\n        callback, \"POST\", \"/register\", params, data,\n    );\n};\n\n/**\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.loginFlows = function(callback) {\n    return this._http.request(callback, \"GET\", \"/login\");\n};\n\n/**\n * @param {string} loginType\n * @param {Object} data\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.login = function(loginType, data, callback) {\n    const login_data = {\n        type: loginType,\n    };\n\n    // merge data into login_data\n    utils.extend(login_data, data);\n\n    return this._http.authedRequest(\n        callback, \"POST\", \"/login\", undefined, login_data,\n    );\n};\n\n/**\n * @param {string} user\n * @param {string} password\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.loginWithPassword = function(user, password, callback) {\n    return this.login(\"m.login.password\", {\n        user: user,\n        password: password,\n    }, callback);\n};\n\n/**\n * @param {string} relayState URL Callback after SAML2 Authentication\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.loginWithSAML2 = function(relayState, callback) {\n    return this.login(\"m.login.saml2\", {\n        relay_state: relayState,\n    }, callback);\n};\n\n/**\n * @param {string} redirectUrl The URL to redirect to after the HS\n * authenticates with CAS.\n * @return {string} The HS URL to hit to begin the CAS login process.\n */\nMatrixBaseApis.prototype.getCasLoginUrl = function(redirectUrl) {\n    return this._http.getUrl(\"/login/cas/redirect\", {\n        \"redirectUrl\": redirectUrl,\n    }, httpApi.PREFIX_UNSTABLE);\n};\n\n/**\n * @param {string} token Login token previously received from homeserver\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.loginWithToken = function(token, callback) {\n    return this.login(\"m.login.token\", {\n        token: token,\n    }, callback);\n};\n\n\n/**\n * Logs out the current session.\n * Obviously, further calls that require authorisation should fail after this\n * method is called. The state of the MatrixClient object is not affected:\n * it is up to the caller to either reset or destroy the MatrixClient after\n * this method succeeds.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: On success, the empty object\n */\nMatrixBaseApis.prototype.logout = function(callback) {\n    return this._http.authedRequest(\n        callback, \"POST\", '/logout',\n    );\n};\n\n/**\n * Deactivates the logged-in account.\n * Obviously, further calls that require authorisation should fail after this\n * method is called. The state of the MatrixClient object is not affected:\n * it is up to the caller to either reset or destroy the MatrixClient after\n * this method succeeds.\n * @param {object} auth Optional. Auth data to supply for User-Interactive auth.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: On success, the empty object\n */\nMatrixBaseApis.prototype.deactivateAccount = function(auth, callback) {\n    let body = {};\n    if (auth) {\n        body = {\n            auth: auth,\n        };\n    }\n    return this._http.authedRequestWithPrefix(\n        callback, \"POST\", '/account/deactivate', undefined, body, httpApi.PREFIX_UNSTABLE,\n    );\n};\n\n/**\n * Get the fallback URL to use for unknown interactive-auth stages.\n *\n * @param {string} loginType     the type of stage being attempted\n * @param {string} authSessionId the auth session ID provided by the homeserver\n *\n * @return {string} HS URL to hit to for the fallback interface\n */\nMatrixBaseApis.prototype.getFallbackAuthUrl = function(loginType, authSessionId) {\n    const path = utils.encodeUri(\"/auth/$loginType/fallback/web\", {\n        $loginType: loginType,\n    });\n\n    return this._http.getUrl(path, {\n        session: authSessionId,\n    }, httpApi.PREFIX_R0);\n};\n\n// Room operations\n// ===============\n\n/**\n * Create a new room.\n * @param {Object} options a list of options to pass to the /createRoom API.\n * @param {string} options.room_alias_name The alias localpart to assign to\n * this room.\n * @param {string} options.visibility Either 'public' or 'private'.\n * @param {string[]} options.invite A list of user IDs to invite to this room.\n * @param {string} options.name The name to give this room.\n * @param {string} options.topic The topic to give this room.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: <code>{room_id: {string},\n * room_alias: {string(opt)}}</code>\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.createRoom = function(options, callback) {\n    // valid options include: room_alias_name, visibility, invite\n    return this._http.authedRequest(\n        callback, \"POST\", \"/createRoom\", undefined, options,\n    );\n};\n\n/**\n * @param {string} roomId\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.roomState = function(roomId, callback) {\n    const path = utils.encodeUri(\"/rooms/$roomId/state\", {$roomId: roomId});\n    return this._http.authedRequest(callback, \"GET\", path);\n};\n\n/**\n * @param {string} groupId\n * @return {module:client.Promise} Resolves: Group summary object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getGroupSummary = function(groupId) {\n    const path = utils.encodeUri(\"/groups/$groupId/summary\", {$groupId: groupId});\n    return this._http.authedRequest(undefined, \"GET\", path);\n};\n\n/**\n * @param {string} groupId\n * @return {module:client.Promise} Resolves: Group profile object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getGroupProfile = function(groupId) {\n    const path = utils.encodeUri(\"/groups/$groupId/profile\", {$groupId: groupId});\n    return this._http.authedRequest(undefined, \"GET\", path);\n};\n\n/**\n * @param {string} groupId\n * @param {Object} profile The group profile object\n * @param {string=} profile.name Name of the group\n * @param {string=} profile.avatar_url MXC avatar URL\n * @param {string=} profile.short_description A short description of the room\n * @param {string=} profile.long_description A longer HTML description of the room\n * @return {module:client.Promise} Resolves: Empty object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.setGroupProfile = function(groupId, profile) {\n    const path = utils.encodeUri(\"/groups/$groupId/profile\", {$groupId: groupId});\n    return this._http.authedRequest(\n        undefined, \"POST\", path, undefined, profile,\n    );\n};\n\n/**\n * @param {string} groupId\n * @return {module:client.Promise} Resolves: Group users list object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getGroupUsers = function(groupId) {\n    const path = utils.encodeUri(\"/groups/$groupId/users\", {$groupId: groupId});\n    return this._http.authedRequest(undefined, \"GET\", path);\n};\n\n/**\n * @param {string} groupId\n * @param {string} userId\n * @return {module:client.Promise} Resolves: Empty object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.inviteUserToGroup = function(groupId, userId) {\n    const path = utils.encodeUri(\n        \"/groups/$groupId/admin/users/invite/$userId\",\n        {$groupId: groupId, $userId: userId},\n    );\n    return this._http.authedRequest(undefined, \"PUT\", path, undefined, {});\n};\n\n/**\n * @param {string} groupId\n * @param {string} userId\n * @return {module:client.Promise} Resolves: Empty object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.removeUserFromGroup = function(groupId, userId) {\n    const path = utils.encodeUri(\n        \"/groups/$groupId/admin/users/remove/$userId\",\n        {$groupId: groupId, $userId: userId},\n    );\n    return this._http.authedRequest(undefined, \"PUT\", path, undefined, {});\n};\n\n/**\n * @param {string} groupId\n * @return {module:client.Promise} Resolves: Empty object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.acceptGroupInvite = function(groupId) {\n    const path = utils.encodeUri(\n        \"/groups/$groupId/self/accept_invite\",\n        {$groupId: groupId},\n    );\n    return this._http.authedRequest(undefined, \"PUT\", path, undefined, {});\n};\n\n/**\n * @param {string} groupId\n * @return {module:client.Promise} Resolves: Empty object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.leaveGroup = function(groupId) {\n    const path = utils.encodeUri(\n        \"/groups/$groupId/self/leave\",\n        {$groupId: groupId},\n    );\n    return this._http.authedRequest(undefined, \"PUT\", path, undefined, {});\n};\n\n/**\n * @return {module:client.Promise} Resolves: The groups to which the user is joined\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getJoinedGroups = function() {\n    const path = utils.encodeUri(\"/joined_groups\");\n    return this._http.authedRequest(undefined, \"GET\", path);\n};\n\n/**\n * @param {Object} content Request content\n * @param {string} content.localpart The local part of the desired group ID\n * @param {Object} content.profile Group profile object\n * @return {module:client.Promise} Resolves: Object with key group_id: id of the created group\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.createGroup = function(content) {\n    const path = utils.encodeUri(\"/create_group\");\n    return this._http.authedRequest(\n        undefined, \"POST\", path, undefined, content,\n    );\n};\n\n/**\n * @param {string[]} userIds List of user IDs\n * @return {module:client.Promise} Resolves: Object as exmaple below\n *\n *     {\n *         \"users\": {\n *             \"@bob:example.com\": {\n *                 \"+example:example.com\"\n *             }\n *         }\n *     }\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getPublicisedGroups = function(userIds) {\n    const path = utils.encodeUri(\"/publicised_groups\");\n    return this._http.authedRequest(\n        undefined, \"POST\", path, undefined, { user_ids: userIds },\n    );\n};\n\n/**\n * Retrieve a state event.\n * @param {string} roomId\n * @param {string} eventType\n * @param {string} stateKey\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getStateEvent = function(roomId, eventType, stateKey, callback) {\n    const pathParams = {\n        $roomId: roomId,\n        $eventType: eventType,\n        $stateKey: stateKey,\n    };\n    let path = utils.encodeUri(\"/rooms/$roomId/state/$eventType\", pathParams);\n    if (stateKey !== undefined) {\n        path = utils.encodeUri(path + \"/$stateKey\", pathParams);\n    }\n    return this._http.authedRequest(\n        callback, \"GET\", path,\n    );\n};\n\n/**\n * @param {string} roomId\n * @param {string} eventType\n * @param {Object} content\n * @param {string} stateKey\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.sendStateEvent = function(roomId, eventType, content, stateKey,\n                                                 callback) {\n    const pathParams = {\n        $roomId: roomId,\n        $eventType: eventType,\n        $stateKey: stateKey,\n    };\n    let path = utils.encodeUri(\"/rooms/$roomId/state/$eventType\", pathParams);\n    if (stateKey !== undefined) {\n        path = utils.encodeUri(path + \"/$stateKey\", pathParams);\n    }\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, content,\n    );\n};\n\n/**\n * @param {string} roomId\n * @param {string} eventId\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.redactEvent = function(roomId, eventId, callback) {\n    const path = utils.encodeUri(\"/rooms/$roomId/redact/$eventId\", {\n        $roomId: roomId,\n        $eventId: eventId,\n    });\n    return this._http.authedRequest(callback, \"POST\", path, undefined, {});\n};\n\n/**\n * @param {string} roomId\n * @param {Number} limit\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.roomInitialSync = function(roomId, limit, callback) {\n    if (utils.isFunction(limit)) {\n        callback = limit; limit = undefined;\n    }\n    const path = utils.encodeUri(\"/rooms/$roomId/initialSync\",\n        {$roomId: roomId},\n    );\n    if (!limit) {\n        limit = 30;\n    }\n    return this._http.authedRequest(\n        callback, \"GET\", path, { limit: limit },\n    );\n};\n\n/**\n * Set a marker to indicate the point in a room before which the user has read every\n * event. This can be retrieved from room account data (the event type is `m.fully_read`)\n * and displayed as a horizontal line in the timeline that is visually distinct to the\n * position of the user's own read receipt.\n * @param {string} roomId ID of the room that has been read\n * @param {string} rmEventId ID of the event that has been read\n * @param {string} rrEventId ID of the event tracked by the read receipt. This is here\n * for convenience because the RR and the RM are commonly updated at the same time as\n * each other. Optional.\n * @return {module:client.Promise} Resolves: the empty object, {}.\n */\nMatrixBaseApis.prototype.setRoomReadMarkersHttpRequest =\n                                function(roomId, rmEventId, rrEventId) {\n    const path = utils.encodeUri(\"/rooms/$roomId/read_markers\", {\n        $roomId: roomId,\n    });\n\n    const content = {\n        \"m.fully_read\": rmEventId,\n        \"m.read\": rrEventId,\n    };\n\n    return this._http.authedRequest(\n        undefined, \"POST\", path, undefined, content,\n    );\n};\n\n\n// Room Directory operations\n// =========================\n\n/**\n * @param {Object} options Options for this request\n * @param {string} options.server The remote server to query for the room list.\n *                                Optional. If unspecified, get the local home\n *                                server's public room list.\n * @param {number} options.limit Maximum number of entries to return\n * @param {string} options.since Token to paginate from\n * @param {object} options.filter Filter parameters\n * @param {string} options.filter.generic_search_term String to search for\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.publicRooms = function(options, callback) {\n    if (typeof(options) == 'function') {\n        callback = options;\n        options = {};\n    }\n    if (options === undefined) {\n        options = {};\n    }\n\n    const query_params = {};\n    if (options.server) {\n        query_params.server = options.server;\n        delete options.server;\n    }\n\n    if (Object.keys(options).length === 0 && Object.keys(query_params).length === 0) {\n        return this._http.authedRequest(callback, \"GET\", \"/publicRooms\");\n    } else {\n        return this._http.authedRequest(\n            callback, \"POST\", \"/publicRooms\", query_params, options,\n        );\n    }\n};\n\n/**\n * Create an alias to room ID mapping.\n * @param {string} alias The room alias to create.\n * @param {string} roomId The room ID to link the alias to.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO.\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.createAlias = function(alias, roomId, callback) {\n    const path = utils.encodeUri(\"/directory/room/$alias\", {\n        $alias: alias,\n    });\n    const data = {\n        room_id: roomId,\n    };\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, data,\n    );\n};\n\n/**\n * Delete an alias to room ID mapping.  This alias must be on your local server\n * and you must have sufficient access to do this operation.\n * @param {string} alias The room alias to delete.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO.\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.deleteAlias = function(alias, callback) {\n    const path = utils.encodeUri(\"/directory/room/$alias\", {\n        $alias: alias,\n    });\n    return this._http.authedRequest(\n        callback, \"DELETE\", path, undefined, undefined,\n    );\n};\n\n/**\n * Get room info for the given alias.\n * @param {string} alias The room alias to resolve.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: Object with room_id and servers.\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getRoomIdForAlias = function(alias, callback) {\n    // TODO: deprecate this or resolveRoomAlias\n    const path = utils.encodeUri(\"/directory/room/$alias\", {\n        $alias: alias,\n    });\n    return this._http.authedRequest(\n        callback, \"GET\", path,\n    );\n};\n\n/**\n * @param {string} roomAlias\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.resolveRoomAlias = function(roomAlias, callback) {\n    // TODO: deprecate this or getRoomIdForAlias\n    const path = utils.encodeUri(\"/directory/room/$alias\", {$alias: roomAlias});\n    return this._http.request(callback, \"GET\", path);\n};\n\n/**\n * Get the visibility of a room in the current HS's room directory\n * @param {string} roomId\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getRoomDirectoryVisibility =\n                                function(roomId, callback) {\n    const path = utils.encodeUri(\"/directory/list/room/$roomId\", {\n        $roomId: roomId,\n    });\n    return this._http.authedRequest(callback, \"GET\", path);\n};\n\n/**\n * Set the visbility of a room in the current HS's room directory\n * @param {string} roomId\n * @param {string} visibility \"public\" to make the room visible\n *                 in the public directory, or \"private\" to make\n *                 it invisible.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: result object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.setRoomDirectoryVisibility =\n                                function(roomId, visibility, callback) {\n    const path = utils.encodeUri(\"/directory/list/room/$roomId\", {\n        $roomId: roomId,\n    });\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, { \"visibility\": visibility },\n    );\n};\n\n/**\n * Set the visbility of a room bridged to a 3rd party network in\n * the current HS's room directory.\n * @param {string} networkId the network ID of the 3rd party\n *                 instance under which this room is published under.\n * @param {string} roomId\n * @param {string} visibility \"public\" to make the room visible\n *                 in the public directory, or \"private\" to make\n *                 it invisible.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: result object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.setRoomDirectoryVisibilityAppService =\n                                function(networkId, roomId, visibility, callback) {\n    const path = utils.encodeUri(\"/directory/list/appservice/$networkId/$roomId\", {\n        $networkId: networkId,\n        $roomId: roomId,\n    });\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, { \"visibility\": visibility },\n    );\n};\n\n// User Directory Operations\n// =========================\n\n/**\n * Query the user directory with a term matching user IDs, display names and domains.\n * @param {object} opts options\n * @param {string} opts.term the term with which to search.\n * @param {number} opts.limit the maximum number of results to return. The server will\n *                 apply a limit if unspecified.\n * @return {module:client.Promise} Resolves: an array of results.\n */\nMatrixBaseApis.prototype.searchUserDirectory = function(opts) {\n    const body = {\n        search_term: opts.term,\n    };\n\n    if (opts.limit !== undefined) {\n        body.limit = opts.limit;\n    }\n\n    return this._http.authedRequest(\n        undefined, \"POST\", \"/user_directory/search\", undefined, body,\n    );\n};\n\n\n// Media operations\n// ================\n\n/**\n * Upload a file to the media repository on the home server.\n *\n * @param {object} file The object to upload. On a browser, something that\n *   can be sent to XMLHttpRequest.send (typically a File).  Under node.js,\n *   a a Buffer, String or ReadStream.\n *\n * @param {object} opts  options object\n *\n * @param {string=} opts.name   Name to give the file on the server. Defaults\n *   to <tt>file.name</tt>.\n *\n * @param {string=} opts.type   Content-type for the upload. Defaults to\n *   <tt>file.type</tt>, or <tt>applicaton/octet-stream</tt>.\n *\n * @param {boolean=} opts.rawResponse Return the raw body, rather than\n *   parsing the JSON. Defaults to false (except on node.js, where it\n *   defaults to true for backwards compatibility).\n *\n * @param {boolean=} opts.onlyContentUri Just return the content URI,\n *   rather than the whole body. Defaults to false (except on browsers,\n *   where it defaults to true for backwards compatibility). Ignored if\n *   opts.rawResponse is true.\n *\n * @param {Function=} opts.callback Deprecated. Optional. The callback to\n *    invoke on success/failure. See the promise return values for more\n *    information.\n *\n * @param {Function=} opts.progressHandler Optional. Called when a chunk of\n *    data has been uploaded, with an object containing the fields `loaded`\n *    (number of bytes transferred) and `total` (total size, if known).\n *\n * @return {module:client.Promise} Resolves to response object, as\n *    determined by this.opts.onlyData, opts.rawResponse, and\n *    opts.onlyContentUri.  Rejects with an error (usually a MatrixError).\n */\nMatrixBaseApis.prototype.uploadContent = function(file, opts) {\n    return this._http.uploadContent(file, opts);\n};\n\n/**\n * Cancel a file upload in progress\n * @param {module:client.Promise} promise The promise returned from uploadContent\n * @return {boolean} true if canceled, otherwise false\n */\nMatrixBaseApis.prototype.cancelUpload = function(promise) {\n    return this._http.cancelUpload(promise);\n};\n\n/**\n * Get a list of all file uploads in progress\n * @return {array} Array of objects representing current uploads.\n * Currently in progress is element 0. Keys:\n *  - promise: The promise associated with the upload\n *  - loaded: Number of bytes uploaded\n *  - total: Total number of bytes to upload\n */\nMatrixBaseApis.prototype.getCurrentUploads = function() {\n    return this._http.getCurrentUploads();\n};\n\n\n// Profile operations\n// ==================\n\n/**\n * @param {string} userId\n * @param {string} info The kind of info to retrieve (e.g. 'displayname',\n * 'avatar_url').\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getProfileInfo = function(userId, info, callback) {\n    if (utils.isFunction(info)) {\n        callback = info; info = undefined;\n    }\n\n    const path = info ?\n    utils.encodeUri(\"/profile/$userId/$info\",\n             { $userId: userId, $info: info }) :\n    utils.encodeUri(\"/profile/$userId\",\n             { $userId: userId });\n    return this._http.authedRequest(callback, \"GET\", path);\n};\n\n\n// Account operations\n// ==================\n\n/**\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getThreePids = function(callback) {\n    const path = \"/account/3pid\";\n    return this._http.authedRequest(\n        callback, \"GET\", path, undefined, undefined,\n    );\n};\n\n/**\n * @param {Object} creds\n * @param {boolean} bind\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.addThreePid = function(creds, bind, callback) {\n    const path = \"/account/3pid\";\n    const data = {\n        'threePidCreds': creds,\n        'bind': bind,\n    };\n    return this._http.authedRequest(\n        callback, \"POST\", path, null, data,\n    );\n};\n\n/**\n * @param {string} medium The threepid medium (eg. 'email')\n * @param {string} address The threepid address (eg. 'bob@example.com')\n *        this must be as returned by getThreePids.\n * @return {module:client.Promise} Resolves: The server response on success\n *     (generally the empty JSON object)\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.deleteThreePid = function(medium, address) {\n    const path = \"/account/3pid/delete\";\n    const data = {\n        'medium': medium,\n        'address': address,\n    };\n    return this._http.authedRequestWithPrefix(\n        undefined, \"POST\", path, null, data, httpApi.PREFIX_UNSTABLE,\n    );\n};\n\n/**\n * Make a request to change your password.\n * @param {Object} authDict\n * @param {string} newPassword The new desired password.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.setPassword = function(authDict, newPassword, callback) {\n    const path = \"/account/password\";\n    const data = {\n        'auth': authDict,\n        'new_password': newPassword,\n    };\n\n    return this._http.authedRequest(\n        callback, \"POST\", path, null, data,\n    );\n};\n\n\n// Device operations\n// =================\n\n/**\n * Gets all devices recorded for the logged-in user\n * @return {module:client.Promise} Resolves: result object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getDevices = function() {\n    const path = \"/devices\";\n    return this._http.authedRequestWithPrefix(\n        undefined, \"GET\", path, undefined, undefined,\n        httpApi.PREFIX_UNSTABLE,\n    );\n};\n\n/**\n * Update the given device\n *\n * @param {string} device_id  device to update\n * @param {Object} body       body of request\n * @return {module:client.Promise} Resolves: result object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.setDeviceDetails = function(device_id, body) {\n    const path = utils.encodeUri(\"/devices/$device_id\", {\n        $device_id: device_id,\n    });\n\n\n    return this._http.authedRequestWithPrefix(\n        undefined, \"PUT\", path, undefined, body,\n        httpApi.PREFIX_UNSTABLE,\n    );\n};\n\n/**\n * Delete the given device\n *\n * @param {string} device_id  device to delete\n * @param {object} auth Optional. Auth data to supply for User-Interactive auth.\n * @return {module:client.Promise} Resolves: result object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.deleteDevice = function(device_id, auth) {\n    const path = utils.encodeUri(\"/devices/$device_id\", {\n        $device_id: device_id,\n    });\n\n    const body = {};\n\n    if (auth) {\n        body.auth = auth;\n    }\n\n    return this._http.authedRequestWithPrefix(\n        undefined, \"DELETE\", path, undefined, body,\n        httpApi.PREFIX_UNSTABLE,\n    );\n};\n\n\n// Push operations\n// ===============\n\n/**\n * Gets all pushers registered for the logged-in user\n *\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: Array of objects representing pushers\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getPushers = function(callback) {\n    const path = \"/pushers\";\n    return this._http.authedRequest(\n        callback, \"GET\", path, undefined, undefined,\n    );\n};\n\n/**\n * Adds a new pusher or updates an existing pusher\n *\n * @param {Object} pusher Object representing a pusher\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: Empty json object on success\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.setPusher = function(pusher, callback) {\n    const path = \"/pushers/set\";\n    return this._http.authedRequest(\n        callback, \"POST\", path, null, pusher,\n    );\n};\n\n/**\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.getPushRules = function(callback) {\n    return this._http.authedRequest(callback, \"GET\", \"/pushrules/\");\n};\n\n/**\n * @param {string} scope\n * @param {string} kind\n * @param {string} ruleId\n * @param {Object} body\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.addPushRule = function(scope, kind, ruleId, body, callback) {\n    // NB. Scope not uri encoded because devices need the '/'\n    const path = utils.encodeUri(\"/pushrules/\" + scope + \"/$kind/$ruleId\", {\n        $kind: kind,\n        $ruleId: ruleId,\n    });\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, body,\n    );\n};\n\n/**\n * @param {string} scope\n * @param {string} kind\n * @param {string} ruleId\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.deletePushRule = function(scope, kind, ruleId, callback) {\n    // NB. Scope not uri encoded because devices need the '/'\n    const path = utils.encodeUri(\"/pushrules/\" + scope + \"/$kind/$ruleId\", {\n        $kind: kind,\n        $ruleId: ruleId,\n    });\n    return this._http.authedRequest(callback, \"DELETE\", path);\n};\n\n/**\n * Enable or disable a push notification rule.\n * @param {string} scope\n * @param {string} kind\n * @param {string} ruleId\n * @param {boolean} enabled\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: result object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.setPushRuleEnabled = function(scope, kind,\n                                                     ruleId, enabled, callback) {\n    const path = utils.encodeUri(\"/pushrules/\" + scope + \"/$kind/$ruleId/enabled\", {\n        $kind: kind,\n        $ruleId: ruleId,\n    });\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, {\"enabled\": enabled},\n    );\n};\n\n/**\n * Set the actions for a push notification rule.\n * @param {string} scope\n * @param {string} kind\n * @param {string} ruleId\n * @param {array} actions\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: result object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.setPushRuleActions = function(scope, kind,\n                                                     ruleId, actions, callback) {\n    const path = utils.encodeUri(\"/pushrules/\" + scope + \"/$kind/$ruleId/actions\", {\n        $kind: kind,\n        $ruleId: ruleId,\n    });\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, {\"actions\": actions},\n    );\n};\n\n\n// Search\n// ======\n\n/**\n * Perform a server-side search.\n * @param {Object} opts\n * @param {string} opts.next_batch the batch token to pass in the query string\n * @param {Object} opts.body the JSON object to pass to the request body.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.search = function(opts, callback) {\n    const queryparams = {};\n    if (opts.next_batch) {\n        queryparams.next_batch = opts.next_batch;\n    }\n    return this._http.authedRequest(\n        callback, \"POST\", \"/search\", queryparams, opts.body,\n    );\n};\n\n// Crypto\n// ======\n\n/**\n * Upload keys\n *\n * @param {Object} content  body of upload request\n *\n * @param {Object=} opts\n *\n * @param {string=} opts.device_id  explicit device_id to use for upload\n *    (default is to use the same as that used during auth).\n *\n * @param {module:client.callback=} callback\n *\n * @return {module:client.Promise} Resolves: result object. Rejects: with\n *     an error response ({@link module:http-api.MatrixError}).\n */\nMatrixBaseApis.prototype.uploadKeysRequest = function(content, opts, callback) {\n    opts = opts || {};\n    const deviceId = opts.device_id;\n    let path;\n    if (deviceId) {\n        path = utils.encodeUri(\"/keys/upload/$deviceId\", {\n            $deviceId: deviceId,\n        });\n    } else {\n        path = \"/keys/upload\";\n    }\n    return this._http.authedRequestWithPrefix(\n        callback, \"POST\", path, undefined, content, httpApi.PREFIX_UNSTABLE,\n    );\n};\n\n/**\n * Download device keys\n *\n * @param {string[]} userIds  list of users to get keys for\n *\n * @param {Object=} opts\n *\n * @param {string=} opts.token   sync token to pass in the query request, to help\n *   the HS give the most recent results\n *\n * @return {module:client.Promise} Resolves: result object. Rejects: with\n *     an error response ({@link module:http-api.MatrixError}).\n */\nMatrixBaseApis.prototype.downloadKeysForUsers = function(userIds, opts) {\n    if (utils.isFunction(opts)) {\n        // opts used to be 'callback'.\n        throw new Error(\n            'downloadKeysForUsers no longer accepts a callback parameter',\n        );\n    }\n    opts = opts || {};\n\n    const content = {\n        device_keys: {},\n    };\n    if ('token' in opts) {\n        content.token = opts.token;\n    }\n    userIds.forEach((u) => {\n        content.device_keys[u] = {};\n    });\n\n    return this._http.authedRequestWithPrefix(\n        undefined, \"POST\", \"/keys/query\", undefined, content,\n        httpApi.PREFIX_UNSTABLE,\n    );\n};\n\n/**\n * Claim one-time keys\n *\n * @param {string[]} devices  a list of [userId, deviceId] pairs\n *\n * @param {string} [key_algorithm = signed_curve25519]  desired key type\n *\n * @return {module:client.Promise} Resolves: result object. Rejects: with\n *     an error response ({@link module:http-api.MatrixError}).\n */\nMatrixBaseApis.prototype.claimOneTimeKeys = function(devices, key_algorithm) {\n    const queries = {};\n\n    if (key_algorithm === undefined) {\n        key_algorithm = \"signed_curve25519\";\n    }\n\n    for (let i = 0; i < devices.length; ++i) {\n        const userId = devices[i][0];\n        const deviceId = devices[i][1];\n        const query = queries[userId] || {};\n        queries[userId] = query;\n        query[deviceId] = key_algorithm;\n    }\n    const content = {one_time_keys: queries};\n    return this._http.authedRequestWithPrefix(\n        undefined, \"POST\", \"/keys/claim\", undefined, content,\n        httpApi.PREFIX_UNSTABLE,\n    );\n};\n\n/**\n * Ask the server for a list of users who have changed their device lists\n * between a pair of sync tokens\n *\n * @param {string} oldToken\n * @param {string} newToken\n *\n * @return {module:client.Promise} Resolves: result object. Rejects: with\n *     an error response ({@link module:http-api.MatrixError}).\n */\nMatrixBaseApis.prototype.getKeyChanges = function(oldToken, newToken) {\n    const qps = {\n        from: oldToken,\n        to: newToken,\n    };\n\n    return this._http.authedRequestWithPrefix(\n        undefined, \"GET\", \"/keys/changes\", qps, undefined,\n        httpApi.PREFIX_UNSTABLE,\n    );\n};\n\n\n// Identity Server Operations\n// ==========================\n\n/**\n * Requests an email verification token directly from an Identity Server.\n *\n * Note that the Home Server offers APIs to proxy this API for specific\n * situations, allowing for better feedback to the user.\n *\n * @param {string} email The email address to request a token for\n * @param {string} clientSecret A secret binary string generated by the client.\n *                 It is recommended this be around 16 ASCII characters.\n * @param {number} sendAttempt If an identity server sees a duplicate request\n *                 with the same sendAttempt, it will not send another email.\n *                 To request another email to be sent, use a larger value for\n *                 the sendAttempt param as was used in the previous request.\n * @param {string} nextLink Optional If specified, the client will be redirected\n *                 to this link after validation.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n * @throws Error if No ID server is set\n */\nMatrixBaseApis.prototype.requestEmailToken = function(email, clientSecret,\n                                                    sendAttempt, nextLink, callback) {\n    const params = {\n        client_secret: clientSecret,\n        email: email,\n        send_attempt: sendAttempt,\n        next_link: nextLink,\n    };\n    return this._http.idServerRequest(\n        callback, \"POST\", \"/validate/email/requestToken\",\n        params, httpApi.PREFIX_IDENTITY_V1,\n    );\n};\n\n/**\n * Submits an MSISDN token to the identity server\n *\n * This is used when submitting the code sent by SMS to a phone number.\n * The ID server has an equivalent API for email but the js-sdk does\n * not expose this, since email is normally validated by the user clicking\n * a link rather than entering a code.\n *\n * @param {string} sid The sid given in the response to requestToken\n * @param {string} clientSecret A secret binary string generated by the client.\n *                 This must be the same value submitted in the requestToken call.\n * @param {string} token The token, as enetered by the user.\n *\n * @return {module:client.Promise} Resolves: Object, currently with no parameters.\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n * @throws Error if No ID server is set\n */\nMatrixBaseApis.prototype.submitMsisdnToken = function(sid, clientSecret, token) {\n    const params = {\n        sid: sid,\n        client_secret: clientSecret,\n        token: token,\n    };\n    return this._http.idServerRequest(\n        undefined, \"POST\", \"/validate/msisdn/submitToken\",\n        params, httpApi.PREFIX_IDENTITY_V1,\n    );\n};\n\n/**\n * Looks up the public Matrix ID mapping for a given 3rd party\n * identifier from the Identity Server\n * @param {string} medium The medium of the threepid, eg. 'email'\n * @param {string} address The textual address of the threepid\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: A threepid mapping\n *                                 object or the empty object if no mapping\n *                                 exists\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixBaseApis.prototype.lookupThreePid = function(medium, address, callback) {\n    const params = {\n        medium: medium,\n        address: address,\n    };\n    return this._http.idServerRequest(\n        callback, \"GET\", \"/lookup\",\n        params, httpApi.PREFIX_IDENTITY_V1,\n    );\n};\n\n\n// Direct-to-device messaging\n// ==========================\n\n/**\n * Send an event to a specific list of devices\n *\n * @param {string} eventType  type of event to send\n * @param {Object.<string, Object<string, Object>>} contentMap\n *    content to send. Map from user_id to device_id to content object.\n * @param {string=} txnId     transaction id. One will be made up if not\n *    supplied.\n * @return {module:client.Promise} Resolves to the result object\n */\nMatrixBaseApis.prototype.sendToDevice = function(\n    eventType, contentMap, txnId,\n) {\n    const path = utils.encodeUri(\"/sendToDevice/$eventType/$txnId\", {\n        $eventType: eventType,\n        $txnId: txnId ? txnId : this.makeTxnId(),\n    });\n\n    const body = {\n        messages: contentMap,\n    };\n\n    return this._http.authedRequestWithPrefix(\n        undefined, \"PUT\", path, undefined, body,\n        httpApi.PREFIX_UNSTABLE,\n    );\n};\n\n// Third party Lookup API\n// ======================\n\n/**\n * Get the third party protocols that can be reached using\n * this HS\n * @return {module:client.Promise} Resolves to the result object\n */\nMatrixBaseApis.prototype.getThirdpartyProtocols = function() {\n    return this._http.authedRequestWithPrefix(\n        undefined, \"GET\", \"/thirdparty/protocols\", undefined, undefined,\n        httpApi.PREFIX_UNSTABLE,\n    ).then((response) => {\n        // sanity check\n        if (!response || typeof(response) !== 'object') {\n            throw new Error(\n                `/thirdparty/protocols did not return an object: ${response}`,\n            );\n        }\n        return response;\n    });\n};\n\n/**\n * Get information on how a specific place on a third party protocol\n * may be reached.\n * @param {string} protocol The protocol given in getThirdpartyProtocols()\n * @param {object} params Protocol-specific parameters, as given in th\n *                        response to getThirdpartyProtocols()\n * @return {module:client.Promise} Resolves to the result object\n */\nMatrixBaseApis.prototype.getThirdpartyLocation = function(protocol, params) {\n    const path = utils.encodeUri(\"/thirdparty/location/$protocol\", {\n        $protocol: protocol,\n    });\n\n    return this._http.authedRequestWithPrefix(\n        undefined, \"GET\", path, params, undefined,\n        httpApi.PREFIX_UNSTABLE,\n    );\n};\n\n/**\n * MatrixBaseApis object\n */\nmodule.exports = MatrixBaseApis;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\nconst PushProcessor = require('./pushprocessor');\n\n/**\n * This is an internal module. See {@link MatrixClient} for the public class.\n * @module client\n */\nconst EventEmitter = require(\"events\").EventEmitter;\nimport Promise from 'bluebird';\nconst url = require('url');\n\nconst httpApi = require(\"./http-api\");\nconst MatrixEvent = require(\"./models/event\").MatrixEvent;\nconst EventStatus = require(\"./models/event\").EventStatus;\nconst EventTimeline = require(\"./models/event-timeline\");\nconst SearchResult = require(\"./models/search-result\");\nconst StubStore = require(\"./store/stub\");\nconst webRtcCall = require(\"./webrtc/call\");\nconst utils = require(\"./utils\");\nconst contentRepo = require(\"./content-repo\");\nconst Filter = require(\"./filter\");\nconst SyncApi = require(\"./sync\");\nconst MatrixBaseApis = require(\"./base-apis\");\nconst MatrixError = httpApi.MatrixError;\n\nimport ReEmitter from './ReEmitter';\n\nconst SCROLLBACK_DELAY_MS = 3000;\nlet CRYPTO_ENABLED = false;\n\ntry {\n    var Crypto = require(\"./crypto\");\n    CRYPTO_ENABLED = true;\n} catch (e) {\n    console.warn(\"Unable to load crypto module: crypto will be disabled: \" + e);\n}\n\n/**\n * Construct a Matrix Client. Only directly construct this if you want to use\n * custom modules. Normally, {@link createClient} should be used\n * as it specifies 'sensible' defaults for these modules.\n * @constructor\n * @extends {external:EventEmitter}\n * @extends {module:base-apis~MatrixBaseApis}\n *\n * @param {Object} opts The configuration options for this client.\n * @param {string} opts.baseUrl Required. The base URL to the client-server\n * HTTP API.\n * @param {string} opts.idBaseUrl Optional. The base identity server URL for\n * identity server requests.\n * @param {Function} opts.request Required. The function to invoke for HTTP\n * requests. The value of this property is typically <code>require(\"request\")\n * </code> as it returns a function which meets the required interface. See\n * {@link requestFunction} for more information.\n *\n * @param {string} opts.accessToken The access_token for this user.\n *\n * @param {string} opts.userId The user ID for this user.\n *\n * @param {Object=} opts.store The data store to use. If not specified,\n * this client will not store any HTTP responses.\n *\n * @param {string=} opts.deviceId A unique identifier for this device; used for\n *    tracking things like crypto keys and access tokens.  If not specified,\n *    end-to-end crypto will be disabled.\n *\n * @param {Object=} opts.sessionStore A store to be used for end-to-end crypto\n *    session data. This should be a {@link\n *    module:store/session/webstorage~WebStorageSessionStore|WebStorageSessionStore},\n *    or an object implementing the same interface. If not specified,\n *    end-to-end crypto will be disabled.\n *\n * @param {Object} opts.scheduler Optional. The scheduler to use. If not\n * specified, this client will not retry requests on failure. This client\n * will supply its own processing function to\n * {@link module:scheduler~MatrixScheduler#setProcessFunction}.\n *\n * @param {Object} opts.queryParams Optional. Extra query parameters to append\n * to all requests with this client. Useful for application services which require\n * <code>?user_id=</code>.\n *\n * @param {Number=} opts.localTimeoutMs Optional. The default maximum amount of\n * time to wait before timing out HTTP requests. If not specified, there is no timeout.\n *\n * @param {boolean} [opts.useAuthorizationHeader = false] Set to true to use\n * Authorization header instead of query param to send the access token to the server.\n *\n * @param {boolean} [opts.timelineSupport = false] Set to true to enable\n * improved timeline support ({@link\n * module:client~MatrixClient#getEventTimeline getEventTimeline}). It is\n * disabled by default for compatibility with older clients - in particular to\n * maintain support for back-paginating the live timeline after a '/sync'\n * result with a gap.\n *\n * @param {module:crypto.store.base~CryptoStore} opts.cryptoStore\n *    crypto store implementation.\n */\nfunction MatrixClient(opts) {\n    // Allow trailing slash in HS url\n    if (opts.baseUrl && opts.baseUrl.endsWith(\"/\")) {\n        opts.baseUrl = opts.baseUrl.substr(0, opts.baseUrl.length - 1);\n    }\n\n    // Allow trailing slash in IS url\n    if (opts.idBaseUrl && opts.idBaseUrl.endsWith(\"/\")) {\n        opts.idBaseUrl = opts.idBaseUrl.substr(0, opts.idBaseUrl.length - 1);\n    }\n\n    MatrixBaseApis.call(this, opts);\n\n    this.reEmitter = new ReEmitter(this);\n\n    this.store = opts.store || new StubStore();\n\n    this.deviceId = opts.deviceId || null;\n\n    const userId = (opts.userId || null);\n    this.credentials = {\n        userId: userId,\n    };\n\n    this.scheduler = opts.scheduler;\n    if (this.scheduler) {\n        const self = this;\n        this.scheduler.setProcessFunction(function(eventToSend) {\n            const room = self.getRoom(eventToSend.getRoomId());\n            if (eventToSend.status !== EventStatus.SENDING) {\n                _updatePendingEventStatus(room, eventToSend,\n                                          EventStatus.SENDING);\n            }\n            return _sendEventHttpRequest(self, eventToSend);\n        });\n    }\n    this.clientRunning = false;\n\n    this.callList = {\n        // callId: MatrixCall\n    };\n\n    // try constructing a MatrixCall to see if we are running in an environment\n    // which has WebRTC. If we are, listen for and handle m.call.* events.\n    const call = webRtcCall.createNewMatrixCall(this);\n    this._supportsVoip = false;\n    if (call) {\n        setupCallEventHandler(this);\n        this._supportsVoip = true;\n    }\n    this._syncingRetry = null;\n    this._syncApi = null;\n    this._peekSync = null;\n    this._isGuest = false;\n    this._ongoingScrollbacks = {};\n    this.timelineSupport = Boolean(opts.timelineSupport);\n    this.urlPreviewCache = {};\n    this._notifTimelineSet = null;\n\n    this._crypto = null;\n    this._cryptoStore = opts.cryptoStore;\n    this._sessionStore = opts.sessionStore;\n\n    if (CRYPTO_ENABLED) {\n        this.olmVersion = Crypto.getOlmVersion();\n    }\n}\nutils.inherits(MatrixClient, EventEmitter);\nutils.extend(MatrixClient.prototype, MatrixBaseApis.prototype);\n\n/**\n * Clear any data out of the persistent stores used by the client.\n *\n * @returns {Promise} Promise which resolves when the stores have been cleared.\n */\nMatrixClient.prototype.clearStores = function() {\n    if (this._clientRunning) {\n        throw new Error(\"Cannot clear stores while client is running\");\n    }\n\n    const promises = [];\n\n    promises.push(this.store.deleteAllData());\n    if (this._cryptoStore) {\n        promises.push(this._cryptoStore.deleteAllData());\n    }\n    return Promise.all(promises);\n};\n\n/**\n * Get the user-id of the logged-in user\n *\n * @return {?string} MXID for the logged-in user, or null if not logged in\n */\nMatrixClient.prototype.getUserId = function() {\n    if (this.credentials && this.credentials.userId) {\n        return this.credentials.userId;\n    }\n    return null;\n};\n\n/**\n * Get the domain for this client's MXID\n * @return {?string} Domain of this MXID\n */\nMatrixClient.prototype.getDomain = function() {\n    if (this.credentials && this.credentials.userId) {\n        return this.credentials.userId.replace(/^.*?:/, '');\n    }\n    return null;\n};\n\n/**\n * Get the local part of the current user ID e.g. \"foo\" in \"@foo:bar\".\n * @return {?string} The user ID localpart or null.\n */\nMatrixClient.prototype.getUserIdLocalpart = function() {\n    if (this.credentials && this.credentials.userId) {\n        return this.credentials.userId.split(\":\")[0].substring(1);\n    }\n    return null;\n};\n\n/**\n * Get the device ID of this client\n * @return {?string} device ID\n */\nMatrixClient.prototype.getDeviceId = function() {\n    return this.deviceId;\n};\n\n\n/**\n * Check if the runtime environment supports VoIP calling.\n * @return {boolean} True if VoIP is supported.\n */\nMatrixClient.prototype.supportsVoip = function() {\n    return this._supportsVoip;\n};\n\n/**\n * Get the current sync state.\n * @return {?string} the sync state, which may be null.\n * @see module:client~MatrixClient#event:\"sync\"\n */\nMatrixClient.prototype.getSyncState = function() {\n    if (!this._syncApi) {\n        return null;\n    }\n    return this._syncApi.getSyncState();\n};\n\n/**\n * Return whether the client is configured for a guest account.\n * @return {boolean} True if this is a guest access_token (or no token is supplied).\n */\nMatrixClient.prototype.isGuest = function() {\n    return this._isGuest;\n};\n\n/**\n * Return the provided scheduler, if any.\n * @return {?module:scheduler~MatrixScheduler} The scheduler or null\n */\nMatrixClient.prototype.getScheduler = function() {\n    return this.scheduler;\n};\n\n/**\n * Set whether this client is a guest account. <b>This method is experimental\n * and may change without warning.</b>\n * @param {boolean} isGuest True if this is a guest account.\n */\nMatrixClient.prototype.setGuest = function(isGuest) {\n    // EXPERIMENTAL:\n    // If the token is a macaroon, it should be encoded in it that it is a 'guest'\n    // access token, which means that the SDK can determine this entirely without\n    // the dev manually flipping this flag.\n    this._isGuest = isGuest;\n};\n\n/**\n * Retry a backed off syncing request immediately. This should only be used when\n * the user <b>explicitly</b> attempts to retry their lost connection.\n * @return {boolean} True if this resulted in a request being retried.\n */\nMatrixClient.prototype.retryImmediately = function() {\n    return this._syncApi.retryImmediately();\n};\n\n/**\n * Return the global notification EventTimelineSet, if any\n *\n * @return {EventTimelineSet} the globl notification EventTimelineSet\n */\nMatrixClient.prototype.getNotifTimelineSet = function() {\n    return this._notifTimelineSet;\n};\n\n/**\n * Set the global notification EventTimelineSet\n *\n * @param {EventTimelineSet} notifTimelineSet\n */\nMatrixClient.prototype.setNotifTimelineSet = function(notifTimelineSet) {\n    this._notifTimelineSet = notifTimelineSet;\n};\n\n// Crypto bits\n// ===========\n\n/**\n * Initialise support for end-to-end encryption in this client\n *\n * You should call this method after creating the matrixclient, but *before*\n * calling `startClient`, if you want to support end-to-end encryption.\n *\n * It will return a Promise which will resolve when the crypto layer has been\n * successfully initialised.\n */\nMatrixClient.prototype.initCrypto = async function() {\n    if (this._crypto) {\n        console.warn(\"Attempt to re-initialise e2e encryption on MatrixClient\");\n        return;\n    }\n\n    if (!CRYPTO_ENABLED) {\n        throw new Error(\n            `End-to-end encryption not supported in this js-sdk build: did ` +\n                `you remember to load the olm library?`,\n        );\n    }\n\n    if (!this._sessionStore) {\n        // this is temporary, the sessionstore is supposed to be going away\n        throw new Error(`Cannot enable encryption: no sessionStore provided`);\n    }\n    if (!this._cryptoStore) {\n        // the cryptostore is provided by sdk.createClient, so this shouldn't happen\n        throw new Error(`Cannot enable encryption: no cryptoStore provided`);\n    }\n\n    const userId = this.getUserId();\n    if (userId === null) {\n        throw new Error(\n            `Cannot enable encryption on MatrixClient with unknown userId: ` +\n                `ensure userId is passed in createClient().`,\n        );\n    }\n    if (this.deviceId === null) {\n        throw new Error(\n            `Cannot enable encryption on MatrixClient with unknown deviceId: ` +\n                `ensure deviceId is passed in createClient().`,\n        );\n    }\n\n    const crypto = new Crypto(\n        this,\n        this._sessionStore,\n        userId, this.deviceId,\n        this.store,\n        this._cryptoStore,\n    );\n\n    this.reEmitter.reEmit(crypto, [\n        \"crypto.roomKeyRequest\",\n        \"crypto.roomKeyRequestCancellation\",\n    ]);\n\n    await crypto.init();\n\n    // if crypto initialisation was successful, tell it to attach its event\n    // handlers.\n    crypto.registerEventHandlers(this);\n    this._crypto = crypto;\n};\n\n\n/**\n * Is end-to-end crypto enabled for this client.\n * @return {boolean} True if end-to-end is enabled.\n */\nMatrixClient.prototype.isCryptoEnabled = function() {\n    return this._crypto !== null;\n};\n\n\n/**\n * Get the Ed25519 key for this device\n *\n * @return {?string} base64-encoded ed25519 key. Null if crypto is\n *    disabled.\n */\nMatrixClient.prototype.getDeviceEd25519Key = function() {\n    if (!this._crypto) {\n        return null;\n    }\n    return this._crypto.getDeviceEd25519Key();\n};\n\n/**\n * Upload the device keys to the homeserver.\n * @return {object} A promise that will resolve when the keys are uploaded.\n */\nMatrixClient.prototype.uploadKeys = function() {\n    if (this._crypto === null) {\n        throw new Error(\"End-to-end encryption disabled\");\n    }\n\n    return this._crypto.uploadDeviceKeys();\n};\n\n/**\n * Download the keys for a list of users and stores the keys in the session\n * store.\n * @param {Array} userIds The users to fetch.\n * @param {bool} forceDownload Always download the keys even if cached.\n *\n * @return {Promise} A promise which resolves to a map userId->deviceId->{@link\n * module:crypto~DeviceInfo|DeviceInfo}.\n */\nMatrixClient.prototype.downloadKeys = function(userIds, forceDownload) {\n    if (this._crypto === null) {\n        return Promise.reject(new Error(\"End-to-end encryption disabled\"));\n    }\n    return this._crypto.downloadKeys(userIds, forceDownload);\n};\n\n/**\n * Get the stored device keys for a user id\n *\n * @param {string} userId the user to list keys for.\n *\n * @return {Promise<module:crypto-deviceinfo[]>} list of devices\n */\nMatrixClient.prototype.getStoredDevicesForUser = async function(userId) {\n    if (this._crypto === null) {\n        throw new Error(\"End-to-end encryption disabled\");\n    }\n    return this._crypto.getStoredDevicesForUser(userId) || [];\n};\n\n/**\n * Get the stored device key for a user id and device id\n *\n * @param {string} userId the user to list keys for.\n * @param {string} deviceId unique identifier for the device\n *\n * @return {Promise<?module:crypto-deviceinfo>} device or null\n */\nMatrixClient.prototype.getStoredDevice = async function(userId, deviceId) {\n    if (this._crypto === null) {\n        throw new Error(\"End-to-end encryption disabled\");\n    }\n    return this._crypto.getStoredDevice(userId, deviceId) || null;\n};\n\n/**\n * Mark the given device as verified\n *\n * @param {string} userId owner of the device\n * @param {string} deviceId unique identifier for the device\n *\n * @param {boolean=} verified whether to mark the device as verified. defaults\n *   to 'true'.\n *\n * @returns {Promise}\n *\n * @fires module:client~event:MatrixClient\"deviceVerificationChanged\"\n */\nMatrixClient.prototype.setDeviceVerified = function(userId, deviceId, verified) {\n    if (verified === undefined) {\n        verified = true;\n    }\n    return _setDeviceVerification(this, userId, deviceId, verified, null);\n};\n\n/**\n * Mark the given device as blocked/unblocked\n *\n * @param {string} userId owner of the device\n * @param {string} deviceId unique identifier for the device\n *\n * @param {boolean=} blocked whether to mark the device as blocked. defaults\n *   to 'true'.\n *\n * @returns {Promise}\n *\n * @fires module:client~event:MatrixClient\"deviceVerificationChanged\"\n */\nMatrixClient.prototype.setDeviceBlocked = function(userId, deviceId, blocked) {\n    if (blocked === undefined) {\n        blocked = true;\n    }\n    return _setDeviceVerification(this, userId, deviceId, null, blocked);\n};\n\n/**\n * Mark the given device as known/unknown\n *\n * @param {string} userId owner of the device\n * @param {string} deviceId unique identifier for the device\n *\n * @param {boolean=} known whether to mark the device as known. defaults\n *   to 'true'.\n *\n * @returns {Promise}\n *\n * @fires module:client~event:MatrixClient\"deviceVerificationChanged\"\n */\nMatrixClient.prototype.setDeviceKnown = function(userId, deviceId, known) {\n    if (known === undefined) {\n        known = true;\n    }\n    return _setDeviceVerification(this, userId, deviceId, null, null, known);\n};\n\nasync function _setDeviceVerification(\n    client, userId, deviceId, verified, blocked, known,\n) {\n    if (!client._crypto) {\n        throw new Error(\"End-to-End encryption disabled\");\n    }\n    const dev = await client._crypto.setDeviceVerification(\n        userId, deviceId, verified, blocked, known,\n    );\n    client.emit(\"deviceVerificationChanged\", userId, deviceId, dev);\n}\n\n/**\n * Set the global override for whether the client should ever send encrypted\n * messages to unverified devices.  If false, it can still be overridden\n * per-room.  If true, it overrides the per-room settings.\n *\n * @param {boolean} value whether to unilaterally blacklist all\n * unverified devices\n */\nMatrixClient.prototype.setGlobalBlacklistUnverifiedDevices = function(value) {\n    if (this._crypto === null) {\n        throw new Error(\"End-to-end encryption disabled\");\n    }\n    this._crypto.setGlobalBlacklistUnverifiedDevices(value);\n};\n\n/**\n * @return {boolean} whether to unilaterally blacklist all\n * unverified devices\n */\nMatrixClient.prototype.getGlobalBlacklistUnverifiedDevices = function() {\n    if (this._crypto === null) {\n        throw new Error(\"End-to-end encryption disabled\");\n    }\n    return this._crypto.getGlobalBlacklistUnverifiedDevices();\n};\n\n/**\n * Get e2e information on the device that sent an event\n *\n * @param {MatrixEvent} event event to be checked\n *\n * @return {Promise<module:crypto/deviceinfo?>}\n */\nMatrixClient.prototype.getEventSenderDeviceInfo = async function(event) {\n    if (!this._crypto) {\n        return null;\n    }\n\n    return this._crypto.getEventSenderDeviceInfo(event);\n};\n\n/**\n * Check if the sender of an event is verified\n *\n * @param {MatrixEvent} event event to be checked\n *\n * @return {boolean} true if the sender of this event has been verified using\n * {@link module:client~MatrixClient#setDeviceVerified|setDeviceVerified}.\n */\nMatrixClient.prototype.isEventSenderVerified = async function(event) {\n    const device = await this.getEventSenderDeviceInfo(event);\n    if (!device) {\n        return false;\n    }\n    return device.isVerified();\n};\n\n/**\n * Enable end-to-end encryption for a room.\n * @param {string} roomId The room ID to enable encryption in.\n * @param {object} config The encryption config for the room.\n * @return {Promise} A promise that will resolve when encryption is set up.\n */\nMatrixClient.prototype.setRoomEncryption = function(roomId, config) {\n    if (!this._crypto) {\n        throw new Error(\"End-to-End encryption disabled\");\n    }\n    return this._crypto.setRoomEncryption(roomId, config);\n};\n\n/**\n * Whether encryption is enabled for a room.\n * @param {string} roomId the room id to query.\n * @return {bool} whether encryption is enabled.\n */\nMatrixClient.prototype.isRoomEncrypted = function(roomId) {\n    const room = this.getRoom(roomId);\n    if (!room) {\n        // we don't know about this room, so can't determine if it should be\n        // encrypted. Let's assume not.\n        return false;\n    }\n\n    // if there is an 'm.room.encryption' event in this room, it should be\n    // encrypted (independently of whether we actually support encryption)\n    const ev = room.currentState.getStateEvents(\"m.room.encryption\", \"\");\n    if (ev) {\n        return true;\n    }\n\n    // we don't have an m.room.encrypted event, but that might be because\n    // the server is hiding it from us. Check the store to see if it was\n    // previously encrypted.\n    if (!this._sessionStore) {\n        return false;\n    }\n\n    return Boolean(this._sessionStore.getEndToEndRoom(roomId));\n};\n\n/**\n * Get a list containing all of the room keys\n *\n * This should be encrypted before returning it to the user.\n *\n * @return {module:client.Promise} a promise which resolves to a list of\n *    session export objects\n */\nMatrixClient.prototype.exportRoomKeys = function() {\n    if (!this._crypto) {\n        return Promise.reject(new Error(\"End-to-end encryption disabled\"));\n    }\n    return this._crypto.exportRoomKeys();\n};\n\n/**\n * Import a list of room keys previously exported by exportRoomKeys\n *\n * @param {Object[]} keys a list of session export objects\n *\n * @return {module:client.Promise} a promise which resolves when the keys\n *    have been imported\n */\nMatrixClient.prototype.importRoomKeys = function(keys) {\n    if (!this._crypto) {\n        throw new Error(\"End-to-end encryption disabled\");\n    }\n    return this._crypto.importRoomKeys(keys);\n};\n\n// Group ops\n// =========\n// Operations on groups that come down the sync stream (ie. ones the\n// user is a member of or invited to)\n\n/**\n * Get the group for the given group ID.\n * This function will return a valid group for any group for which a Group event\n * has been emitted.\n * @param {string} groupId The group ID\n * @return {Group} The Group or null if the group is not known or there is no data store.\n */\nMatrixClient.prototype.getGroup = function(groupId) {\n    return this.store.getGroup(groupId);\n};\n\n/**\n * Retrieve all known groups.\n * @return {Groups[]} A list of groups, or an empty list if there is no data store.\n */\nMatrixClient.prototype.getGroups = function() {\n    return this.store.getGroups();\n};\n\n// Room ops\n// ========\n\n/**\n * Get the room for the given room ID.\n * This function will return a valid room for any room for which a Room event\n * has been emitted. Note in particular that other events, eg. RoomState.members\n * will be emitted for a room before this function will return the given room.\n * @param {string} roomId The room ID\n * @return {Room} The Room or null if it doesn't exist or there is no data store.\n */\nMatrixClient.prototype.getRoom = function(roomId) {\n    return this.store.getRoom(roomId);\n};\n\n/**\n * Retrieve all known rooms.\n * @return {Room[]} A list of rooms, or an empty list if there is no data store.\n */\nMatrixClient.prototype.getRooms = function() {\n    return this.store.getRooms();\n};\n\n/**\n * Retrieve a user.\n * @param {string} userId The user ID to retrieve.\n * @return {?User} A user or null if there is no data store or the user does\n * not exist.\n */\nMatrixClient.prototype.getUser = function(userId) {\n    return this.store.getUser(userId);\n};\n\n/**\n * Retrieve all known users.\n * @return {User[]} A list of users, or an empty list if there is no data store.\n */\nMatrixClient.prototype.getUsers = function() {\n    return this.store.getUsers();\n};\n\n// User Account Data operations\n// ============================\n\n/**\n * Set account data event for the current user.\n * @param {string} eventType The event type\n * @param {Object} contents the contents object for the event\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.setAccountData = function(eventType, contents, callback) {\n    const path = utils.encodeUri(\"/user/$userId/account_data/$type\", {\n        $userId: this.credentials.userId,\n        $type: eventType,\n    });\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, contents,\n    );\n};\n\n/**\n * Get account data event of given type for the current user.\n * @param {string} eventType The event type\n * @param {module:client.callback} callback Optional.\n * @return {?object} The contents of the given account data event\n */\nMatrixClient.prototype.getAccountData = function(eventType) {\n    return this.store.getAccountData(eventType);\n};\n\n/**\n * Gets the users that are ignored by this client\n * @returns {string[]} The array of users that are ignored (empty if none)\n */\nMatrixClient.prototype.getIgnoredUsers = function() {\n    const event = this.getAccountData(\"m.ignored_user_list\");\n    if (!event || !event.getContent() || !event.getContent()[\"ignored_users\"]) return [];\n    return Object.keys(event.getContent()[\"ignored_users\"]);\n};\n\n/**\n * Sets the users that the current user should ignore.\n * @param {string[]} userIds the user IDs to ignore\n * @param {module:client.callback} [callback] Optional.\n * @return {module:client.Promise} Resolves: Account data event\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.setIgnoredUsers = function(userIds, callback) {\n    const content = {ignored_users: {}};\n    userIds.map((u) => content.ignored_users[u] = {});\n    return this.setAccountData(\"m.ignored_user_list\", content, callback);\n};\n\n/**\n * Gets whether or not a specific user is being ignored by this client.\n * @param {string} userId the user ID to check\n * @returns {boolean} true if the user is ignored, false otherwise\n */\nMatrixClient.prototype.isUserIgnored = function(userId) {\n    return this.getIgnoredUsers().indexOf(userId) !== -1;\n};\n\n// Room operations\n// ===============\n\n/**\n * Join a room. If you have already joined the room, this will no-op.\n * @param {string} roomIdOrAlias The room ID or room alias to join.\n * @param {Object} opts Options when joining the room.\n * @param {boolean} opts.syncRoom True to do a room initial sync on the resulting\n * room. If false, the <strong>returned Room object will have no current state.\n * </strong> Default: true.\n * @param {boolean} opts.inviteSignUrl If the caller has a keypair 3pid invite,\n *                                     the signing URL is passed in this parameter.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: Room object.\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.joinRoom = function(roomIdOrAlias, opts, callback) {\n    // to help people when upgrading..\n    if (utils.isFunction(opts)) {\n        throw new Error(\"Expected 'opts' object, got function.\");\n    }\n    opts = opts || {};\n    if (opts.syncRoom === undefined) {\n        opts.syncRoom = true;\n    }\n\n    const room = this.getRoom(roomIdOrAlias);\n    if (room && room.hasMembershipState(this.credentials.userId, \"join\")) {\n        return Promise.resolve(room);\n    }\n\n    let sign_promise = Promise.resolve();\n\n    if (opts.inviteSignUrl) {\n        sign_promise = this._http.requestOtherUrl(\n            undefined, 'POST',\n            opts.inviteSignUrl, { mxid: this.credentials.userId },\n        );\n    }\n\n    const defer = Promise.defer();\n\n    const self = this;\n    sign_promise.then(function(signed_invite_object) {\n        const data = {};\n        if (signed_invite_object) {\n            data.third_party_signed = signed_invite_object;\n        }\n\n        const path = utils.encodeUri(\"/join/$roomid\", { $roomid: roomIdOrAlias});\n        return self._http.authedRequest(undefined, \"POST\", path, undefined, data);\n    }).then(function(res) {\n        const roomId = res.room_id;\n        const syncApi = new SyncApi(self, self._clientOpts);\n        const room = syncApi.createRoom(roomId);\n        if (opts.syncRoom) {\n            // v2 will do this for us\n            // return syncApi.syncRoom(room);\n        }\n        return Promise.resolve(room);\n    }).done(function(room) {\n        _resolve(callback, defer, room);\n    }, function(err) {\n        _reject(callback, defer, err);\n    });\n    return defer.promise;\n};\n\n/**\n * Resend an event.\n * @param {MatrixEvent} event The event to resend.\n * @param {Room} room Optional. The room the event is in. Will update the\n * timeline entry if provided.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.resendEvent = function(event, room) {\n    _updatePendingEventStatus(room, event, EventStatus.SENDING);\n    return _sendEvent(this, room, event);\n};\n\n/**\n * Cancel a queued or unsent event.\n *\n * @param {MatrixEvent} event   Event to cancel\n * @throws Error if the event is not in QUEUED or NOT_SENT state\n */\nMatrixClient.prototype.cancelPendingEvent = function(event) {\n    if ([EventStatus.QUEUED, EventStatus.NOT_SENT].indexOf(event.status) < 0) {\n        throw new Error(\"cannot cancel an event with status \" + event.status);\n    }\n\n    // first tell the scheduler to forget about it, if it's queued\n    if (this.scheduler) {\n        this.scheduler.removeEventFromQueue(event);\n    }\n\n    // then tell the room about the change of state, which will remove it\n    // from the room's list of pending events.\n    const room = this.getRoom(event.getRoomId());\n    _updatePendingEventStatus(room, event, EventStatus.CANCELLED);\n};\n\n/**\n * @param {string} roomId\n * @param {string} name\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.setRoomName = function(roomId, name, callback) {\n    return this.sendStateEvent(roomId, \"m.room.name\", {name: name},\n                               undefined, callback);\n};\n\n/**\n * @param {string} roomId\n * @param {string} topic\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.setRoomTopic = function(roomId, topic, callback) {\n    return this.sendStateEvent(roomId, \"m.room.topic\", {topic: topic},\n                               undefined, callback);\n};\n\n/**\n * @param {string} roomId\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.getRoomTags = function(roomId, callback) {\n    const path = utils.encodeUri(\"/user/$userId/rooms/$roomId/tags/\", {\n        $userId: this.credentials.userId,\n        $roomId: roomId,\n    });\n    return this._http.authedRequest(\n        callback, \"GET\", path, undefined,\n    );\n};\n\n/**\n * @param {string} roomId\n * @param {string} tagName name of room tag to be set\n * @param {object} metadata associated with that tag to be stored\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.setRoomTag = function(roomId, tagName, metadata, callback) {\n    const path = utils.encodeUri(\"/user/$userId/rooms/$roomId/tags/$tag\", {\n        $userId: this.credentials.userId,\n        $roomId: roomId,\n        $tag: tagName,\n    });\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, metadata,\n    );\n};\n\n/**\n * @param {string} roomId\n * @param {string} tagName name of room tag to be removed\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.deleteRoomTag = function(roomId, tagName, callback) {\n    const path = utils.encodeUri(\"/user/$userId/rooms/$roomId/tags/$tag\", {\n        $userId: this.credentials.userId,\n        $roomId: roomId,\n        $tag: tagName,\n    });\n    return this._http.authedRequest(\n        callback, \"DELETE\", path, undefined, undefined,\n    );\n};\n\n/**\n * @param {string} roomId\n * @param {string} eventType event type to be set\n * @param {object} content event content\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.setRoomAccountData = function(roomId, eventType,\n                                                     content, callback) {\n    const path = utils.encodeUri(\"/user/$userId/rooms/$roomId/account_data/$type\", {\n        $userId: this.credentials.userId,\n        $roomId: roomId,\n        $type: eventType,\n    });\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, content,\n    );\n};\n\n/**\n * Set a user's power level.\n * @param {string} roomId\n * @param {string} userId\n * @param {Number} powerLevel\n * @param {MatrixEvent} event\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.setPowerLevel = function(roomId, userId, powerLevel,\n                                                event, callback) {\n    let content = {\n        users: {},\n    };\n    if (event && event.getType() === \"m.room.power_levels\") {\n        // take a copy of the content to ensure we don't corrupt\n        // existing client state with a failed power level change\n        content = utils.deepCopy(event.getContent());\n    }\n    content.users[userId] = powerLevel;\n    const path = utils.encodeUri(\"/rooms/$roomId/state/m.room.power_levels\", {\n        $roomId: roomId,\n    });\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, content,\n    );\n};\n\n/**\n * @param {string} roomId\n * @param {string} eventType\n * @param {Object} content\n * @param {string} txnId Optional.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.sendEvent = function(roomId, eventType, content, txnId,\n                                            callback) {\n    if (utils.isFunction(txnId)) {\n        callback = txnId; txnId = undefined;\n    }\n\n    if (!txnId) {\n        txnId = this.makeTxnId();\n    }\n\n    console.log(`sendEvent of type ${eventType} in ${roomId} with txnId ${txnId}`);\n\n    // we always construct a MatrixEvent when sending because the store and\n    // scheduler use them. We'll extract the params back out if it turns out\n    // the client has no scheduler or store.\n    const room = this.getRoom(roomId);\n    const localEvent = new MatrixEvent({\n        event_id: \"~\" + roomId + \":\" + txnId,\n        user_id: this.credentials.userId,\n        room_id: roomId,\n        type: eventType,\n        origin_server_ts: new Date().getTime(),\n        content: content,\n    });\n    localEvent._txnId = txnId;\n    localEvent.status = EventStatus.SENDING;\n\n    // add this event immediately to the local store as 'sending'.\n    if (room) {\n        room.addPendingEvent(localEvent, txnId);\n    }\n\n    return _sendEvent(this, room, localEvent, callback);\n};\n\n\n// encrypts the event if necessary\n// adds the event to the queue, or sends it\n// marks the event as sent/unsent\n// returns a promise which resolves with the result of the send request\nfunction _sendEvent(client, room, event, callback) {\n    // Add an extra Promise.resolve() to turn synchronous exceptions into promise rejections,\n    // so that we can handle synchronous and asynchronous exceptions with the\n    // same code path.\n    return Promise.resolve().then(function() {\n        const encryptionPromise = _encryptEventIfNeeded(client, event, room);\n\n        if (!encryptionPromise) {\n            return null;\n        }\n\n        _updatePendingEventStatus(room, event, EventStatus.ENCRYPTING);\n        return encryptionPromise.then(() => {\n            _updatePendingEventStatus(room, event, EventStatus.SENDING);\n        });\n    }).then(function() {\n        let promise;\n        // this event may be queued\n        if (client.scheduler) {\n            // if this returns a promsie then the scheduler has control now and will\n            // resolve/reject when it is done. Internally, the scheduler will invoke\n            // processFn which is set to this._sendEventHttpRequest so the same code\n            // path is executed regardless.\n            promise = client.scheduler.queueEvent(event);\n            if (promise && client.scheduler.getQueueForEvent(event).length > 1) {\n                // event is processed FIFO so if the length is 2 or more we know\n                // this event is stuck behind an earlier event.\n                _updatePendingEventStatus(room, event, EventStatus.QUEUED);\n            }\n        }\n\n        if (!promise) {\n            promise = _sendEventHttpRequest(client, event);\n        }\n        return promise;\n    }).then(function(res) {  // the request was sent OK\n        if (room) {\n            room.updatePendingEvent(event, EventStatus.SENT, res.event_id);\n        }\n        if (callback) {\n            callback(null, res);\n        }\n        return res;\n    }, function(err) {\n        // the request failed to send.\n        console.error(\"Error sending event\", err.stack || err);\n\n        try {\n            _updatePendingEventStatus(room, event, EventStatus.NOT_SENT);\n            event.error = err;\n\n            if (callback) {\n                callback(err);\n            }\n        } catch (err2) {\n            console.error(\"Exception in error handler!\", err2.stack || err);\n        }\n        throw err;\n    });\n}\n\n/**\n * Encrypt an event according to the configuration of the room, if necessary.\n *\n * @param {MatrixClient} client\n *\n * @param {module:models/event.MatrixEvent} event  event to be sent\n *\n * @param {module:models/room?} room destination room. Null if the destination\n *     is not a room we have seen over the sync pipe.\n *\n * @return {module:client.Promise?} Promise which resolves when the event has been\n *     encrypted, or null if nothing was needed\n */\n\nfunction _encryptEventIfNeeded(client, event, room) {\n    if (event.isEncrypted()) {\n        // this event has already been encrypted; this happens if the\n        // encryption step succeeded, but the send step failed on the first\n        // attempt.\n        return null;\n    }\n\n    if (!client.isRoomEncrypted(event.getRoomId())) {\n        // looks like this room isn't encrypted.\n        return null;\n    }\n\n    if (!client._crypto) {\n        throw new Error(\n            \"This room is configured to use encryption, but your client does \" +\n            \"not support encryption.\",\n        );\n    }\n\n    return client._crypto.encryptEvent(event, room);\n}\n\nfunction _updatePendingEventStatus(room, event, newStatus) {\n    if (room) {\n        room.updatePendingEvent(event, newStatus);\n    } else {\n        event.status = newStatus;\n    }\n}\n\nfunction _sendEventHttpRequest(client, event) {\n    const txnId = event._txnId ? event._txnId : client.makeTxnId();\n\n    const pathParams = {\n        $roomId: event.getRoomId(),\n        $eventType: event.getWireType(),\n        $stateKey: event.getStateKey(),\n        $txnId: txnId,\n    };\n\n    let path;\n\n    if (event.isState()) {\n        let pathTemplate = \"/rooms/$roomId/state/$eventType\";\n        if (event.getStateKey() && event.getStateKey().length > 0) {\n            pathTemplate = \"/rooms/$roomId/state/$eventType/$stateKey\";\n        }\n        path = utils.encodeUri(pathTemplate, pathParams);\n    } else {\n        path = utils.encodeUri(\n            \"/rooms/$roomId/send/$eventType/$txnId\", pathParams,\n        );\n    }\n\n    return client._http.authedRequest(\n        undefined, \"PUT\", path, undefined, event.getWireContent(),\n    ).then((res) => {\n        console.log(\n            `Event sent to ${event.getRoomId()} with event id ${res.event_id}`,\n        );\n        return res;\n    });\n}\n\n/**\n * @param {string} roomId\n * @param {Object} content\n * @param {string} txnId Optional.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.sendMessage = function(roomId, content, txnId, callback) {\n    if (utils.isFunction(txnId)) {\n        callback = txnId; txnId = undefined;\n    }\n    return this.sendEvent(\n        roomId, \"m.room.message\", content, txnId, callback,\n    );\n};\n\n/**\n * @param {string} roomId\n * @param {string} body\n * @param {string} txnId Optional.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.sendTextMessage = function(roomId, body, txnId, callback) {\n    const content = {\n         msgtype: \"m.text\",\n         body: body,\n    };\n    return this.sendMessage(roomId, content, txnId, callback);\n};\n\n/**\n * @param {string} roomId\n * @param {string} body\n * @param {string} txnId Optional.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.sendNotice = function(roomId, body, txnId, callback) {\n    const content = {\n         msgtype: \"m.notice\",\n         body: body,\n    };\n    return this.sendMessage(roomId, content, txnId, callback);\n};\n\n/**\n * @param {string} roomId\n * @param {string} body\n * @param {string} txnId Optional.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.sendEmoteMessage = function(roomId, body, txnId, callback) {\n    const content = {\n         msgtype: \"m.emote\",\n         body: body,\n    };\n    return this.sendMessage(roomId, content, txnId, callback);\n};\n\n/**\n * @param {string} roomId\n * @param {string} url\n * @param {Object} info\n * @param {string} text\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.sendImageMessage = function(roomId, url, info, text, callback) {\n    if (utils.isFunction(text)) {\n        callback = text; text = undefined;\n    }\n    if (!text) {\n        text = \"Image\";\n    }\n    const content = {\n         msgtype: \"m.image\",\n         url: url,\n         info: info,\n         body: text,\n    };\n    return this.sendMessage(roomId, content, callback);\n};\n\n/**\n * @param {string} roomId\n * @param {string} body\n * @param {string} htmlBody\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.sendHtmlMessage = function(roomId, body, htmlBody, callback) {\n    const content = {\n        msgtype: \"m.text\",\n        format: \"org.matrix.custom.html\",\n        body: body,\n        formatted_body: htmlBody,\n    };\n    return this.sendMessage(roomId, content, callback);\n};\n\n/**\n * @param {string} roomId\n * @param {string} body\n * @param {string} htmlBody\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.sendHtmlNotice = function(roomId, body, htmlBody, callback) {\n    const content = {\n        msgtype: \"m.notice\",\n        format: \"org.matrix.custom.html\",\n        body: body,\n        formatted_body: htmlBody,\n    };\n    return this.sendMessage(roomId, content, callback);\n};\n\n/**\n * @param {string} roomId\n * @param {string} body\n * @param {string} htmlBody\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.sendHtmlEmote = function(roomId, body, htmlBody, callback) {\n    const content = {\n        msgtype: \"m.emote\",\n        format: \"org.matrix.custom.html\",\n        body: body,\n        formatted_body: htmlBody,\n    };\n    return this.sendMessage(roomId, content, callback);\n};\n\n/**\n * Send a receipt.\n * @param {Event} event The event being acknowledged\n * @param {string} receiptType The kind of receipt e.g. \"m.read\"\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.sendReceipt = function(event, receiptType, callback) {\n    if (this.isGuest()) {\n        return Promise.resolve({}); // guests cannot send receipts so don't bother.\n    }\n\n    const path = utils.encodeUri(\"/rooms/$roomId/receipt/$receiptType/$eventId\", {\n        $roomId: event.getRoomId(),\n        $receiptType: receiptType,\n        $eventId: event.getId(),\n    });\n    const promise = this._http.authedRequest(\n        callback, \"POST\", path, undefined, {},\n    );\n\n    const room = this.getRoom(event.getRoomId());\n    if (room) {\n        room._addLocalEchoReceipt(this.credentials.userId, event, receiptType);\n    }\n    return promise;\n};\n\n/**\n * Send a read receipt.\n * @param {Event} event The event that has been read.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.sendReadReceipt = function(event, callback) {\n    return this.sendReceipt(event, \"m.read\", callback);\n};\n\n/**\n * Set a marker to indicate the point in a room before which the user has read every\n * event. This can be retrieved from room account data (the event type is `m.fully_read`)\n * and displayed as a horizontal line in the timeline that is visually distinct to the\n * position of the user's own read receipt.\n * @param {string} roomId ID of the room that has been read\n * @param {string} eventId ID of the event that has been read\n * @param {string} rrEvent the event tracked by the read receipt. This is here for\n * convenience because the RR and the RM are commonly updated at the same time as each\n * other. The local echo of this receipt will be done if set. Optional.\n * @return {module:client.Promise} Resolves: the empty object, {}.\n */\nMatrixClient.prototype.setRoomReadMarkers = function(roomId, eventId, rrEvent) {\n    const rmEventId = eventId;\n    let rrEventId;\n\n    // Add the optional RR update, do local echo like `sendReceipt`\n    if (rrEvent) {\n        rrEventId = rrEvent.getId();\n        const room = this.getRoom(roomId);\n        if (room) {\n            room._addLocalEchoReceipt(this.credentials.userId, rrEvent, \"m.read\");\n        }\n    }\n\n    return this.setRoomReadMarkersHttpRequest(roomId, rmEventId, rrEventId);\n};\n\n/**\n * Get a preview of the given URL as of (roughly) the given point in time,\n * described as an object with OpenGraph keys and associated values.\n * Attributes may be synthesized where actual OG metadata is lacking.\n * Caches results to prevent hammering the server.\n * @param {string} url The URL to get preview data for\n * @param {Number} ts The preferred point in time that the preview should\n * describe (ms since epoch).  The preview returned will either be the most\n * recent one preceding this timestamp if available, or failing that the next\n * most recent available preview.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: Object of OG metadata.\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n * May return synthesized attributes if the URL lacked OG meta.\n */\nMatrixClient.prototype.getUrlPreview = function(url, ts, callback) {\n    const key = ts + \"_\" + url;\n    const og = this.urlPreviewCache[key];\n    if (og) {\n        return Promise.resolve(og);\n    }\n\n    const self = this;\n    return this._http.authedRequestWithPrefix(\n        callback, \"GET\", \"/preview_url\", {\n            url: url,\n            ts: ts,\n        }, undefined, httpApi.PREFIX_MEDIA_R0,\n    ).then(function(response) {\n        // TODO: expire cache occasionally\n        self.urlPreviewCache[key] = response;\n        return response;\n    });\n};\n\n/**\n * @param {string} roomId\n * @param {boolean} isTyping\n * @param {Number} timeoutMs\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.sendTyping = function(roomId, isTyping, timeoutMs, callback) {\n    if (this.isGuest()) {\n        return Promise.resolve({}); // guests cannot send typing notifications so don't bother.\n    }\n\n    const path = utils.encodeUri(\"/rooms/$roomId/typing/$userId\", {\n        $roomId: roomId,\n        $userId: this.credentials.userId,\n    });\n    const data = {\n        typing: isTyping,\n    };\n    if (isTyping) {\n        data.timeout = timeoutMs ? timeoutMs : 20000;\n    }\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, data,\n    );\n};\n\n/**\n * @param {string} roomId\n * @param {string} userId\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.invite = function(roomId, userId, callback) {\n    return _membershipChange(this, roomId, userId, \"invite\", undefined,\n        callback);\n};\n\n/**\n * Invite a user to a room based on their email address.\n * @param {string} roomId The room to invite the user to.\n * @param {string} email The email address to invite.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.inviteByEmail = function(roomId, email, callback) {\n    return this.inviteByThreePid(\n        roomId, \"email\", email, callback,\n    );\n};\n\n/**\n * Invite a user to a room based on a third-party identifier.\n * @param {string} roomId The room to invite the user to.\n * @param {string} medium The medium to invite the user e.g. \"email\".\n * @param {string} address The address for the specified medium.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.inviteByThreePid = function(roomId, medium, address, callback) {\n    const path = utils.encodeUri(\n        \"/rooms/$roomId/invite\",\n        { $roomId: roomId },\n    );\n\n    let identityServerUrl = this.getIdentityServerUrl();\n    if (!identityServerUrl) {\n        return Promise.reject(new MatrixError({\n            error: \"No supplied identity server URL\",\n            errcode: \"ORG.MATRIX.JSSDK_MISSING_PARAM\",\n        }));\n    }\n    if (identityServerUrl.indexOf(\"http://\") === 0 ||\n            identityServerUrl.indexOf(\"https://\") === 0) {\n        // this request must not have the protocol part because reasons\n        identityServerUrl = identityServerUrl.split(\"://\")[1];\n    }\n\n    return this._http.authedRequest(callback, \"POST\", path, undefined, {\n        id_server: identityServerUrl,\n        medium: medium,\n        address: address,\n    });\n};\n\n/**\n * @param {string} roomId\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.leave = function(roomId, callback) {\n    return _membershipChange(this, roomId, undefined, \"leave\", undefined,\n        callback);\n};\n\n/**\n * @param {string} roomId\n * @param {string} userId\n * @param {string} reason Optional.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.ban = function(roomId, userId, reason, callback) {\n    return _membershipChange(this, roomId, userId, \"ban\", reason,\n        callback);\n};\n\n/**\n * @param {string} roomId\n * @param {boolean} deleteRoom True to delete the room from the store on success.\n * Default: true.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.forget = function(roomId, deleteRoom, callback) {\n    if (deleteRoom === undefined) {\n        deleteRoom = true;\n    }\n    const promise = _membershipChange(this, roomId, undefined, \"forget\", undefined,\n        callback);\n    if (!deleteRoom) {\n        return promise;\n    }\n    const self = this;\n    return promise.then(function(response) {\n        self.store.removeRoom(roomId);\n        self.emit(\"deleteRoom\", roomId);\n        return response;\n    });\n};\n\n/**\n * @param {string} roomId\n * @param {string} userId\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: Object (currently empty)\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.unban = function(roomId, userId, callback) {\n    // unbanning != set their state to leave: this used to be\n    // the case, but was then changed so that leaving was always\n    // a revoking of priviledge, otherwise two people racing to\n    // kick / ban someone could end up banning and then un-banning\n    // them.\n    const path = utils.encodeUri(\"/rooms/$roomId/unban\", {\n        $roomId: roomId,\n    });\n    const data = {\n        user_id: userId,\n    };\n    return this._http.authedRequest(\n        callback, \"POST\", path, undefined, data,\n    );\n};\n\n/**\n * @param {string} roomId\n * @param {string} userId\n * @param {string} reason Optional.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.kick = function(roomId, userId, reason, callback) {\n    return _setMembershipState(\n        this, roomId, userId, \"leave\", reason, callback,\n    );\n};\n\n/**\n * This is an internal method.\n * @param {MatrixClient} client\n * @param {string} roomId\n * @param {string} userId\n * @param {string} membershipValue\n * @param {string} reason\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nfunction _setMembershipState(client, roomId, userId, membershipValue, reason,\n                             callback) {\n    if (utils.isFunction(reason)) {\n        callback = reason; reason = undefined;\n    }\n\n    const path = utils.encodeUri(\n        \"/rooms/$roomId/state/m.room.member/$userId\",\n        { $roomId: roomId, $userId: userId},\n    );\n\n    return client._http.authedRequest(callback, \"PUT\", path, undefined, {\n        membership: membershipValue,\n        reason: reason,\n    });\n}\n\n/**\n * This is an internal method.\n * @param {MatrixClient} client\n * @param {string} roomId\n * @param {string} userId\n * @param {string} membership\n * @param {string} reason\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nfunction _membershipChange(client, roomId, userId, membership, reason, callback) {\n    if (utils.isFunction(reason)) {\n        callback = reason; reason = undefined;\n    }\n\n    const path = utils.encodeUri(\"/rooms/$room_id/$membership\", {\n        $room_id: roomId,\n        $membership: membership,\n    });\n    return client._http.authedRequest(\n        callback, \"POST\", path, undefined, {\n            user_id: userId,  // may be undefined e.g. on leave\n            reason: reason,\n        },\n    );\n}\n\n/**\n * Obtain a dict of actions which should be performed for this event according\n * to the push rules for this user.  Caches the dict on the event.\n * @param {MatrixEvent} event The event to get push actions for.\n * @return {module:pushprocessor~PushAction} A dict of actions to perform.\n */\nMatrixClient.prototype.getPushActionsForEvent = function(event) {\n    if (!event.getPushActions()) {\n        const pushProcessor = new PushProcessor(this);\n        event.setPushActions(pushProcessor.actionsForEvent(event));\n    }\n    return event.getPushActions();\n};\n\n// Profile operations\n// ==================\n\n/**\n * @param {string} info The kind of info to set (e.g. 'avatar_url')\n * @param {Object} data The JSON object to set.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.setProfileInfo = function(info, data, callback) {\n    const path = utils.encodeUri(\"/profile/$userId/$info\", {\n        $userId: this.credentials.userId,\n        $info: info,\n    });\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, data,\n    );\n};\n\n/**\n * @param {string} name\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.setDisplayName = function(name, callback) {\n    return this.setProfileInfo(\n        \"displayname\", { displayname: name }, callback,\n    );\n};\n\n/**\n * @param {string} url\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.setAvatarUrl = function(url, callback) {\n    return this.setProfileInfo(\n        \"avatar_url\", { avatar_url: url }, callback,\n    );\n};\n\n/**\n * Turn an MXC URL into an HTTP one. <strong>This method is experimental and\n * may change.</strong>\n * @param {string} mxcUrl The MXC URL\n * @param {Number} width The desired width of the thumbnail.\n * @param {Number} height The desired height of the thumbnail.\n * @param {string} resizeMethod The thumbnail resize method to use, either\n * \"crop\" or \"scale\".\n * @param {Boolean} allowDirectLinks If true, return any non-mxc URLs\n * directly. Fetching such URLs will leak information about the user to\n * anyone they share a room with. If false, will return null for such URLs.\n * @return {?string} the avatar URL or null.\n */\nMatrixClient.prototype.mxcUrlToHttp =\n        function(mxcUrl, width, height, resizeMethod, allowDirectLinks) {\n    return contentRepo.getHttpUriForMxc(\n        this.baseUrl, mxcUrl, width, height, resizeMethod, allowDirectLinks,\n    );\n};\n\n/**\n * @param {Object} opts Options to apply\n * @param {string} opts.presence One of \"online\", \"offline\" or \"unavailable\"\n * @param {string} opts.status_msg The status message to attach.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n * @throws If 'presence' isn't a valid presence enum value.\n */\nMatrixClient.prototype.setPresence = function(opts, callback) {\n    const path = utils.encodeUri(\"/presence/$userId/status\", {\n        $userId: this.credentials.userId,\n    });\n\n    if (typeof opts === \"string\") {\n      opts = { presence: opts };\n    }\n\n    const validStates = [\"offline\", \"online\", \"unavailable\"];\n    if (validStates.indexOf(opts.presence) == -1) {\n        throw new Error(\"Bad presence value: \" + opts.presence);\n    }\n    return this._http.authedRequest(\n        callback, \"PUT\", path, undefined, opts,\n    );\n};\n\nfunction _presenceList(callback, client, opts, method) {\n  const path = utils.encodeUri(\"/presence/list/$userId\", {\n      $userId: client.credentials.userId,\n  });\n  return client._http.authedRequest(callback, method, path, undefined, opts);\n}\n\n/**\n* Retrieve current user presence list.\n* @param {module:client.callback} callback Optional.\n* @return {module:client.Promise} Resolves: TODO\n* @return {module:http-api.MatrixError} Rejects: with an error response.\n*/\nMatrixClient.prototype.getPresenceList = function(callback) {\n  return _presenceList(callback, this, undefined, \"GET\");\n};\n\n/**\n* Add users to the current user presence list.\n* @param {module:client.callback} callback Optional.\n* @param {string[]} userIds\n* @return {module:client.Promise} Resolves: TODO\n* @return {module:http-api.MatrixError} Rejects: with an error response.\n*/\nMatrixClient.prototype.inviteToPresenceList = function(callback, userIds) {\n  const opts = {\"invite\": userIds};\n  return _presenceList(callback, this, opts, \"POST\");\n};\n\n/**\n* Drop users from the current user presence list.\n* @param {module:client.callback} callback Optional.\n* @param {string[]} userIds\n* @return {module:client.Promise} Resolves: TODO\n* @return {module:http-api.MatrixError} Rejects: with an error response.\n**/\nMatrixClient.prototype.dropFromPresenceList = function(callback, userIds) {\n  const opts = {\"drop\": userIds};\n  return _presenceList(callback, this, opts, \"POST\");\n};\n\n/**\n * Retrieve older messages from the given room and put them in the timeline.\n *\n * If this is called multiple times whilst a request is ongoing, the <i>same</i>\n * Promise will be returned. If there was a problem requesting scrollback, there\n * will be a small delay before another request can be made (to prevent tight-looping\n * when there is no connection).\n *\n * @param {Room} room The room to get older messages in.\n * @param {Integer} limit Optional. The maximum number of previous events to\n * pull in. Default: 30.\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: Room. If you are at the beginning\n * of the timeline, <code>Room.oldState.paginationToken</code> will be\n * <code>null</code>.\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.scrollback = function(room, limit, callback) {\n    if (utils.isFunction(limit)) {\n        callback = limit; limit = undefined;\n    }\n    limit = limit || 30;\n    let timeToWaitMs = 0;\n\n    let info = this._ongoingScrollbacks[room.roomId] || {};\n    if (info.promise) {\n        return info.promise;\n    } else if (info.errorTs) {\n        const timeWaitedMs = Date.now() - info.errorTs;\n        timeToWaitMs = Math.max(SCROLLBACK_DELAY_MS - timeWaitedMs, 0);\n    }\n\n    if (room.oldState.paginationToken === null) {\n        return Promise.resolve(room); // already at the start.\n    }\n    // attempt to grab more events from the store first\n    const numAdded = this.store.scrollback(room, limit).length;\n    if (numAdded === limit) {\n        // store contained everything we needed.\n        return Promise.resolve(room);\n    }\n    // reduce the required number of events appropriately\n    limit = limit - numAdded;\n\n    const path = utils.encodeUri(\n        \"/rooms/$roomId/messages\", {$roomId: room.roomId},\n    );\n    const params = {\n        from: room.oldState.paginationToken,\n        limit: limit,\n        dir: 'b',\n    };\n    const defer = Promise.defer();\n    info = {\n        promise: defer.promise,\n        errorTs: null,\n    };\n    const self = this;\n    // wait for a time before doing this request\n    // (which may be 0 in order not to special case the code paths)\n    Promise.delay(timeToWaitMs).then(function() {\n        return self._http.authedRequest(callback, \"GET\", path, params);\n    }).done(function(res) {\n        const matrixEvents = utils.map(res.chunk, _PojoToMatrixEventMapper(self));\n        room.addEventsToTimeline(matrixEvents, true, room.getLiveTimeline());\n        room.oldState.paginationToken = res.end;\n        if (res.chunk.length === 0) {\n            room.oldState.paginationToken = null;\n        }\n        self.store.storeEvents(room, matrixEvents, res.end, true);\n        self._ongoingScrollbacks[room.roomId] = null;\n        _resolve(callback, defer, room);\n    }, function(err) {\n        self._ongoingScrollbacks[room.roomId] = {\n            errorTs: Date.now(),\n        };\n        _reject(callback, defer, err);\n    });\n    this._ongoingScrollbacks[room.roomId] = info;\n    return defer.promise;\n};\n\n/**\n * Take an EventContext, and back/forward-fill results.\n *\n * @param {module:models/event-context.EventContext} eventContext  context\n *    object to be updated\n * @param {Object}  opts\n * @param {boolean} opts.backwards  true to fill backwards, false to go forwards\n * @param {boolean} opts.limit      number of events to request\n *\n * @return {module:client.Promise} Resolves: updated EventContext object\n * @return {Error} Rejects: with an error response.\n */\nMatrixClient.prototype.paginateEventContext = function(eventContext, opts) {\n    // TODO: we should implement a backoff (as per scrollback()) to deal more\n    // nicely with HTTP errors.\n    opts = opts || {};\n    const backwards = opts.backwards || false;\n\n    const token = eventContext.getPaginateToken(backwards);\n    if (!token) {\n        // no more results.\n        return Promise.reject(new Error(\"No paginate token\"));\n    }\n\n    const dir = backwards ? 'b' : 'f';\n    const pendingRequest = eventContext._paginateRequests[dir];\n\n    if (pendingRequest) {\n        // already a request in progress - return the existing promise\n        return pendingRequest;\n    }\n\n    const path = utils.encodeUri(\n        \"/rooms/$roomId/messages\", {$roomId: eventContext.getEvent().getRoomId()},\n    );\n    const params = {\n        from: token,\n        limit: ('limit' in opts) ? opts.limit : 30,\n        dir: dir,\n    };\n\n    const self = this;\n    const promise =\n        self._http.authedRequest(undefined, \"GET\", path, params,\n    ).then(function(res) {\n        let token = res.end;\n        if (res.chunk.length === 0) {\n            token = null;\n        } else {\n            const matrixEvents = utils.map(res.chunk, self.getEventMapper());\n            if (backwards) {\n                // eventContext expects the events in timeline order, but\n                // back-pagination returns them in reverse order.\n                matrixEvents.reverse();\n            }\n            eventContext.addEvents(matrixEvents, backwards);\n        }\n        eventContext.setPaginateToken(token, backwards);\n        return eventContext;\n    }).finally(function() {\n        eventContext._paginateRequests[dir] = null;\n    });\n    eventContext._paginateRequests[dir] = promise;\n\n    return promise;\n};\n\n/**\n * Get an EventTimeline for the given event\n *\n * <p>If the EventTimelineSet object already has the given event in its store, the\n * corresponding timeline will be returned. Otherwise, a /context request is\n * made, and used to construct an EventTimeline.\n *\n * @param {EventTimelineSet} timelineSet  The timelineSet to look for the event in\n * @param {string} eventId  The ID of the event to look for\n *\n * @return {module:client.Promise} Resolves:\n *    {@link module:models/event-timeline~EventTimeline} including the given\n *    event\n */\nMatrixClient.prototype.getEventTimeline = function(timelineSet, eventId) {\n    // don't allow any timeline support unless it's been enabled.\n    if (!this.timelineSupport) {\n        throw new Error(\"timeline support is disabled. Set the 'timelineSupport'\" +\n                    \" parameter to true when creating MatrixClient to enable\" +\n                    \" it.\");\n    }\n\n    if (timelineSet.getTimelineForEvent(eventId)) {\n        return Promise.resolve(timelineSet.getTimelineForEvent(eventId));\n    }\n\n    const path = utils.encodeUri(\n        \"/rooms/$roomId/context/$eventId\", {\n            $roomId: timelineSet.room.roomId,\n            $eventId: eventId,\n        },\n    );\n\n    // TODO: we should implement a backoff (as per scrollback()) to deal more\n    // nicely with HTTP errors.\n    const self = this;\n    const promise =\n        self._http.authedRequest(undefined, \"GET\", path,\n    ).then(function(res) {\n        if (!res.event) {\n            throw new Error(\"'event' not in '/context' result - homeserver too old?\");\n        }\n\n        // by the time the request completes, the event might have ended up in\n        // the timeline.\n        if (timelineSet.getTimelineForEvent(eventId)) {\n            return timelineSet.getTimelineForEvent(eventId);\n        }\n\n        // we start with the last event, since that's the point at which we\n        // have known state.\n        // events_after is already backwards; events_before is forwards.\n        res.events_after.reverse();\n        const events = res.events_after\n            .concat([res.event])\n            .concat(res.events_before);\n        const matrixEvents = utils.map(events, self.getEventMapper());\n\n        let timeline = timelineSet.getTimelineForEvent(matrixEvents[0].getId());\n        if (!timeline) {\n            timeline = timelineSet.addTimeline();\n            timeline.initialiseState(utils.map(res.state,\n                                               self.getEventMapper()));\n            timeline.getState(EventTimeline.FORWARDS).paginationToken = res.end;\n        }\n        timelineSet.addEventsToTimeline(matrixEvents, true, timeline, res.start);\n\n        // there is no guarantee that the event ended up in \"timeline\" (we\n        // might have switched to a neighbouring timeline) - so check the\n        // room's index again. On the other hand, there's no guarantee the\n        // event ended up anywhere, if it was later redacted, so we just\n        // return the timeline we first thought of.\n        const tl = timelineSet.getTimelineForEvent(eventId) || timeline;\n        return tl;\n    });\n    return promise;\n};\n\n\n/**\n * Take an EventTimeline, and back/forward-fill results.\n *\n * @param {module:models/event-timeline~EventTimeline} eventTimeline timeline\n *    object to be updated\n * @param {Object}   [opts]\n * @param {bool}     [opts.backwards = false]  true to fill backwards,\n *    false to go forwards\n * @param {number}   [opts.limit = 30]         number of events to request\n *\n * @return {module:client.Promise} Resolves to a boolean: false if there are no\n *    events and we reached either end of the timeline; else true.\n */\nMatrixClient.prototype.paginateEventTimeline = function(eventTimeline, opts) {\n    const isNotifTimeline = (eventTimeline.getTimelineSet() === this._notifTimelineSet);\n\n    // TODO: we should implement a backoff (as per scrollback()) to deal more\n    // nicely with HTTP errors.\n    opts = opts || {};\n    const backwards = opts.backwards || false;\n\n    if (isNotifTimeline) {\n        if (!backwards) {\n            throw new Error(\"paginateNotifTimeline can only paginate backwards\");\n        }\n    }\n\n    const dir = backwards ? EventTimeline.BACKWARDS : EventTimeline.FORWARDS;\n\n    const token = eventTimeline.getPaginationToken(dir);\n    if (!token) {\n        // no token - no results.\n        return Promise.resolve(false);\n    }\n\n    const pendingRequest = eventTimeline._paginationRequests[dir];\n\n    if (pendingRequest) {\n        // already a request in progress - return the existing promise\n        return pendingRequest;\n    }\n\n    let path, params, promise;\n    const self = this;\n\n    if (isNotifTimeline) {\n        path = \"/notifications\";\n        params = {\n            limit: ('limit' in opts) ? opts.limit : 30,\n            only: 'highlight',\n        };\n\n        if (token && token !== \"end\") {\n            params.from = token;\n        }\n\n        promise =\n            this._http.authedRequestWithPrefix(undefined, \"GET\", path, params,\n                undefined, httpApi.PREFIX_UNSTABLE,\n        ).then(function(res) {\n            const token = res.next_token;\n            const matrixEvents = [];\n\n            for (let i = 0; i < res.notifications.length; i++) {\n                const notification = res.notifications[i];\n                const event = self.getEventMapper()(notification.event);\n                event.setPushActions(\n                    PushProcessor.actionListToActionsObject(notification.actions),\n                );\n                event.event.room_id = notification.room_id; // XXX: gutwrenching\n                matrixEvents[i] = event;\n            }\n\n            eventTimeline.getTimelineSet()\n                .addEventsToTimeline(matrixEvents, backwards, eventTimeline, token);\n\n            // if we've hit the end of the timeline, we need to stop trying to\n            // paginate. We need to keep the 'forwards' token though, to make sure\n            // we can recover from gappy syncs.\n            if (backwards && !res.next_token) {\n                eventTimeline.setPaginationToken(null, dir);\n            }\n            return res.next_token ? true : false;\n        }).finally(function() {\n            eventTimeline._paginationRequests[dir] = null;\n        });\n        eventTimeline._paginationRequests[dir] = promise;\n    } else {\n        const room = this.getRoom(eventTimeline.getRoomId());\n        if (!room) {\n            throw new Error(\"Unknown room \" + eventTimeline.getRoomId());\n        }\n\n        path = utils.encodeUri(\n            \"/rooms/$roomId/messages\", {$roomId: eventTimeline.getRoomId()},\n        );\n        params = {\n            from: token,\n            limit: ('limit' in opts) ? opts.limit : 30,\n            dir: dir,\n        };\n\n        const filter = eventTimeline.getFilter();\n        if (filter) {\n            // XXX: it's horrific that /messages' filter parameter doesn't match\n            // /sync's one - see https://matrix.org/jira/browse/SPEC-451\n            params.filter = JSON.stringify(filter.getRoomTimelineFilterComponent());\n        }\n\n        promise =\n            this._http.authedRequest(undefined, \"GET\", path, params,\n        ).then(function(res) {\n            const token = res.end;\n            const matrixEvents = utils.map(res.chunk, self.getEventMapper());\n            eventTimeline.getTimelineSet()\n                .addEventsToTimeline(matrixEvents, backwards, eventTimeline, token);\n\n            // if we've hit the end of the timeline, we need to stop trying to\n            // paginate. We need to keep the 'forwards' token though, to make sure\n            // we can recover from gappy syncs.\n            if (backwards && res.end == res.start) {\n                eventTimeline.setPaginationToken(null, dir);\n            }\n            return res.end != res.start;\n        }).finally(function() {\n            eventTimeline._paginationRequests[dir] = null;\n        });\n        eventTimeline._paginationRequests[dir] = promise;\n    }\n\n    return promise;\n};\n\n/**\n * Reset the notifTimelineSet entirely, paginating in some historical notifs as\n * a starting point for subsequent pagination.\n */\nMatrixClient.prototype.resetNotifTimelineSet = function() {\n    if (!this._notifTimelineSet) {\n        return;\n    }\n\n    // FIXME: This thing is a total hack, and results in duplicate events being\n    // added to the timeline both from /sync and /notifications, and lots of\n    // slow and wasteful processing and pagination.  The correct solution is to\n    // extend /messages or /search or something to filter on notifications.\n\n    // use the fictitious token 'end'. in practice we would ideally give it\n    // the oldest backwards pagination token from /sync, but /sync doesn't\n    // know about /notifications, so we have no choice but to start paginating\n    // from the current point in time.  This may well overlap with historical\n    // notifs which are then inserted into the timeline by /sync responses.\n    this._notifTimelineSet.resetLiveTimeline('end', null);\n\n    // we could try to paginate a single event at this point in order to get\n    // a more valid pagination token, but it just ends up with an out of order\n    // timeline. given what a mess this is and given we're going to have duplicate\n    // events anyway, just leave it with the dummy token for now.\n    /*\n    this.paginateNotifTimeline(this._notifTimelineSet.getLiveTimeline(), {\n        backwards: true,\n        limit: 1\n    });\n    */\n};\n\n/**\n * Peek into a room and receive updates about the room. This only works if the\n * history visibility for the room is world_readable.\n * @param {String} roomId The room to attempt to peek into.\n * @return {module:client.Promise} Resolves: Room object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.peekInRoom = function(roomId) {\n    if (this._peekSync) {\n        this._peekSync.stopPeeking();\n    }\n    this._peekSync = new SyncApi(this, this._clientOpts);\n    return this._peekSync.peek(roomId);\n};\n\n/**\n * Stop any ongoing room peeking.\n */\nMatrixClient.prototype.stopPeeking = function() {\n    if (this._peekSync) {\n        this._peekSync.stopPeeking();\n        this._peekSync = null;\n    }\n};\n\n/**\n * Set r/w flags for guest access in a room.\n * @param {string} roomId The room to configure guest access in.\n * @param {Object} opts Options\n * @param {boolean} opts.allowJoin True to allow guests to join this room. This\n * implicitly gives guests write access. If false or not given, guests are\n * explicitly forbidden from joining the room.\n * @param {boolean} opts.allowRead True to set history visibility to\n * be world_readable. This gives guests read access *from this point forward*.\n * If false or not given, history visibility is not modified.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.setGuestAccess = function(roomId, opts) {\n    const writePromise = this.sendStateEvent(roomId, \"m.room.guest_access\", {\n        guest_access: opts.allowJoin ? \"can_join\" : \"forbidden\",\n    });\n\n    let readPromise = Promise.resolve();\n    if (opts.allowRead) {\n        readPromise = this.sendStateEvent(roomId, \"m.room.history_visibility\", {\n            history_visibility: \"world_readable\",\n        });\n    }\n\n    return Promise.all([readPromise, writePromise]);\n};\n\n// Registration/Login operations\n// =============================\n\n/**\n * Requests an email verification token for the purposes of registration.\n * This API proxies the Identity Server /validate/email/requestToken API,\n * adding registration-specific behaviour. Specifically, if an account with\n * the given email address already exists, it will either send an email\n * to the address informing them of this or return M_THREEPID_IN_USE\n * (which one is up to the Home Server).\n *\n * requestEmailToken calls the equivalent API directly on the ID server,\n * therefore bypassing the registration-specific logic.\n *\n * Parameters and return value are as for requestEmailToken\n\n * @param {string} email As requestEmailToken\n * @param {string} clientSecret As requestEmailToken\n * @param {number} sendAttempt As requestEmailToken\n * @param {string} nextLink As requestEmailToken\n * @return {module:client.Promise} Resolves: As requestEmailToken\n */\nMatrixClient.prototype.requestRegisterEmailToken = function(email, clientSecret,\n                                                    sendAttempt, nextLink) {\n    return this._requestTokenFromEndpoint(\n        \"/register/email/requestToken\",\n        {\n            email: email,\n            client_secret: clientSecret,\n            send_attempt: sendAttempt,\n            next_link: nextLink,\n        },\n    );\n};\n\n/**\n * Requests a text message verification token for the purposes of registration.\n * This API proxies the Identity Server /validate/msisdn/requestToken API,\n * adding registration-specific behaviour, as with requestRegisterEmailToken.\n *\n * @param {string} phoneCountry The ISO 3166-1 alpha-2 code for the country in which\n *    phoneNumber should be parsed relative to.\n * @param {string} phoneNumber The phone number, in national or international format\n * @param {string} clientSecret As requestEmailToken\n * @param {number} sendAttempt As requestEmailToken\n * @param {string} nextLink As requestEmailToken\n * @return {module:client.Promise} Resolves: As requestEmailToken\n */\nMatrixClient.prototype.requestRegisterMsisdnToken = function(phoneCountry, phoneNumber,\n                                                    clientSecret, sendAttempt, nextLink) {\n    return this._requestTokenFromEndpoint(\n        \"/register/msisdn/requestToken\",\n        {\n            country: phoneCountry,\n            phone_number: phoneNumber,\n            client_secret: clientSecret,\n            send_attempt: sendAttempt,\n            next_link: nextLink,\n        },\n    );\n};\n\n/**\n * Requests an email verification token for the purposes of adding a\n * third party identifier to an account.\n * This API proxies the Identity Server /validate/email/requestToken API,\n * adding specific behaviour for the addition of email addresses to an\n * account. Specifically, if an account with\n * the given email address already exists, it will either send an email\n * to the address informing them of this or return M_THREEPID_IN_USE\n * (which one is up to the Home Server).\n *\n * requestEmailToken calls the equivalent API directly on the ID server,\n * therefore bypassing the email addition specific logic.\n *\n * @param {string} email As requestEmailToken\n * @param {string} clientSecret As requestEmailToken\n * @param {number} sendAttempt As requestEmailToken\n * @param {string} nextLink As requestEmailToken\n * @return {module:client.Promise} Resolves: As requestEmailToken\n */\nMatrixClient.prototype.requestAdd3pidEmailToken = function(email, clientSecret,\n                                                    sendAttempt, nextLink) {\n    return this._requestTokenFromEndpoint(\n        \"/account/3pid/email/requestToken\",\n        {\n            email: email,\n            client_secret: clientSecret,\n            send_attempt: sendAttempt,\n            next_link: nextLink,\n        },\n    );\n};\n\n/**\n * Requests a text message verification token for the purposes of adding a\n * third party identifier to an account.\n * This API proxies the Identity Server /validate/email/requestToken API,\n * adding specific behaviour for the addition of phone numbers to an\n * account, as requestAdd3pidEmailToken.\n *\n * @param {string} phoneCountry As requestRegisterMsisdnToken\n * @param {string} phoneNumber As requestRegisterMsisdnToken\n * @param {string} clientSecret As requestEmailToken\n * @param {number} sendAttempt As requestEmailToken\n * @param {string} nextLink As requestEmailToken\n * @return {module:client.Promise} Resolves: As requestEmailToken\n */\nMatrixClient.prototype.requestAdd3pidMsisdnToken = function(phoneCountry, phoneNumber,\n                                                    clientSecret, sendAttempt, nextLink) {\n    return this._requestTokenFromEndpoint(\n        \"/account/3pid/msisdn/requestToken\",\n        {\n            country: phoneCountry,\n            phone_number: phoneNumber,\n            client_secret: clientSecret,\n            send_attempt: sendAttempt,\n            next_link: nextLink,\n        },\n    );\n};\n\n/**\n * Requests an email verification token for the purposes of resetting\n * the password on an account.\n * This API proxies the Identity Server /validate/email/requestToken API,\n * adding specific behaviour for the password resetting. Specifically,\n * if no account with the given email address exists, it may either\n * return M_THREEPID_NOT_FOUND or send an email\n * to the address informing them of this (which one is up to the Home Server).\n *\n * requestEmailToken calls the equivalent API directly on the ID server,\n * therefore bypassing the password reset specific logic.\n *\n * @param {string} email As requestEmailToken\n * @param {string} clientSecret As requestEmailToken\n * @param {number} sendAttempt As requestEmailToken\n * @param {string} nextLink As requestEmailToken\n * @param {module:client.callback} callback Optional. As requestEmailToken\n * @return {module:client.Promise} Resolves: As requestEmailToken\n */\nMatrixClient.prototype.requestPasswordEmailToken = function(email, clientSecret,\n                                                    sendAttempt, nextLink) {\n    return this._requestTokenFromEndpoint(\n        \"/account/password/email/requestToken\",\n        {\n            email: email,\n            client_secret: clientSecret,\n            send_attempt: sendAttempt,\n            next_link: nextLink,\n        },\n    );\n};\n\n/**\n * Requests a text message verification token for the purposes of resetting\n * the password on an account.\n * This API proxies the Identity Server /validate/email/requestToken API,\n * adding specific behaviour for the password resetting, as requestPasswordEmailToken.\n *\n * @param {string} phoneCountry As requestRegisterMsisdnToken\n * @param {string} phoneNumber As requestRegisterMsisdnToken\n * @param {string} clientSecret As requestEmailToken\n * @param {number} sendAttempt As requestEmailToken\n * @param {string} nextLink As requestEmailToken\n * @return {module:client.Promise} Resolves: As requestEmailToken\n */\nMatrixClient.prototype.requestPasswordMsisdnToken = function(phoneCountry, phoneNumber,\n                                                    clientSecret, sendAttempt, nextLink) {\n    return this._requestTokenFromEndpoint(\n        \"/account/password/msisdn/requestToken\",\n        {\n            country: phoneCountry,\n            phone_number: phoneNumber,\n            client_secret: clientSecret,\n            send_attempt: sendAttempt,\n            next_link: nextLink,\n        },\n    );\n};\n\n/**\n * Internal utility function for requesting validation tokens from usage-specific\n * requestToken endpoints.\n *\n * @param {string} endpoint The endpoint to send the request to\n * @param {object} params Parameters for the POST request\n * @return {module:client.Promise} Resolves: As requestEmailToken\n */\nMatrixClient.prototype._requestTokenFromEndpoint = function(endpoint, params) {\n    const id_server_url = url.parse(this.idBaseUrl);\n    if (id_server_url.host === null) {\n        throw new Error(\"Invalid ID server URL: \" + this.idBaseUrl);\n    }\n\n    const postParams = Object.assign({}, params, {\n        id_server: id_server_url.host,\n    });\n    return this._http.request(\n        undefined, \"POST\", endpoint, undefined,\n        postParams,\n    );\n};\n\n\n// Push operations\n// ===============\n\n/**\n * Get the room-kind push rule associated with a room.\n * @param {string} scope \"global\" or device-specific.\n * @param {string} roomId the id of the room.\n * @return {object} the rule or undefined.\n */\nMatrixClient.prototype.getRoomPushRule = function(scope, roomId) {\n    // There can be only room-kind push rule per room\n    // and its id is the room id.\n    if (this.pushRules) {\n        for (let i = 0; i < this.pushRules[scope].room.length; i++) {\n            const rule = this.pushRules[scope].room[i];\n            if (rule.rule_id === roomId) {\n                return rule;\n            }\n        }\n    } else {\n        throw new Error(\n            \"SyncApi.sync() must be done before accessing to push rules.\",\n        );\n    }\n};\n\n/**\n * Set a room-kind muting push rule in a room.\n * The operation also updates MatrixClient.pushRules at the end.\n * @param {string} scope \"global\" or device-specific.\n * @param {string} roomId the id of the room.\n * @param {string} mute the mute state.\n * @return {module:client.Promise} Resolves: result object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.setRoomMutePushRule = function(scope, roomId, mute) {\n    const self = this;\n    let deferred, hasDontNotifyRule;\n\n    // Get the existing room-kind push rule if any\n    const roomPushRule = this.getRoomPushRule(scope, roomId);\n    if (roomPushRule) {\n        if (0 <= roomPushRule.actions.indexOf(\"dont_notify\")) {\n            hasDontNotifyRule = true;\n        }\n    }\n\n    if (!mute) {\n        // Remove the rule only if it is a muting rule\n        if (hasDontNotifyRule) {\n            deferred = this.deletePushRule(scope, \"room\", roomPushRule.rule_id);\n        }\n    } else {\n        if (!roomPushRule) {\n            deferred = this.addPushRule(scope, \"room\", roomId, {\n                actions: [\"dont_notify\"],\n            });\n        } else if (!hasDontNotifyRule) {\n            // Remove the existing one before setting the mute push rule\n            // This is a workaround to SYN-590 (Push rule update fails)\n            deferred = Promise.defer();\n            this.deletePushRule(scope, \"room\", roomPushRule.rule_id)\n            .done(function() {\n                self.addPushRule(scope, \"room\", roomId, {\n                    actions: [\"dont_notify\"],\n                }).done(function() {\n                    deferred.resolve();\n                }, function(err) {\n                    deferred.reject(err);\n                });\n            }, function(err) {\n                deferred.reject(err);\n            });\n\n            deferred = deferred.promise;\n        }\n    }\n\n    if (deferred) {\n        // Update this.pushRules when the operation completes\n        const ruleRefreshDeferred = Promise.defer();\n        deferred.done(function() {\n            self.getPushRules().done(function(result) {\n                self.pushRules = result;\n                ruleRefreshDeferred.resolve();\n            }, function(err) {\n                ruleRefreshDeferred.reject(err);\n            });\n        }, function(err) {\n            // Update it even if the previous operation fails. This can help the\n            // app to recover when push settings has been modifed from another client\n            self.getPushRules().done(function(result) {\n                self.pushRules = result;\n                ruleRefreshDeferred.reject(err);\n            }, function(err2) {\n                ruleRefreshDeferred.reject(err);\n            });\n        });\n        return ruleRefreshDeferred.promise;\n    }\n};\n\n// Search\n// ======\n\n/**\n * Perform a server-side search for messages containing the given text.\n * @param {Object} opts Options for the search.\n * @param {string} opts.query The text to query.\n * @param {string=} opts.keys The keys to search on. Defaults to all keys. One\n * of \"content.body\", \"content.name\", \"content.topic\".\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.searchMessageText = function(opts, callback) {\n    const roomEvents = {\n        search_term: opts.query,\n    };\n\n    if ('keys' in opts) {\n        roomEvents.keys = opts.keys;\n    }\n\n    return this.search({\n        body: {\n            search_categories: {\n                room_events: roomEvents,\n            },\n        },\n    }, callback);\n};\n\n/**\n * Perform a server-side search for room events.\n *\n * The returned promise resolves to an object containing the fields:\n *\n *  * {number}  count:       estimate of the number of results\n *  * {string}  next_batch:  token for back-pagination; if undefined, there are\n *                           no more results\n *  * {Array}   highlights:  a list of words to highlight from the stemming\n *                           algorithm\n *  * {Array}   results:     a list of results\n *\n * Each entry in the results list is a {module:models/search-result.SearchResult}.\n *\n * @param {Object} opts\n * @param {string} opts.term     the term to search for\n * @param {Object} opts.filter   a JSON filter object to pass in the request\n * @return {module:client.Promise} Resolves: result object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.searchRoomEvents = function(opts) {\n    // TODO: support groups\n\n    const body = {\n        search_categories: {\n            room_events: {\n                search_term: opts.term,\n                filter: opts.filter,\n                order_by: \"recent\",\n                event_context: {\n                    before_limit: 1,\n                    after_limit: 1,\n                    include_profile: true,\n                },\n            },\n        },\n    };\n\n    const searchResults = {\n        _query: body,\n        results: [],\n        highlights: [],\n    };\n\n    return this.search({body: body}).then(\n        this._processRoomEventsSearch.bind(this, searchResults),\n    );\n};\n\n/**\n * Take a result from an earlier searchRoomEvents call, and backfill results.\n *\n * @param  {object} searchResults  the results object to be updated\n * @return {module:client.Promise} Resolves: updated result object\n * @return {Error} Rejects: with an error response.\n */\nMatrixClient.prototype.backPaginateRoomEventsSearch = function(searchResults) {\n    // TODO: we should implement a backoff (as per scrollback()) to deal more\n    // nicely with HTTP errors.\n\n    if (!searchResults.next_batch) {\n        return Promise.reject(new Error(\"Cannot backpaginate event search any further\"));\n    }\n\n    if (searchResults.pendingRequest) {\n        // already a request in progress - return the existing promise\n        return searchResults.pendingRequest;\n    }\n\n    const searchOpts = {\n        body: searchResults._query,\n        next_batch: searchResults.next_batch,\n    };\n\n    const promise = this.search(searchOpts).then(\n        this._processRoomEventsSearch.bind(this, searchResults),\n    ).finally(function() {\n        searchResults.pendingRequest = null;\n    });\n    searchResults.pendingRequest = promise;\n\n    return promise;\n};\n\n/**\n * helper for searchRoomEvents and backPaginateRoomEventsSearch. Processes the\n * response from the API call and updates the searchResults\n *\n * @param {Object} searchResults\n * @param {Object} response\n * @return {Object} searchResults\n * @private\n */\nMatrixClient.prototype._processRoomEventsSearch = function(searchResults, response) {\n    const room_events = response.search_categories.room_events;\n\n    searchResults.count = room_events.count;\n    searchResults.next_batch = room_events.next_batch;\n\n    // combine the highlight list with our existing list; build an object\n    // to avoid O(N^2) fail\n    const highlights = {};\n    room_events.highlights.forEach(function(hl) {\n        highlights[hl] = 1;\n    });\n    searchResults.highlights.forEach(function(hl) {\n        highlights[hl] = 1;\n    });\n\n    // turn it back into a list.\n    searchResults.highlights = Object.keys(highlights);\n\n    // append the new results to our existing results\n    for (let i = 0; i < room_events.results.length; i++) {\n        const sr = SearchResult.fromJson(room_events.results[i], this.getEventMapper());\n        searchResults.results.push(sr);\n    }\n    return searchResults;\n};\n\n\n/**\n * Populate the store with rooms the user has left.\n * @return {module:client.Promise} Resolves: TODO - Resolved when the rooms have\n * been added to the data store.\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.syncLeftRooms = function() {\n    // Guard against multiple calls whilst ongoing and multiple calls post success\n    if (this._syncedLeftRooms) {\n        return Promise.resolve([]); // don't call syncRooms again if it succeeded.\n    }\n    if (this._syncLeftRoomsPromise) {\n        return this._syncLeftRoomsPromise; // return the ongoing request\n    }\n    const self = this;\n    const syncApi = new SyncApi(this, this._clientOpts);\n    this._syncLeftRoomsPromise = syncApi.syncLeftRooms();\n\n    // cleanup locks\n    this._syncLeftRoomsPromise.then(function(res) {\n        console.log(\"Marking success of sync left room request\");\n        self._syncedLeftRooms = true; // flip the bit on success\n    }).finally(function() {\n        self._syncLeftRoomsPromise = null; // cleanup ongoing request state\n    });\n\n    return this._syncLeftRoomsPromise;\n};\n\n// Filters\n// =======\n\n/**\n * Create a new filter.\n * @param {Object} content The HTTP body for the request\n * @return {Filter} Resolves to a Filter object.\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.createFilter = function(content) {\n    const self = this;\n    const path = utils.encodeUri(\"/user/$userId/filter\", {\n        $userId: this.credentials.userId,\n    });\n    return this._http.authedRequest(\n        undefined, \"POST\", path, undefined, content,\n    ).then(function(response) {\n        // persist the filter\n        const filter = Filter.fromJson(\n            self.credentials.userId, response.filter_id, content,\n        );\n        self.store.storeFilter(filter);\n        return filter;\n    });\n};\n\n/**\n * Retrieve a filter.\n * @param {string} userId The user ID of the filter owner\n * @param {string} filterId The filter ID to retrieve\n * @param {boolean} allowCached True to allow cached filters to be returned.\n * Default: True.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.getFilter = function(userId, filterId, allowCached) {\n    if (allowCached) {\n        const filter = this.store.getFilter(userId, filterId);\n        if (filter) {\n            return Promise.resolve(filter);\n        }\n    }\n\n    const self = this;\n    const path = utils.encodeUri(\"/user/$userId/filter/$filterId\", {\n        $userId: userId,\n        $filterId: filterId,\n    });\n\n    return this._http.authedRequest(\n        undefined, \"GET\", path, undefined, undefined,\n    ).then(function(response) {\n        // persist the filter\n        const filter = Filter.fromJson(\n            userId, filterId, response,\n        );\n        self.store.storeFilter(filter);\n        return filter;\n    });\n};\n\n/**\n * @param {string} filterName\n * @param {Filter} filter\n * @return {Promise<String>} Filter ID\n */\nMatrixClient.prototype.getOrCreateFilter = function(filterName, filter) {\n    const filterId = this.store.getFilterIdByName(filterName);\n    let promise = Promise.resolve();\n    const self = this;\n\n    if (filterId) {\n        // check that the existing filter matches our expectations\n        promise = self.getFilter(self.credentials.userId,\n                         filterId, true,\n        ).then(function(existingFilter) {\n            const oldDef = existingFilter.getDefinition();\n            const newDef = filter.getDefinition();\n\n            if (utils.deepCompare(oldDef, newDef)) {\n                // super, just use that.\n                // debuglog(\"Using existing filter ID %s: %s\", filterId,\n                //          JSON.stringify(oldDef));\n                return Promise.resolve(filterId);\n            }\n            // debuglog(\"Existing filter ID %s: %s; new filter: %s\",\n            //          filterId, JSON.stringify(oldDef), JSON.stringify(newDef));\n            self.store.setFilterIdByName(filterName, undefined);\n            return undefined;\n        }, function(error) {\n            // Synapse currently returns the following when the filter cannot be found:\n            // {\n            //     errcode: \"M_UNKNOWN\",\n            //     name: \"M_UNKNOWN\",\n            //     message: \"No row found\",\n            //     data: Object, httpStatus: 404\n            // }\n            if (error.httpStatus === 404 &&\n                (error.errcode === \"M_UNKNOWN\" || error.errcode === \"M_NOT_FOUND\")) {\n                // Clear existing filterId from localStorage\n                // if it no longer exists on the server\n                self.store.setFilterIdByName(filterName, undefined);\n                // Return a undefined value for existingId further down the promise chain\n                return undefined;\n            } else {\n                throw error;\n            }\n        });\n    }\n\n    return promise.then(function(existingId) {\n        if (existingId) {\n            return existingId;\n        }\n\n        // create a new filter\n        return self.createFilter(filter.getDefinition(),\n        ).then(function(createdFilter) {\n            // debuglog(\"Created new filter ID %s: %s\", createdFilter.filterId,\n            //          JSON.stringify(createdFilter.getDefinition()));\n            self.store.setFilterIdByName(filterName, createdFilter.filterId);\n            return createdFilter.filterId;\n        });\n    });\n};\n\n\n/**\n * Gets a bearer token from the Home Server that the user can\n * present to a third party in order to prove their ownership\n * of the Matrix account they are logged into.\n * @return {module:client.Promise} Resolves: Token object\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.getOpenIdToken = function() {\n    const path = utils.encodeUri(\"/user/$userId/openid/request_token\", {\n        $userId: this.credentials.userId,\n    });\n\n    return this._http.authedRequest(\n        undefined, \"POST\", path, undefined, {},\n    );\n};\n\n\n// VoIP operations\n// ===============\n\n/**\n * @param {module:client.callback} callback Optional.\n * @return {module:client.Promise} Resolves: TODO\n * @return {module:http-api.MatrixError} Rejects: with an error response.\n */\nMatrixClient.prototype.turnServer = function(callback) {\n    return this._http.authedRequest(callback, \"GET\", \"/voip/turnServer\");\n};\n\n/**\n * Get the TURN servers for this home server.\n * @return {Array<Object>} The servers or an empty list.\n */\nMatrixClient.prototype.getTurnServers = function() {\n    return this._turnServers || [];\n};\n\n// Higher level APIs\n// =================\n\n// TODO: stuff to handle:\n//   local echo\n//   event dup suppression? - apparently we should still be doing this\n//   tracking current display name / avatar per-message\n//   pagination\n//   re-sending (including persisting pending messages to be sent)\n//   - Need a nice way to callback the app for arbitrary events like\n//     displayname changes\n//   due to ambiguity (or should this be on a chat-specific layer)?\n//   reconnect after connectivity outages\n\n\n/**\n * High level helper method to begin syncing and poll for new events. To listen for these\n * events, add a listener for {@link module:client~MatrixClient#event:\"event\"}\n * via {@link module:client~MatrixClient#on}. Alternatively, listen for specific\n * state change events.\n * @param {Object=} opts Options to apply when syncing.\n * @param {Number=} opts.initialSyncLimit The event <code>limit=</code> to apply\n * to initial sync. Default: 8.\n * @param {Boolean=} opts.includeArchivedRooms True to put <code>archived=true</code>\n * on the <code>/initialSync</code> request. Default: false.\n * @param {Boolean=} opts.resolveInvitesToProfiles True to do /profile requests\n * on every invite event if the displayname/avatar_url is not known for this user ID.\n * Default: false.\n *\n * @param {String=} opts.pendingEventOrdering Controls where pending messages\n * appear in a room's timeline. If \"<b>chronological</b>\", messages will appear\n * in the timeline when the call to <code>sendEvent</code> was made. If\n * \"<b>detached</b>\", pending messages will appear in a separate list,\n * accessbile via {@link module:models/room#getPendingEvents}. Default:\n * \"chronological\".\n *\n * @param {Number=} opts.pollTimeout The number of milliseconds to wait on /sync.\n * Default: 30000 (30 seconds).\n *\n * @param {Filter=} opts.filter The filter to apply to /sync calls. This will override\n * the opts.initialSyncLimit, which would normally result in a timeline limit filter.\n */\nMatrixClient.prototype.startClient = function(opts) {\n    if (this.clientRunning) {\n        // client is already running.\n        return;\n    }\n    this.clientRunning = true;\n    // backwards compat for when 'opts' was 'historyLen'.\n    if (typeof opts === \"number\") {\n        opts = {\n            initialSyncLimit: opts,\n        };\n    }\n\n    if (this._crypto) {\n        this._crypto.uploadDeviceKeys().done();\n        this._crypto.start();\n    }\n\n    // periodically poll for turn servers if we support voip\n    checkTurnServers(this);\n\n    if (this._syncApi) {\n        // This shouldn't happen since we thought the client was not running\n        console.error(\"Still have sync object whilst not running: stopping old one\");\n        this._syncApi.stop();\n    }\n\n    // shallow-copy the opts dict before modifying and storing it\n    opts = Object.assign({}, opts);\n\n    opts.crypto = this._crypto;\n    opts.canResetEntireTimeline = (roomId) => {\n        if (!this._canResetTimelineCallback) {\n            return false;\n        }\n        return this._canResetTimelineCallback(roomId);\n    };\n    this._clientOpts = opts;\n\n    this._syncApi = new SyncApi(this, opts);\n    this._syncApi.sync();\n};\n\n/**\n * High level helper method to stop the client from polling and allow a\n * clean shutdown.\n */\nMatrixClient.prototype.stopClient = function() {\n    console.log('stopping MatrixClient');\n\n    this.clientRunning = false;\n    // TODO: f.e. Room => self.store.storeRoom(room) ?\n    if (this._syncApi) {\n        this._syncApi.stop();\n        this._syncApi = null;\n    }\n    if (this._crypto) {\n        this._crypto.stop();\n    }\n    if (this._peekSync) {\n        this._peekSync.stopPeeking();\n    }\n    global.clearTimeout(this._checkTurnServersTimeoutID);\n};\n\n/*\n * Set a function which is called when /sync returns a 'limited' response.\n * It is called with a room ID and returns a boolean. It should return 'true' if the SDK\n * can SAFELY remove events from this room. It may not be safe to remove events if there\n * are other references to the timelines for this room, e.g because the client is\n * actively viewing events in this room.\n * Default: returns false.\n * @param {Function} cb The callback which will be invoked.\n */\nMatrixClient.prototype.setCanResetTimelineCallback = function(cb) {\n    this._canResetTimelineCallback = cb;\n};\n\n/**\n * Get the callback set via `setCanResetTimelineCallback`.\n * @return {?Function} The callback or null\n */\nMatrixClient.prototype.getCanResetTimelineCallback = function() {\n    return this._canResetTimelineCallback;\n};\n\nfunction setupCallEventHandler(client) {\n    const candidatesByCall = {\n        // callId: [Candidate]\n    };\n\n    // Maintain a buffer of events before the client has synced for the first time.\n    // This buffer will be inspected to see if we should send incoming call\n    // notifications. It needs to be buffered to correctly determine if an\n    // incoming call has had a matching answer/hangup.\n    let callEventBuffer = [];\n    let isClientPrepared = false;\n    client.on(\"sync\", function(state) {\n        if (state === \"PREPARED\") {\n            isClientPrepared = true;\n            const ignoreCallIds = {}; // Set<String>\n            // inspect the buffer and mark all calls which have been answered\n            // or hung up before passing them to the call event handler.\n            for (let i = callEventBuffer.length - 1; i >= 0; i--) {\n                const ev = callEventBuffer[i];\n                if (ev.getType() === \"m.call.answer\" ||\n                        ev.getType() === \"m.call.hangup\") {\n                    ignoreCallIds[ev.getContent().call_id] = \"yep\";\n                }\n            }\n            // now loop through the buffer chronologically and inject them\n            callEventBuffer.forEach(function(e) {\n                if (ignoreCallIds[e.getContent().call_id]) {\n                    console.log(\n                        'Ignoring previously answered/hungup call ' +\n                            e.getContent().call_id,\n                    );\n                    return;\n                }\n                callEventHandler(e);\n            });\n            callEventBuffer = [];\n        }\n    });\n\n    client.on(\"event\", onEvent);\n\n    function onEvent(event) {\n        if (event.getType().indexOf(\"m.call.\") !== 0) {\n            // not a call event\n            if (event.isBeingDecrypted() || event.isDecryptionFailure()) {\n                // not *yet* a call event, but might become one...\n                event.once(\"Event.decrypted\", onEvent);\n            }\n            return;\n        }\n        if (!isClientPrepared) {\n            callEventBuffer.push(event);\n            return;\n        }\n        callEventHandler(event);\n    }\n\n    function callEventHandler(event) {\n        const content = event.getContent();\n        let call = content.call_id ? client.callList[content.call_id] : undefined;\n        let i;\n        //console.log(\"RECV %s content=%s\", event.getType(), JSON.stringify(content));\n\n        if (event.getType() === \"m.call.invite\") {\n            if (event.getSender() === client.credentials.userId) {\n                return; // ignore invites you send\n            }\n\n            if (event.getAge() > content.lifetime) {\n                return; // expired call\n            }\n\n            if (call && call.state === \"ended\") {\n                return; // stale/old invite event\n            }\n            if (call) {\n                console.log(\n                    \"WARN: Already have a MatrixCall with id %s but got an \" +\n                    \"invite. Clobbering.\",\n                    content.call_id,\n                );\n            }\n\n            call = webRtcCall.createNewMatrixCall(client, event.getRoomId());\n            if (!call) {\n                console.log(\n                    \"Incoming call ID \" + content.call_id + \" but this client \" +\n                    \"doesn't support WebRTC\",\n                );\n                // don't hang up the call: there could be other clients\n                // connected that do support WebRTC and declining the\n                // the call on their behalf would be really annoying.\n                return;\n            }\n\n            call.callId = content.call_id;\n            call._initWithInvite(event);\n            client.callList[call.callId] = call;\n\n            // if we stashed candidate events for that call ID, play them back now\n            if (candidatesByCall[call.callId]) {\n                for (i = 0; i < candidatesByCall[call.callId].length; i++) {\n                    call._gotRemoteIceCandidate(\n                        candidatesByCall[call.callId][i],\n                    );\n                }\n            }\n\n            // Were we trying to call that user (room)?\n            let existingCall;\n            const existingCalls = utils.values(client.callList);\n            for (i = 0; i < existingCalls.length; ++i) {\n                const thisCall = existingCalls[i];\n                if (call.roomId === thisCall.roomId &&\n                        thisCall.direction === 'outbound' &&\n                        ([\"wait_local_media\", \"create_offer\", \"invite_sent\"].indexOf(\n                            thisCall.state) !== -1)) {\n                    existingCall = thisCall;\n                    break;\n                }\n            }\n\n            if (existingCall) {\n                // If we've only got to wait_local_media or create_offer and\n                // we've got an invite, pick the incoming call because we know\n                // we haven't sent our invite yet otherwise, pick whichever\n                // call has the lowest call ID (by string comparison)\n                if (existingCall.state === 'wait_local_media' ||\n                        existingCall.state === 'create_offer' ||\n                        existingCall.callId > call.callId) {\n                    console.log(\n                        \"Glare detected: answering incoming call \" + call.callId +\n                        \" and canceling outgoing call \" + existingCall.callId,\n                    );\n                    existingCall._replacedBy(call);\n                    call.answer();\n                } else {\n                    console.log(\n                        \"Glare detected: rejecting incoming call \" + call.callId +\n                        \" and keeping outgoing call \" + existingCall.callId,\n                    );\n                    call.hangup();\n                }\n            } else {\n                client.emit(\"Call.incoming\", call);\n            }\n        } else if (event.getType() === 'm.call.answer') {\n            if (!call) {\n                return;\n            }\n            if (event.getSender() === client.credentials.userId) {\n                if (call.state === 'ringing') {\n                    call._onAnsweredElsewhere(content);\n                }\n            } else {\n                call._receivedAnswer(content);\n            }\n        } else if (event.getType() === 'm.call.candidates') {\n            if (event.getSender() === client.credentials.userId) {\n                return;\n            }\n            if (!call) {\n                // store the candidates; we may get a call eventually.\n                if (!candidatesByCall[content.call_id]) {\n                    candidatesByCall[content.call_id] = [];\n                }\n                candidatesByCall[content.call_id] = candidatesByCall[\n                    content.call_id\n                ].concat(content.candidates);\n            } else {\n                for (i = 0; i < content.candidates.length; i++) {\n                    call._gotRemoteIceCandidate(content.candidates[i]);\n                }\n            }\n        } else if (event.getType() === 'm.call.hangup') {\n            // Note that we also observe our own hangups here so we can see\n            // if we've already rejected a call that would otherwise be valid\n            if (!call) {\n                // if not live, store the fact that the call has ended because\n                // we're probably getting events backwards so\n                // the hangup will come before the invite\n                call = webRtcCall.createNewMatrixCall(client, event.getRoomId());\n                if (call) {\n                    call.callId = content.call_id;\n                    call._initWithHangup(event);\n                    client.callList[content.call_id] = call;\n                }\n            } else {\n                if (call.state !== 'ended') {\n                    call._onHangupReceived(content);\n                    delete client.callList[content.call_id];\n                }\n            }\n        }\n    }\n}\n\nfunction checkTurnServers(client) {\n    if (!client._supportsVoip) {\n        return;\n    }\n    if (client.isGuest()) {\n        return; // guests can't access TURN servers\n    }\n\n    client.turnServer().done(function(res) {\n        if (res.uris) {\n            console.log(\"Got TURN URIs: \" + res.uris + \" refresh in \" +\n                res.ttl + \" secs\");\n            // map the response to a format that can be fed to\n            // RTCPeerConnection\n            const servers = {\n                urls: res.uris,\n                username: res.username,\n                credential: res.password,\n            };\n            client._turnServers = [servers];\n            // re-fetch when we're about to reach the TTL\n            client._checkTurnServersTimeoutID = setTimeout(() => {\n                checkTurnServers(client);\n            }, (res.ttl || (60 * 60)) * 1000 * 0.9);\n        }\n    }, function(err) {\n        console.error(\"Failed to get TURN URIs\");\n        client._checkTurnServersTimeoutID =\n            setTimeout(function() {\n checkTurnServers(client);\n}, 60000);\n    });\n}\n\nfunction _reject(callback, defer, err) {\n    if (callback) {\n        callback(err);\n    }\n    defer.reject(err);\n}\n\nfunction _resolve(callback, defer, res) {\n    if (callback) {\n        callback(null, res);\n    }\n    defer.resolve(res);\n}\n\nfunction _PojoToMatrixEventMapper(client) {\n    function mapper(plainOldJsObject) {\n        const event = new MatrixEvent(plainOldJsObject);\n        if (event.isEncrypted()) {\n            client.reEmitter.reEmit(event, [\n                \"Event.decrypted\",\n            ]);\n            event.attemptDecryption(client._crypto);\n        }\n        return event;\n    }\n    return mapper;\n}\n\n/**\n * @return {Function}\n */\nMatrixClient.prototype.getEventMapper = function() {\n    return _PojoToMatrixEventMapper(this);\n};\n\n// Identity Server Operations\n// ==========================\n\n/**\n * Generates a random string suitable for use as a client secret. <strong>This\n * method is experimental and may change.</strong>\n * @return {string} A new client secret\n */\nMatrixClient.prototype.generateClientSecret = function() {\n    let ret = \"\";\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (let i = 0; i < 32; i++) {\n        ret += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n\n    return ret;\n};\n\n/** */\nmodule.exports.MatrixClient = MatrixClient;\n/** */\nmodule.exports.CRYPTO_ENABLED = CRYPTO_ENABLED;\n\n// MatrixClient Event JSDocs\n\n/**\n * Fires whenever the SDK receives a new event.\n * <p>\n * This is only fired for live events received via /sync - it is not fired for\n * events received over context, search, or pagination APIs.\n *\n * @event module:client~MatrixClient#\"event\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @example\n * matrixClient.on(\"event\", function(event){\n *   var sender = event.getSender();\n * });\n */\n\n/**\n * Fires whenever the SDK receives a new to-device event.\n * @event module:client~MatrixClient#\"toDeviceEvent\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @example\n * matrixClient.on(\"toDeviceEvent\", function(event){\n *   var sender = event.getSender();\n * });\n */\n\n/**\n * Fires whenever the SDK's syncing state is updated. The state can be one of:\n * <ul>\n *\n * <li>PREPARED: The client has synced with the server at least once and is\n * ready for methods to be called on it. This will be immediately followed by\n * a state of SYNCING. <i>This is the equivalent of \"syncComplete\" in the\n * previous API.</i></li>\n *\n * <li>SYNCING : The client is currently polling for new events from the server.\n * This will be called <i>after</i> processing latest events from a sync.</li>\n *\n * <li>ERROR : The client has had a problem syncing with the server. If this is\n * called <i>before</i> PREPARED then there was a problem performing the initial\n * sync. If this is called <i>after</i> PREPARED then there was a problem polling\n * the server for updates. This may be called multiple times even if the state is\n * already ERROR. <i>This is the equivalent of \"syncError\" in the previous\n * API.</i></li>\n *\n * <li>RECONNECTING: The sync connection has dropped, but not (yet) in a way that\n * should be considered erroneous.\n * </li>\n *\n * <li>STOPPED: The client has stopped syncing with server due to stopClient\n * being called.\n * </li>\n * </ul>\n * State transition diagram:\n * <pre>\n *                                          +---->STOPPED\n *                                          |\n *              +----->PREPARED -------> SYNCING <--+\n *              |        ^                |  ^      |\n *              |        |                |  |      |\n *              |        |                V  |      |\n *   null ------+        |  +--------RECONNECTING   |\n *              |        |  V                       |\n *              +------->ERROR ---------------------+\n *\n * NB: 'null' will never be emitted by this event.\n *\n * </pre>\n * Transitions:\n * <ul>\n *\n * <li><code>null -> PREPARED</code> : Occurs when the initial sync is completed\n * first time. This involves setting up filters and obtaining push rules.\n *\n * <li><code>null -> ERROR</code> : Occurs when the initial sync failed first time.\n *\n * <li><code>ERROR -> PREPARED</code> : Occurs when the initial sync succeeds\n * after previously failing.\n *\n * <li><code>PREPARED -> SYNCING</code> : Occurs immediately after transitioning\n * to PREPARED. Starts listening for live updates rather than catching up.\n *\n * <li><code>SYNCING -> RECONNECTING</code> : Occurs when the live update fails.\n *\n * <li><code>RECONNECTING -> RECONNECTING</code> : Can occur if the update calls\n * continue to fail, but the keepalive calls (to /versions) succeed.\n *\n * <li><code>RECONNECTING -> ERROR</code> : Occurs when the keepalive call also fails\n *\n * <li><code>ERROR -> SYNCING</code> : Occurs when the client has performed a\n * live update after having previously failed.\n *\n * <li><code>ERROR -> ERROR</code> : Occurs when the client has failed to keepalive\n * for a second time or more.</li>\n *\n * <li><code>SYNCING -> SYNCING</code> : Occurs when the client has performed a live\n * update. This is called <i>after</i> processing.</li>\n *\n * <li><code>* -> STOPPED</code> : Occurs once the client has stopped syncing or\n * trying to sync after stopClient has been called.</li>\n * </ul>\n *\n * @event module:client~MatrixClient#\"sync\"\n *\n * @param {string} state An enum representing the syncing state. One of \"PREPARED\",\n * \"SYNCING\", \"ERROR\", \"STOPPED\".\n *\n * @param {?string} prevState An enum representing the previous syncing state.\n * One of \"PREPARED\", \"SYNCING\", \"ERROR\", \"STOPPED\" <b>or null</b>.\n *\n * @param {?Object} data Data about this transition.\n *\n * @param {MatrixError} data.err The matrix error if <code>state=ERROR</code>.\n *\n * @param {String} data.oldSyncToken The 'since' token passed to /sync.\n *    <code>null</code> for the first successful sync since this client was\n *    started. Only present if <code>state=PREPARED</code> or\n *    <code>state=SYNCING</code>.\n *\n * @param {String} data.nextSyncToken The 'next_batch' result from /sync, which\n *    will become the 'since' token for the next call to /sync. Only present if\n *    <code>state=PREPARED</code> or <code>state=SYNCING</code>.\n *\n * @param {boolean} data.catchingUp True if we are working our way through a\n *    backlog of events after connecting. Only present if <code>state=SYNCING</code>.\n *\n * @example\n * matrixClient.on(\"sync\", function(state, prevState, data) {\n *   switch (state) {\n *     case \"ERROR\":\n *       // update UI to say \"Connection Lost\"\n *       break;\n *     case \"SYNCING\":\n *       // update UI to remove any \"Connection Lost\" message\n *       break;\n *     case \"PREPARED\":\n *       // the client instance is ready to be queried.\n *       var rooms = matrixClient.getRooms();\n *       break;\n *   }\n * });\n */\n\n /**\n * Fires whenever the sdk learns about a new group. <strong>This event\n * is experimental and may change.</strong>\n * @event module:client~MatrixClient#\"Group\"\n * @param {Group} group The newly created, fully populated group.\n * @example\n * matrixClient.on(\"Group\", function(group){\n *   var groupId = group.groupId;\n * });\n */\n\n /**\n * Fires whenever a new Room is added. This will fire when you are invited to a\n * room, as well as when you join a room. <strong>This event is experimental and\n * may change.</strong>\n * @event module:client~MatrixClient#\"Room\"\n * @param {Room} room The newly created, fully populated room.\n * @example\n * matrixClient.on(\"Room\", function(room){\n *   var roomId = room.roomId;\n * });\n */\n\n /**\n * Fires whenever a Room is removed. This will fire when you forget a room.\n * <strong>This event is experimental and may change.</strong>\n * @event module:client~MatrixClient#\"deleteRoom\"\n * @param {string} roomId The deleted room ID.\n * @example\n * matrixClient.on(\"deleteRoom\", function(roomId){\n *   // update UI from getRooms()\n * });\n */\n\n/**\n * Fires whenever an incoming call arrives.\n * @event module:client~MatrixClient#\"Call.incoming\"\n * @param {module:webrtc/call~MatrixCall} call The incoming call.\n * @example\n * matrixClient.on(\"Call.incoming\", function(call){\n *   call.answer(); // auto-answer\n * });\n */\n\n/**\n * Fires whenever the login session the JS SDK is using is no\n * longer valid and the user must log in again.\n * NB. This only fires when action is required from the user, not\n * when then login session can be renewed by using a refresh token.\n * @event module:client~MatrixClient#\"Session.logged_out\"\n * @example\n * matrixClient.on(\"Session.logged_out\", function(call){\n *   // show the login screen\n * });\n */\n\n/**\n * Fires when a device is marked as verified/unverified/blocked/unblocked by\n * {@link module:client~MatrixClient#setDeviceVerified|MatrixClient.setDeviceVerified} or\n * {@link module:client~MatrixClient#setDeviceBlocked|MatrixClient.setDeviceBlocked}.\n *\n * @event module:client~MatrixClient#\"deviceVerificationChanged\"\n * @param {string} userId the owner of the verified device\n * @param {string} deviceId the id of the verified device\n * @param {module:crypto/deviceinfo} deviceInfo updated device information\n */\n\n/**\n * Fires whenever new user-scoped account_data is added.\n * @event module:client~MatrixClient#\"accountData\"\n * @param {MatrixEvent} event The event describing the account_data just added\n * @example\n * matrixClient.on(\"accountData\", function(event){\n *   myAccountData[event.type] = event.content;\n * });\n */\n\n\n// EventEmitter JSDocs\n\n/**\n * The {@link https://nodejs.org/api/events.html|EventEmitter} class.\n * @external EventEmitter\n * @see {@link https://nodejs.org/api/events.html}\n */\n\n/**\n * Adds a listener to the end of the listeners array for the specified event.\n * No checks are made to see if the listener has already been added. Multiple\n * calls passing the same combination of event and listener will result in the\n * listener being added multiple times.\n * @function external:EventEmitter#on\n * @param {string} event The event to listen for.\n * @param {Function} listener The function to invoke.\n * @return {EventEmitter} for call chaining.\n */\n\n/**\n * Alias for {@link external:EventEmitter#on}.\n * @function external:EventEmitter#addListener\n * @param {string} event The event to listen for.\n * @param {Function} listener The function to invoke.\n * @return {EventEmitter} for call chaining.\n */\n\n/**\n * Adds a <b>one time</b> listener for the event. This listener is invoked only\n * the next time the event is fired, after which it is removed.\n * @function external:EventEmitter#once\n * @param {string} event The event to listen for.\n * @param {Function} listener The function to invoke.\n * @return {EventEmitter} for call chaining.\n */\n\n/**\n * Remove a listener from the listener array for the specified event.\n * <b>Caution:</b> changes array indices in the listener array behind the\n * listener.\n * @function external:EventEmitter#removeListener\n * @param {string} event The event to listen for.\n * @param {Function} listener The function to invoke.\n * @return {EventEmitter} for call chaining.\n */\n\n/**\n * Removes all listeners, or those of the specified event. It's not a good idea\n * to remove listeners that were added elsewhere in the code, especially when\n * it's on an emitter that you didn't create (e.g. sockets or file streams).\n * @function external:EventEmitter#removeAllListeners\n * @param {string} event Optional. The event to remove listeners for.\n * @return {EventEmitter} for call chaining.\n */\n\n/**\n * Execute each of the listeners in order with the supplied arguments.\n * @function external:EventEmitter#emit\n * @param {string} event The event to emit.\n * @param {Function} listener The function to invoke.\n * @return {boolean} true if event had listeners, false otherwise.\n */\n\n/**\n * By default EventEmitters will print a warning if more than 10 listeners are\n * added for a particular event. This is a useful default which helps finding\n * memory leaks. Obviously not all Emitters should be limited to 10. This\n * function allows that to be increased. Set to zero for unlimited.\n * @function external:EventEmitter#setMaxListeners\n * @param {Number} n The max number of listeners.\n * @return {EventEmitter} for call chaining.\n */\n\n// MatrixClient Callback JSDocs\n\n/**\n * The standard MatrixClient callback interface. Functions which accept this\n * will specify 2 return arguments. These arguments map to the 2 parameters\n * specified in this callback.\n * @callback module:client.callback\n * @param {Object} err The error value, the \"rejected\" value or null.\n * @param {Object} data The data returned, the \"resolved\" value.\n */\n\n /**\n  * {@link https://github.com/kriskowal/q|A promise implementation (Q)}. Functions\n  * which return this will specify 2 return arguments. These arguments map to the\n  * \"onFulfilled\" and \"onRejected\" values of the Promise.\n  * @typedef {Object} Promise\n  * @static\n  * @property {Function} then promise.then(onFulfilled, onRejected, onProgress)\n  * @property {Function} catch promise.catch(onRejected)\n  * @property {Function} finally promise.finally(callback)\n  * @property {Function} done promise.done(onFulfilled, onRejected, onProgress)\n  */\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * @module content-repo\n */\nconst utils = require(\"./utils\");\n\n/** Content Repo utility functions */\nmodule.exports = {\n    /**\n     * Get the HTTP URL for an MXC URI.\n     * @param {string} baseUrl The base homeserver url which has a content repo.\n     * @param {string} mxc The mxc:// URI.\n     * @param {Number} width The desired width of the thumbnail.\n     * @param {Number} height The desired height of the thumbnail.\n     * @param {string} resizeMethod The thumbnail resize method to use, either\n     * \"crop\" or \"scale\".\n     * @param {Boolean} allowDirectLinks If true, return any non-mxc URLs\n     * directly. Fetching such URLs will leak information about the user to\n     * anyone they share a room with. If false, will return the emptry string\n     * for such URLs.\n     * @return {string} The complete URL to the content.\n     */\n    getHttpUriForMxc: function(baseUrl, mxc, width, height,\n                               resizeMethod, allowDirectLinks) {\n        if (typeof mxc !== \"string\" || !mxc) {\n            return '';\n        }\n        if (mxc.indexOf(\"mxc://\") !== 0) {\n            if (allowDirectLinks) {\n                return mxc;\n            } else {\n                return '';\n            }\n        }\n        let serverAndMediaId = mxc.slice(6); // strips mxc://\n        let prefix = \"/_matrix/media/v1/download/\";\n        const params = {};\n\n        if (width) {\n            params.width = width;\n        }\n        if (height) {\n            params.height = height;\n        }\n        if (resizeMethod) {\n            params.method = resizeMethod;\n        }\n        if (utils.keys(params).length > 0) {\n            // these are thumbnailing params so they probably want the\n            // thumbnailing API...\n            prefix = \"/_matrix/media/v1/thumbnail/\";\n        }\n\n        const fragmentOffset = serverAndMediaId.indexOf(\"#\");\n        let fragment = \"\";\n        if (fragmentOffset >= 0) {\n            fragment = serverAndMediaId.substr(fragmentOffset);\n            serverAndMediaId = serverAndMediaId.substr(0, fragmentOffset);\n        }\n        return baseUrl + prefix + serverAndMediaId +\n            (utils.keys(params).length === 0 ? \"\" :\n            (\"?\" + utils.encodeParams(params))) + fragment;\n    },\n\n    /**\n     * Get an identicon URL from an arbitrary string.\n     * @param {string} baseUrl The base homeserver url which has a content repo.\n     * @param {string} identiconString The string to create an identicon for.\n     * @param {Number} width The desired width of the image in pixels. Default: 96.\n     * @param {Number} height The desired height of the image in pixels. Default: 96.\n     * @return {string} The complete URL to the identicon.\n     */\n    getIdenticonUri: function(baseUrl, identiconString, width, height) {\n        if (!identiconString) {\n            return null;\n        }\n        if (!width) {\n            width = 96;\n        }\n        if (!height) {\n            height = 96;\n        }\n        const params = {\n            width: width,\n            height: height,\n        };\n\n        const path = utils.encodeUri(\"/_matrix/media/v1/identicon/$ident\", {\n            $ident: identiconString,\n        });\n        return baseUrl + path +\n            (utils.keys(params).length === 0 ? \"\" :\n                (\"?\" + utils.encodeParams(params)));\n    },\n};\n","/*\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/**\n * @module crypto/DeviceList\n *\n * Manages the list of other users' devices\n */\n\nimport Promise from 'bluebird';\n\nimport DeviceInfo from './deviceinfo';\nimport olmlib from './olmlib';\n\n\n/* State transition diagram for DeviceList._deviceTrackingStatus\n *\n *                                |\n *     stopTrackingDeviceList     V\n *   +---------------------> NOT_TRACKED\n *   |                            |\n *   +<--------------------+      | startTrackingDeviceList\n *   |                     |      V\n *   |   +-------------> PENDING_DOWNLOAD <--------------------+-+\n *   |   |                      ^ |                            | |\n *   |   | restart     download | |  start download            | | invalidateUserDeviceList\n *   |   | client        failed | |                            | |\n *   |   |                      | V                            | |\n *   |   +------------ DOWNLOAD_IN_PROGRESS -------------------+ |\n *   |                    |       |                              |\n *   +<-------------------+       |  download successful         |\n *   ^                            V                              |\n *   +----------------------- UP_TO_DATE ------------------------+\n */\n\n\n// constants for DeviceList._deviceTrackingStatus\nconst TRACKING_STATUS_NOT_TRACKED = 0;\nconst TRACKING_STATUS_PENDING_DOWNLOAD = 1;\nconst TRACKING_STATUS_DOWNLOAD_IN_PROGRESS = 2;\nconst TRACKING_STATUS_UP_TO_DATE = 3;\n\n/**\n * @alias module:crypto/DeviceList\n */\nexport default class DeviceList {\n    constructor(baseApis, sessionStore, olmDevice) {\n        this._sessionStore = sessionStore;\n        this._serialiser = new DeviceListUpdateSerialiser(\n            baseApis, sessionStore, olmDevice,\n        );\n\n        // which users we are tracking device status for.\n        // userId -> TRACKING_STATUS_*\n        this._deviceTrackingStatus = sessionStore.getEndToEndDeviceTrackingStatus() || {};\n        for (const u of Object.keys(this._deviceTrackingStatus)) {\n            // if a download was in progress when we got shut down, it isn't any more.\n            if (this._deviceTrackingStatus[u] == TRACKING_STATUS_DOWNLOAD_IN_PROGRESS) {\n                this._deviceTrackingStatus[u] = TRACKING_STATUS_PENDING_DOWNLOAD;\n            }\n        }\n\n        // userId -> promise\n        this._keyDownloadsInProgressByUser = {};\n\n        this.lastKnownSyncToken = null;\n    }\n\n    /**\n     * Download the keys for a list of users and stores the keys in the session\n     * store.\n     * @param {Array} userIds The users to fetch.\n     * @param {bool} forceDownload Always download the keys even if cached.\n     *\n     * @return {Promise} A promise which resolves to a map userId->deviceId->{@link\n     * module:crypto/deviceinfo|DeviceInfo}.\n     */\n    downloadKeys(userIds, forceDownload) {\n        const usersToDownload = [];\n        const promises = [];\n\n        userIds.forEach((u) => {\n            const trackingStatus = this._deviceTrackingStatus[u];\n            if (this._keyDownloadsInProgressByUser[u]) {\n                // already a key download in progress/queued for this user; its results\n                // will be good enough for us.\n                console.log(\n                    `downloadKeys: already have a download in progress for ` +\n                    `${u}: awaiting its result`,\n                );\n                promises.push(this._keyDownloadsInProgressByUser[u]);\n            } else if (forceDownload || trackingStatus != TRACKING_STATUS_UP_TO_DATE) {\n                usersToDownload.push(u);\n            }\n        });\n\n        if (usersToDownload.length != 0) {\n            console.log(\"downloadKeys: downloading for\", usersToDownload);\n            const downloadPromise = this._doKeyDownload(usersToDownload);\n            promises.push(downloadPromise);\n        }\n\n        if (promises.length === 0) {\n            console.log(\"downloadKeys: already have all necessary keys\");\n        }\n\n        return Promise.all(promises).then(() => {\n            return this._getDevicesFromStore(userIds);\n        });\n    }\n\n    /**\n     * Get the stored device keys for a list of user ids\n     *\n     * @param {string[]} userIds the list of users to list keys for.\n     *\n     * @return {Object} userId->deviceId->{@link module:crypto/deviceinfo|DeviceInfo}.\n     */\n    _getDevicesFromStore(userIds) {\n        const stored = {};\n        const self = this;\n        userIds.map(function(u) {\n            stored[u] = {};\n            const devices = self.getStoredDevicesForUser(u) || [];\n            devices.map(function(dev) {\n                stored[u][dev.deviceId] = dev;\n            });\n        });\n        return stored;\n    }\n\n    /**\n     * Get the stored device keys for a user id\n     *\n     * @param {string} userId the user to list keys for.\n     *\n     * @return {module:crypto/deviceinfo[]|null} list of devices, or null if we haven't\n     * managed to get a list of devices for this user yet.\n     */\n    getStoredDevicesForUser(userId) {\n        const devs = this._sessionStore.getEndToEndDevicesForUser(userId);\n        if (!devs) {\n            return null;\n        }\n        const res = [];\n        for (const deviceId in devs) {\n            if (devs.hasOwnProperty(deviceId)) {\n                res.push(DeviceInfo.fromStorage(devs[deviceId], deviceId));\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Get the stored keys for a single device\n     *\n     * @param {string} userId\n     * @param {string} deviceId\n     *\n     * @return {module:crypto/deviceinfo?} device, or undefined\n     * if we don't know about this device\n     */\n    getStoredDevice(userId, deviceId) {\n        const devs = this._sessionStore.getEndToEndDevicesForUser(userId);\n        if (!devs || !devs[deviceId]) {\n            return undefined;\n        }\n        return DeviceInfo.fromStorage(devs[deviceId], deviceId);\n    }\n\n    /**\n     * Find a device by curve25519 identity key\n     *\n     * @param {string} userId     owner of the device\n     * @param {string} algorithm  encryption algorithm\n     * @param {string} senderKey  curve25519 key to match\n     *\n     * @return {module:crypto/deviceinfo?}\n     */\n    getDeviceByIdentityKey(userId, algorithm, senderKey) {\n        if (\n            algorithm !== olmlib.OLM_ALGORITHM &&\n            algorithm !== olmlib.MEGOLM_ALGORITHM\n        ) {\n            // we only deal in olm keys\n            return null;\n        }\n\n        const devices = this._sessionStore.getEndToEndDevicesForUser(userId);\n        if (!devices) {\n            return null;\n        }\n\n        for (const deviceId in devices) {\n            if (!devices.hasOwnProperty(deviceId)) {\n                continue;\n            }\n\n            const device = devices[deviceId];\n            for (const keyId in device.keys) {\n                if (!device.keys.hasOwnProperty(keyId)) {\n                    continue;\n                }\n                if (keyId.indexOf(\"curve25519:\") !== 0) {\n                    continue;\n                }\n                const deviceKey = device.keys[keyId];\n                if (deviceKey == senderKey) {\n                    return DeviceInfo.fromStorage(device, deviceId);\n                }\n            }\n        }\n\n        // doesn't match a known device\n        return null;\n    }\n\n    /**\n     * flag the given user for device-list tracking, if they are not already.\n     *\n     * This will mean that a subsequent call to refreshOutdatedDeviceLists()\n     * will download the device list for the user, and that subsequent calls to\n     * invalidateUserDeviceList will trigger more updates.\n     *\n     * @param {String} userId\n     */\n    startTrackingDeviceList(userId) {\n        // sanity-check the userId. This is mostly paranoia, but if synapse\n        // can't parse the userId we give it as an mxid, it 500s the whole\n        // request and we can never update the device lists again (because\n        // the broken userId is always 'invalid' and always included in any\n        // refresh request).\n        // By checking it is at least a string, we can eliminate a class of\n        // silly errors.\n        if (typeof userId !== 'string') {\n            throw new Error('userId must be a string; was '+userId);\n        }\n        if (!this._deviceTrackingStatus[userId]) {\n            console.log('Now tracking device list for ' + userId);\n            this._deviceTrackingStatus[userId] = TRACKING_STATUS_PENDING_DOWNLOAD;\n        }\n        // we don't yet persist the tracking status, since there may be a lot\n        // of calls; instead we wait for the forthcoming\n        // refreshOutdatedDeviceLists.\n    }\n\n    /**\n     * Mark the given user as no longer being tracked for device-list updates.\n     *\n     * This won't affect any in-progress downloads, which will still go on to\n     * complete; it will just mean that we don't think that we have an up-to-date\n     * list for future calls to downloadKeys.\n     *\n     * @param {String} userId\n     */\n    stopTrackingDeviceList(userId) {\n        if (this._deviceTrackingStatus[userId]) {\n            console.log('No longer tracking device list for ' + userId);\n            this._deviceTrackingStatus[userId] = TRACKING_STATUS_NOT_TRACKED;\n        }\n        // we don't yet persist the tracking status, since there may be a lot\n        // of calls; instead we wait for the forthcoming\n        // refreshOutdatedDeviceLists.\n    }\n\n\n    /**\n     * Mark the cached device list for the given user outdated.\n     *\n     * If we are not tracking this user's devices, we'll do nothing. Otherwise\n     * we flag the user as needing an update.\n     *\n     * This doesn't actually set off an update, so that several users can be\n     * batched together. Call refreshOutdatedDeviceLists() for that.\n     *\n     * @param {String} userId\n     */\n    invalidateUserDeviceList(userId) {\n        if (this._deviceTrackingStatus[userId]) {\n            console.log(\"Marking device list outdated for\", userId);\n            this._deviceTrackingStatus[userId] = TRACKING_STATUS_PENDING_DOWNLOAD;\n        }\n        // we don't yet persist the tracking status, since there may be a lot\n        // of calls; instead we wait for the forthcoming\n        // refreshOutdatedDeviceLists.\n    }\n\n    /**\n     * Mark all tracked device lists as outdated.\n     *\n     * This will flag each user whose devices we are tracking as in need of an\n     * update.\n     */\n    invalidateAllDeviceLists() {\n        for (const userId of Object.keys(this._deviceTrackingStatus)) {\n            this.invalidateUserDeviceList(userId);\n        }\n    }\n\n    /**\n     * If we have users who have outdated device lists, start key downloads for them\n     *\n     * @returns {Promise} which completes when the download completes; normally there\n     *    is no need to wait for this (it's mostly for the unit tests).\n     */\n    refreshOutdatedDeviceLists() {\n        const usersToDownload = [];\n        for (const userId of Object.keys(this._deviceTrackingStatus)) {\n            const stat = this._deviceTrackingStatus[userId];\n            if (stat == TRACKING_STATUS_PENDING_DOWNLOAD) {\n                usersToDownload.push(userId);\n            }\n        }\n\n        // we didn't persist the tracking status during\n        // invalidateUserDeviceList, so do it now.\n        this._persistDeviceTrackingStatus();\n\n        return this._doKeyDownload(usersToDownload);\n    }\n\n\n    /**\n     * Fire off download update requests for the given users, and update the\n     * device list tracking status for them, and the\n     * _keyDownloadsInProgressByUser map for them.\n     *\n     * @param {String[]} users  list of userIds\n     *\n     * @return {module:client.Promise} resolves when all the users listed have\n     *     been updated. rejects if there was a problem updating any of the\n     *     users.\n     */\n    _doKeyDownload(users) {\n        if (users.length === 0) {\n            // nothing to do\n            return Promise.resolve();\n        }\n\n        const prom = this._serialiser.updateDevicesForUsers(\n            users, this.lastKnownSyncToken,\n        ).then(() => {\n            finished(true);\n        }, (e) => {\n            console.error(\n                'Error downloading keys for ' + users + \":\", e,\n            );\n            finished(false);\n            throw e;\n        });\n\n        users.forEach((u) => {\n            this._keyDownloadsInProgressByUser[u] = prom;\n            const stat = this._deviceTrackingStatus[u];\n            if (stat == TRACKING_STATUS_PENDING_DOWNLOAD) {\n                this._deviceTrackingStatus[u] = TRACKING_STATUS_DOWNLOAD_IN_PROGRESS;\n            }\n        });\n\n        const finished = (success) => {\n            users.forEach((u) => {\n                // we may have queued up another download request for this user\n                // since we started this request. If that happens, we should\n                // ignore the completion of the first one.\n                if (this._keyDownloadsInProgressByUser[u] !== prom) {\n                    console.log('Another update in the queue for', u,\n                                '- not marking up-to-date');\n                    return;\n                }\n                delete this._keyDownloadsInProgressByUser[u];\n                const stat = this._deviceTrackingStatus[u];\n                if (stat == TRACKING_STATUS_DOWNLOAD_IN_PROGRESS) {\n                    if (success) {\n                        // we didn't get any new invalidations since this download started:\n                        // this user's device list is now up to date.\n                        this._deviceTrackingStatus[u] = TRACKING_STATUS_UP_TO_DATE;\n                        console.log(\"Device list for\", u, \"now up to date\");\n                    } else {\n                        this._deviceTrackingStatus[u] = TRACKING_STATUS_PENDING_DOWNLOAD;\n                    }\n                }\n            });\n            this._persistDeviceTrackingStatus();\n        };\n\n        return prom;\n    }\n\n    _persistDeviceTrackingStatus() {\n        this._sessionStore.storeEndToEndDeviceTrackingStatus(this._deviceTrackingStatus);\n    }\n}\n\n/**\n * Serialises updates to device lists\n *\n * Ensures that results from /keys/query are not overwritten if a second call\n * completes *before* an earlier one.\n *\n * It currently does this by ensuring only one call to /keys/query happens at a\n * time (and queuing other requests up).\n */\nclass DeviceListUpdateSerialiser {\n    constructor(baseApis, sessionStore, olmDevice) {\n        this._baseApis = baseApis;\n        this._sessionStore = sessionStore;\n        this._olmDevice = olmDevice;\n\n        this._downloadInProgress = false;\n\n        // users which are queued for download\n        // userId -> true\n        this._keyDownloadsQueuedByUser = {};\n\n        // deferred which is resolved when the queued users are downloaded.\n        //\n        // non-null indicates that we have users queued for download.\n        this._queuedQueryDeferred = null;\n\n        // sync token to be used for the next query: essentially the\n        // most recent one we know about\n        this._nextSyncToken = null;\n    }\n\n    /**\n     * Make a key query request for the given users\n     *\n     * @param {String[]} users list of user ids\n     *\n     * @param {String} syncToken sync token to pass in the query request, to\n     *     help the HS give the most recent results\n     *\n     * @return {module:client.Promise} resolves when all the users listed have\n     *     been updated. rejects if there was a problem updating any of the\n     *     users.\n     */\n    updateDevicesForUsers(users, syncToken) {\n        users.forEach((u) => {\n            this._keyDownloadsQueuedByUser[u] = true;\n        });\n        this._nextSyncToken = syncToken;\n\n        if (!this._queuedQueryDeferred) {\n            this._queuedQueryDeferred = Promise.defer();\n        }\n\n        if (this._downloadInProgress) {\n            // just queue up these users\n            console.log('Queued key download for', users);\n            return this._queuedQueryDeferred.promise;\n        }\n\n        // start a new download.\n        return this._doQueuedQueries();\n    }\n\n    _doQueuedQueries() {\n        if (this._downloadInProgress) {\n            throw new Error(\n                \"DeviceListUpdateSerialiser._doQueuedQueries called with request active\",\n            );\n        }\n\n        const downloadUsers = Object.keys(this._keyDownloadsQueuedByUser);\n        this._keyDownloadsQueuedByUser = {};\n        const deferred = this._queuedQueryDeferred;\n        this._queuedQueryDeferred = null;\n\n        console.log('Starting key download for', downloadUsers);\n        this._downloadInProgress = true;\n\n        const opts = {};\n        if (this._nextSyncToken) {\n            opts.token = this._nextSyncToken;\n        }\n\n        this._baseApis.downloadKeysForUsers(\n            downloadUsers, opts,\n        ).then((res) => {\n            const dk = res.device_keys || {};\n\n            // do each user in a separate promise, to avoid wedging the CPU\n            // (https://github.com/vector-im/riot-web/issues/3158)\n            //\n            // of course we ought to do this in a web worker or similar, but\n            // this serves as an easy solution for now.\n            let prom = Promise.resolve();\n            for (const userId of downloadUsers) {\n                prom = prom.delay(5).then(() => {\n                    return this._processQueryResponseForUser(userId, dk[userId]);\n                });\n            }\n\n            return prom;\n        }).done(() => {\n            console.log('Completed key download for ' + downloadUsers);\n\n            this._downloadInProgress = false;\n            deferred.resolve();\n\n            // if we have queued users, fire off another request.\n            if (this._queuedQueryDeferred) {\n                this._doQueuedQueries();\n            }\n        }, (e) => {\n            console.warn('Error downloading keys for ' + downloadUsers + ':', e);\n            this._downloadInProgressInProgress = false;\n            deferred.reject(e);\n        });\n\n        return deferred.promise;\n    }\n\n    async _processQueryResponseForUser(userId, response) {\n        console.log('got keys for ' + userId + ':', response);\n\n        // map from deviceid -> deviceinfo for this user\n        const userStore = {};\n        const devs = this._sessionStore.getEndToEndDevicesForUser(userId);\n        if (devs) {\n            Object.keys(devs).forEach((deviceId) => {\n                const d = DeviceInfo.fromStorage(devs[deviceId], deviceId);\n                userStore[deviceId] = d;\n            });\n        }\n\n        await _updateStoredDeviceKeysForUser(\n            this._olmDevice, userId, userStore, response || {},\n        );\n\n        // update the session store\n        const storage = {};\n        Object.keys(userStore).forEach((deviceId) => {\n            storage[deviceId] = userStore[deviceId].toStorage();\n        });\n\n        this._sessionStore.storeEndToEndDevicesForUser(\n            userId, storage,\n        );\n    }\n}\n\n\nasync function _updateStoredDeviceKeysForUser(_olmDevice, userId, userStore,\n        userResult) {\n    let updated = false;\n\n    // remove any devices in the store which aren't in the response\n    for (const deviceId in userStore) {\n        if (!userStore.hasOwnProperty(deviceId)) {\n            continue;\n        }\n\n        if (!(deviceId in userResult)) {\n            console.log(\"Device \" + userId + \":\" + deviceId +\n                \" has been removed\");\n            delete userStore[deviceId];\n            updated = true;\n        }\n    }\n\n    for (const deviceId in userResult) {\n        if (!userResult.hasOwnProperty(deviceId)) {\n            continue;\n        }\n\n        const deviceResult = userResult[deviceId];\n\n        // check that the user_id and device_id in the response object are\n        // correct\n        if (deviceResult.user_id !== userId) {\n            console.warn(\"Mismatched user_id \" + deviceResult.user_id +\n               \" in keys from \" + userId + \":\" + deviceId);\n            continue;\n        }\n        if (deviceResult.device_id !== deviceId) {\n            console.warn(\"Mismatched device_id \" + deviceResult.device_id +\n               \" in keys from \" + userId + \":\" + deviceId);\n            continue;\n        }\n\n        if (await _storeDeviceKeys(_olmDevice, userStore, deviceResult)) {\n            updated = true;\n        }\n    }\n\n    return updated;\n}\n\n/*\n * Process a device in a /query response, and add it to the userStore\n *\n * returns (a promise for) true if a change was made, else false\n */\nasync function _storeDeviceKeys(_olmDevice, userStore, deviceResult) {\n    if (!deviceResult.keys) {\n        // no keys?\n        return false;\n    }\n\n    const deviceId = deviceResult.device_id;\n    const userId = deviceResult.user_id;\n\n    const signKeyId = \"ed25519:\" + deviceId;\n    const signKey = deviceResult.keys[signKeyId];\n    if (!signKey) {\n        console.warn(\"Device \" + userId + \":\" + deviceId +\n            \" has no ed25519 key\");\n        return false;\n    }\n\n    const unsigned = deviceResult.unsigned || {};\n\n    try {\n        await olmlib.verifySignature(_olmDevice, deviceResult, userId, deviceId, signKey);\n    } catch (e) {\n        console.warn(\"Unable to verify signature on device \" +\n            userId + \":\" + deviceId + \":\" + e);\n        return false;\n    }\n\n    // DeviceInfo\n    let deviceStore;\n\n    if (deviceId in userStore) {\n        // already have this device.\n        deviceStore = userStore[deviceId];\n\n        if (deviceStore.getFingerprint() != signKey) {\n            // this should only happen if the list has been MITMed; we are\n            // best off sticking with the original keys.\n            //\n            // Should we warn the user about it somehow?\n            console.warn(\"Ed25519 key for device \" + userId + \":\" +\n               deviceId + \" has changed\");\n            return false;\n        }\n    } else {\n        userStore[deviceId] = deviceStore = new DeviceInfo(deviceId);\n    }\n\n    deviceStore.keys = deviceResult.keys || {};\n    deviceStore.algorithms = deviceResult.algorithms || [];\n    deviceStore.unsigned = unsigned;\n    return true;\n}\n","/*\nCopyright 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/**\n * olm.js wrapper\n *\n * @module crypto/OlmDevice\n */\nconst Olm = global.Olm;\nif (!Olm) {\n    throw new Error(\"global.Olm is not defined\");\n}\nconst utils = require(\"../utils\");\n\n\n// The maximum size of an event is 65K, and we base64 the content, so this is a\n// reasonable approximation to the biggest plaintext we can encrypt.\nconst MAX_PLAINTEXT_LENGTH = 65536 * 3 / 4;\n\nfunction checkPayloadLength(payloadString) {\n    if (payloadString === undefined) {\n        throw new Error(\"payloadString undefined\");\n    }\n\n    if (payloadString.length > MAX_PLAINTEXT_LENGTH) {\n        // might as well fail early here rather than letting the olm library throw\n        // a cryptic memory allocation error.\n        //\n        // Note that even if we manage to do the encryption, the message send may fail,\n        // because by the time we've wrapped the ciphertext in the event object, it may\n        // exceed 65K. But at least we won't just fail with \"abort()\" in that case.\n        throw new Error(\"Message too long (\" + payloadString.length + \" bytes). \" +\n                        \"The maximum for an encrypted message is \" +\n                        MAX_PLAINTEXT_LENGTH + \" bytes.\");\n    }\n}\n\n\n/**\n * The type of object we use for importing and exporting megolm session data.\n *\n * @typedef {Object} module:crypto/OlmDevice.MegolmSessionData\n * @property {String} sender_key  Sender's Curve25519 device key\n * @property {String[]} forwarding_curve25519_key_chain Devices which forwarded\n *     this session to us (normally empty).\n * @property {Object<string, string>} sender_claimed_keys Other keys the sender claims.\n * @property {String} room_id     Room this session is used in\n * @property {String} session_id  Unique id for the session\n * @property {String} session_key Base64'ed key data\n */\n\n\n/**\n * Manages the olm cryptography functions. Each OlmDevice has a single\n * OlmAccount and a number of OlmSessions.\n *\n * Accounts and sessions are kept pickled in a sessionStore.\n *\n * @constructor\n * @alias module:crypto/OlmDevice\n *\n * @param {Object} sessionStore A store to be used for data in end-to-end\n *    crypto\n *\n * @property {string} deviceCurve25519Key   Curve25519 key for the account\n * @property {string} deviceEd25519Key      Ed25519 key for the account\n */\nfunction OlmDevice(sessionStore) {\n    this._sessionStore = sessionStore;\n    this._pickleKey = \"DEFAULT_KEY\";\n\n    // don't know these until we load the account from storage in init()\n    this.deviceCurve25519Key = null;\n    this.deviceEd25519Key = null;\n    this._maxOneTimeKeys = null;\n\n    // we don't bother stashing outboundgroupsessions in the sessionstore -\n    // instead we keep them here.\n    this._outboundGroupSessionStore = {};\n\n    // Store a set of decrypted message indexes for each group session.\n    // This partially mitigates a replay attack where a MITM resends a group\n    // message into the room.\n    //\n    // TODO: If we ever remove an event from memory we will also need to remove\n    // it from this map. Otherwise if we download the event from the server we\n    // will think that it is a duplicate.\n    //\n    // Keys are strings of form \"<senderKey>|<session_id>|<message_index>\"\n    // Values are true.\n    this._inboundGroupSessionMessageIndexes = {};\n}\n\n/**\n * Initialise the OlmAccount. This must be called before any other operations\n * on the OlmDevice.\n *\n * Attempts to load the OlmAccount from localStorage, or creates one if none is\n * found.\n *\n * Reads the device keys from the OlmAccount object.\n */\nOlmDevice.prototype.init = async function() {\n    let e2eKeys;\n    const account = new Olm.Account();\n    try {\n        _initialise_account(this._sessionStore, this._pickleKey, account);\n        e2eKeys = JSON.parse(account.identity_keys());\n\n        this._maxOneTimeKeys = account.max_number_of_one_time_keys();\n    } finally {\n        account.free();\n    }\n\n    this.deviceCurve25519Key = e2eKeys.curve25519;\n    this.deviceEd25519Key = e2eKeys.ed25519;\n};\n\n\nfunction _initialise_account(sessionStore, pickleKey, account) {\n    const e2eAccount = sessionStore.getEndToEndAccount();\n    if (e2eAccount !== null) {\n        account.unpickle(pickleKey, e2eAccount);\n        return;\n    }\n\n    account.create();\n    const pickled = account.pickle(pickleKey);\n    sessionStore.storeEndToEndAccount(pickled);\n}\n\n/**\n * @return {array} The version of Olm.\n */\nOlmDevice.getOlmVersion = function() {\n    return Olm.get_library_version();\n};\n\n\n/**\n * extract our OlmAccount from the session store and call the given function\n *\n * @param {function} func\n * @return {object} result of func\n * @private\n */\nOlmDevice.prototype._getAccount = function(func) {\n    const account = new Olm.Account();\n    try {\n        const pickledAccount = this._sessionStore.getEndToEndAccount();\n        account.unpickle(this._pickleKey, pickledAccount);\n        return func(account);\n    } finally {\n        account.free();\n    }\n};\n\n\n/**\n * store our OlmAccount in the session store\n *\n * @param {OlmAccount} account\n * @private\n */\nOlmDevice.prototype._saveAccount = function(account) {\n    const pickledAccount = account.pickle(this._pickleKey);\n    this._sessionStore.storeEndToEndAccount(pickledAccount);\n};\n\n\n/**\n * extract an OlmSession from the session store and call the given function\n *\n * @param {string} deviceKey\n * @param {string} sessionId\n * @param {function} func\n * @return {object} result of func\n * @private\n */\nOlmDevice.prototype._getSession = function(deviceKey, sessionId, func) {\n    const sessions = this._sessionStore.getEndToEndSessions(deviceKey);\n    const pickledSession = sessions[sessionId];\n\n    const session = new Olm.Session();\n    try {\n        session.unpickle(this._pickleKey, pickledSession);\n        return func(session);\n    } finally {\n        session.free();\n    }\n};\n\n\n/**\n * store our OlmSession in the session store\n *\n * @param {string} deviceKey\n * @param {OlmSession} session\n * @private\n */\nOlmDevice.prototype._saveSession = function(deviceKey, session) {\n    const pickledSession = session.pickle(this._pickleKey);\n    this._sessionStore.storeEndToEndSession(\n        deviceKey, session.session_id(), pickledSession,\n    );\n};\n\n\n/**\n * get an OlmUtility and call the given function\n *\n * @param {function} func\n * @return {object} result of func\n * @private\n */\nOlmDevice.prototype._getUtility = function(func) {\n    const utility = new Olm.Utility();\n    try {\n        return func(utility);\n    } finally {\n        utility.free();\n    }\n};\n\n\n/**\n * Signs a message with the ed25519 key for this account.\n *\n * @param {string} message  message to be signed\n * @return {Promise<string>} base64-encoded signature\n */\nOlmDevice.prototype.sign = async function(message) {\n    return this._getAccount(function(account) {\n        return account.sign(message);\n    });\n};\n\n/**\n * Get the current (unused, unpublished) one-time keys for this account.\n *\n * @return {object} one time keys; an object with the single property\n * <tt>curve25519</tt>, which is itself an object mapping key id to Curve25519\n * key.\n */\nOlmDevice.prototype.getOneTimeKeys = async function() {\n    return this._getAccount(function(account) {\n        return JSON.parse(account.one_time_keys());\n    });\n};\n\n\n/**\n * Get the maximum number of one-time keys we can store.\n *\n * @return {number} number of keys\n */\nOlmDevice.prototype.maxNumberOfOneTimeKeys = function() {\n    return this._maxOneTimeKeys;\n};\n\n/**\n * Marks all of the one-time keys as published.\n */\nOlmDevice.prototype.markKeysAsPublished = async function() {\n    const self = this;\n    this._getAccount(function(account) {\n        account.mark_keys_as_published();\n        self._saveAccount(account);\n    });\n};\n\n/**\n * Generate some new one-time keys\n *\n * @param {number} numKeys number of keys to generate\n */\nOlmDevice.prototype.generateOneTimeKeys = async function(numKeys) {\n    const self = this;\n    this._getAccount(function(account) {\n        account.generate_one_time_keys(numKeys);\n        self._saveAccount(account);\n    });\n};\n\n/**\n * Generate a new outbound session\n *\n * The new session will be stored in the sessionStore.\n *\n * @param {string} theirIdentityKey remote user's Curve25519 identity key\n * @param {string} theirOneTimeKey  remote user's one-time Curve25519 key\n * @return {string} sessionId for the outbound session.\n */\nOlmDevice.prototype.createOutboundSession = async function(\n    theirIdentityKey, theirOneTimeKey,\n) {\n    const self = this;\n    return this._getAccount(function(account) {\n        const session = new Olm.Session();\n        try {\n            session.create_outbound(account, theirIdentityKey, theirOneTimeKey);\n            self._saveSession(theirIdentityKey, session);\n            return session.session_id();\n        } finally {\n            session.free();\n        }\n    });\n};\n\n\n/**\n * Generate a new inbound session, given an incoming message\n *\n * @param {string} theirDeviceIdentityKey remote user's Curve25519 identity key\n * @param {number} message_type  message_type field from the received message (must be 0)\n * @param {string} ciphertext base64-encoded body from the received message\n *\n * @return {{payload: string, session_id: string}} decrypted payload, and\n *     session id of new session\n *\n * @raises {Error} if the received message was not valid (for instance, it\n *     didn't use a valid one-time key).\n */\nOlmDevice.prototype.createInboundSession = async function(\n    theirDeviceIdentityKey, message_type, ciphertext,\n) {\n    if (message_type !== 0) {\n        throw new Error(\"Need message_type == 0 to create inbound session\");\n    }\n\n    const self = this;\n    return this._getAccount(function(account) {\n        const session = new Olm.Session();\n        try {\n            session.create_inbound_from(account, theirDeviceIdentityKey, ciphertext);\n            account.remove_one_time_keys(session);\n            self._saveAccount(account);\n\n            const payloadString = session.decrypt(message_type, ciphertext);\n\n            self._saveSession(theirDeviceIdentityKey, session);\n\n            return {\n                payload: payloadString,\n                session_id: session.session_id(),\n            };\n        } finally {\n            session.free();\n        }\n    });\n};\n\n\n/**\n * Get a list of known session IDs for the given device\n *\n * @param {string} theirDeviceIdentityKey Curve25519 identity key for the\n *     remote device\n * @return {Promise<string[]>}  a list of known session ids for the device\n */\nOlmDevice.prototype.getSessionIdsForDevice = async function(theirDeviceIdentityKey) {\n    const sessions = this._sessionStore.getEndToEndSessions(\n        theirDeviceIdentityKey,\n    );\n    return utils.keys(sessions);\n};\n\n/**\n * Get the right olm session id for encrypting messages to the given identity key\n *\n * @param {string} theirDeviceIdentityKey Curve25519 identity key for the\n *     remote device\n * @return {Promise<?string>}  session id, or null if no established session\n */\nOlmDevice.prototype.getSessionIdForDevice = async function(theirDeviceIdentityKey) {\n    const sessionIds = await this.getSessionIdsForDevice(theirDeviceIdentityKey);\n    if (sessionIds.length === 0) {\n        return null;\n    }\n    // Use the session with the lowest ID.\n    sessionIds.sort();\n    return sessionIds[0];\n};\n\n/**\n * Get information on the active Olm sessions for a device.\n * <p>\n * Returns an array, with an entry for each active session. The first entry in\n * the result will be the one used for outgoing messages. Each entry contains\n * the keys 'hasReceivedMessage' (true if the session has received an incoming\n * message and is therefore past the pre-key stage), and 'sessionId'.\n *\n * @param {string} deviceIdentityKey Curve25519 identity key for the device\n * @return {Array.<{sessionId: string, hasReceivedMessage: Boolean}>}\n */\nOlmDevice.prototype.getSessionInfoForDevice = async function(deviceIdentityKey) {\n    const sessionIds = await this.getSessionIdsForDevice(deviceIdentityKey);\n    sessionIds.sort();\n\n    const info = [];\n\n    function getSessionInfo(session) {\n        return {\n            hasReceivedMessage: session.has_received_message(),\n        };\n    }\n\n    for (let i = 0; i < sessionIds.length; i++) {\n        const sessionId = sessionIds[i];\n        const res = this._getSession(deviceIdentityKey, sessionId, getSessionInfo);\n        res.sessionId = sessionId;\n        info.push(res);\n    }\n    return info;\n};\n\n/**\n * Encrypt an outgoing message using an existing session\n *\n * @param {string} theirDeviceIdentityKey Curve25519 identity key for the\n *     remote device\n * @param {string} sessionId  the id of the active session\n * @param {string} payloadString  payload to be encrypted and sent\n *\n * @return {Promise<string>} ciphertext\n */\nOlmDevice.prototype.encryptMessage = async function(\n    theirDeviceIdentityKey, sessionId, payloadString,\n) {\n    const self = this;\n\n    checkPayloadLength(payloadString);\n\n    return this._getSession(theirDeviceIdentityKey, sessionId, function(session) {\n        const res = session.encrypt(payloadString);\n        self._saveSession(theirDeviceIdentityKey, session);\n        return res;\n    });\n};\n\n/**\n * Decrypt an incoming message using an existing session\n *\n * @param {string} theirDeviceIdentityKey Curve25519 identity key for the\n *     remote device\n * @param {string} sessionId  the id of the active session\n * @param {number} message_type  message_type field from the received message\n * @param {string} ciphertext base64-encoded body from the received message\n *\n * @return {Promise<string>} decrypted payload.\n */\nOlmDevice.prototype.decryptMessage = async function(\n    theirDeviceIdentityKey, sessionId, message_type, ciphertext,\n) {\n    const self = this;\n\n    return this._getSession(theirDeviceIdentityKey, sessionId, function(session) {\n        const payloadString = session.decrypt(message_type, ciphertext);\n        self._saveSession(theirDeviceIdentityKey, session);\n\n        return payloadString;\n    });\n};\n\n/**\n * Determine if an incoming messages is a prekey message matching an existing session\n *\n * @param {string} theirDeviceIdentityKey Curve25519 identity key for the\n *     remote device\n * @param {string} sessionId  the id of the active session\n * @param {number} message_type  message_type field from the received message\n * @param {string} ciphertext base64-encoded body from the received message\n *\n * @return {Promise<boolean>} true if the received message is a prekey message which matches\n *    the given session.\n */\nOlmDevice.prototype.matchesSession = async function(\n    theirDeviceIdentityKey, sessionId, message_type, ciphertext,\n) {\n    if (message_type !== 0) {\n        return false;\n    }\n\n    return this._getSession(theirDeviceIdentityKey, sessionId, function(session) {\n        return session.matches_inbound(ciphertext);\n    });\n};\n\n\n// Outbound group session\n// ======================\n\n/**\n * store an OutboundGroupSession in _outboundGroupSessionStore\n *\n * @param {Olm.OutboundGroupSession} session\n * @private\n */\nOlmDevice.prototype._saveOutboundGroupSession = function(session) {\n    const pickledSession = session.pickle(this._pickleKey);\n    this._outboundGroupSessionStore[session.session_id()] = pickledSession;\n};\n\n\n/**\n * extract an OutboundGroupSession from _outboundGroupSessionStore and call the\n * given function\n *\n * @param {string} sessionId\n * @param {function} func\n * @return {object} result of func\n * @private\n */\nOlmDevice.prototype._getOutboundGroupSession = function(sessionId, func) {\n    const pickled = this._outboundGroupSessionStore[sessionId];\n    if (pickled === null) {\n        throw new Error(\"Unknown outbound group session \" + sessionId);\n    }\n\n    const session = new Olm.OutboundGroupSession();\n    try {\n        session.unpickle(this._pickleKey, pickled);\n        return func(session);\n    } finally {\n        session.free();\n    }\n};\n\n\n/**\n * Generate a new outbound group session\n *\n * @return {string} sessionId for the outbound session.\n */\nOlmDevice.prototype.createOutboundGroupSession = function() {\n    const session = new Olm.OutboundGroupSession();\n    try {\n        session.create();\n        this._saveOutboundGroupSession(session);\n        return session.session_id();\n    } finally {\n        session.free();\n    }\n};\n\n\n/**\n * Encrypt an outgoing message with an outbound group session\n *\n * @param {string} sessionId  the id of the outboundgroupsession\n * @param {string} payloadString  payload to be encrypted and sent\n *\n * @return {string} ciphertext\n */\nOlmDevice.prototype.encryptGroupMessage = function(sessionId, payloadString) {\n    const self = this;\n\n    checkPayloadLength(payloadString);\n\n    return this._getOutboundGroupSession(sessionId, function(session) {\n        const res = session.encrypt(payloadString);\n        self._saveOutboundGroupSession(session);\n        return res;\n    });\n};\n\n/**\n * Get the session keys for an outbound group session\n *\n * @param {string} sessionId  the id of the outbound group session\n *\n * @return {{chain_index: number, key: string}} current chain index, and\n *     base64-encoded secret key.\n */\nOlmDevice.prototype.getOutboundGroupSessionKey = function(sessionId) {\n    return this._getOutboundGroupSession(sessionId, function(session) {\n        return {\n            chain_index: session.message_index(),\n            key: session.session_key(),\n        };\n    });\n};\n\n\n// Inbound group session\n// =====================\n\n/**\n * data stored in the session store about an inbound group session\n *\n * @typedef {Object} InboundGroupSessionData\n * @property {string} room_Id\n * @property {string} session   pickled Olm.InboundGroupSession\n * @property {Object<string, string>} keysClaimed\n * @property {Array<string>} forwardingCurve25519KeyChain  Devices involved in forwarding\n *     this session to us (normally empty).\n */\n\n/**\n * store an InboundGroupSession in the session store\n *\n * @param {string} senderCurve25519Key\n * @param {string} sessionId\n * @param {InboundGroupSessionData} sessionData\n * @private\n */\nOlmDevice.prototype._saveInboundGroupSession = function(\n    senderCurve25519Key, sessionId, sessionData,\n) {\n    this._sessionStore.storeEndToEndInboundGroupSession(\n        senderCurve25519Key, sessionId, JSON.stringify(sessionData),\n    );\n};\n\n/**\n * extract an InboundGroupSession from the session store and call the given function\n *\n * @param {string} roomId\n * @param {string} senderKey\n * @param {string} sessionId\n * @param {function(Olm.InboundGroupSession, InboundGroupSessionData): T} func\n *   function to call.\n *\n * @return {null} the sessionId is unknown\n *\n * @return {T} result of func\n *\n * @private\n * @template {T}\n */\nOlmDevice.prototype._getInboundGroupSession = function(\n    roomId, senderKey, sessionId, func,\n) {\n    let r = this._sessionStore.getEndToEndInboundGroupSession(\n        senderKey, sessionId,\n    );\n\n    if (r === null) {\n        return null;\n    }\n\n    r = JSON.parse(r);\n\n    // check that the room id matches the original one for the session. This stops\n    // the HS pretending a message was targeting a different room.\n    if (roomId !== r.room_id) {\n        throw new Error(\n            \"Mismatched room_id for inbound group session (expected \" + r.room_id +\n                \", was \" + roomId + \")\",\n        );\n    }\n\n    const session = new Olm.InboundGroupSession();\n    try {\n        session.unpickle(this._pickleKey, r.session);\n        return func(session, r);\n    } finally {\n        session.free();\n    }\n};\n\n/**\n * Add an inbound group session to the session store\n *\n * @param {string} roomId     room in which this session will be used\n * @param {string} senderKey  base64-encoded curve25519 key of the sender\n * @param {Array<string>} forwardingCurve25519KeyChain  Devices involved in forwarding\n *     this session to us.\n * @param {string} sessionId  session identifier\n * @param {string} sessionKey base64-encoded secret key\n * @param {Object<string, string>} keysClaimed Other keys the sender claims.\n * @param {boolean} exportFormat true if the megolm keys are in export format\n *    (ie, they lack an ed25519 signature)\n */\nOlmDevice.prototype.addInboundGroupSession = async function(\n    roomId, senderKey, forwardingCurve25519KeyChain,\n    sessionId, sessionKey, keysClaimed,\n    exportFormat,\n) {\n    const self = this;\n\n    /* if we already have this session, consider updating it */\n    function updateSession(session, sessionData) {\n        console.log(\"Update for megolm session \" + senderKey + \"/\" + sessionId);\n        // for now we just ignore updates. TODO: implement something here\n\n        return true;\n    }\n\n    const r = this._getInboundGroupSession(\n        roomId, senderKey, sessionId, updateSession,\n    );\n\n    if (r !== null) {\n        return;\n    }\n\n    // new session.\n    const session = new Olm.InboundGroupSession();\n    try {\n        if (exportFormat) {\n            session.import_session(sessionKey);\n        } else {\n            session.create(sessionKey);\n        }\n        if (sessionId != session.session_id()) {\n            throw new Error(\n                \"Mismatched group session ID from senderKey: \" + senderKey,\n            );\n        }\n\n        const sessionData = {\n            room_id: roomId,\n            session: session.pickle(this._pickleKey),\n            keysClaimed: keysClaimed,\n            forwardingCurve25519KeyChain: forwardingCurve25519KeyChain,\n        };\n\n        self._saveInboundGroupSession(\n            senderKey, sessionId, sessionData,\n        );\n    } finally {\n        session.free();\n    }\n};\n\n\n/**\n * Add a previously-exported inbound group session to the session store\n *\n * @param {module:crypto/OlmDevice.MegolmSessionData} data  session data\n */\nOlmDevice.prototype.importInboundGroupSession = async function(data) {\n    /* if we already have this session, consider updating it */\n    function updateSession(session, sessionData) {\n        console.log(\"Update for megolm session \" + data.sender_key + \"|\" +\n                    data.session_id);\n        // for now we just ignore updates. TODO: implement something here\n\n        return true;\n    }\n\n    const r = this._getInboundGroupSession(\n        data.room_id, data.sender_key, data.session_id, updateSession,\n    );\n\n    if (r !== null) {\n        return;\n    }\n\n    // new session.\n    const session = new Olm.InboundGroupSession();\n    try {\n        session.import_session(data.session_key);\n        if (data.session_id != session.session_id()) {\n            throw new Error(\n                \"Mismatched group session ID from senderKey: \" + data.sender_key,\n            );\n        }\n\n        const sessionData = {\n            room_id: data.room_id,\n            session: session.pickle(this._pickleKey),\n            keysClaimed: data.sender_claimed_keys,\n            forwardingCurve25519KeyChain: data.forwarding_curve25519_key_chain,\n        };\n\n        this._saveInboundGroupSession(\n            data.sender_key, data.session_id, sessionData,\n        );\n    } finally {\n        session.free();\n    }\n};\n\n/**\n * Decrypt a received message with an inbound group session\n *\n * @param {string} roomId    room in which the message was received\n * @param {string} senderKey base64-encoded curve25519 key of the sender\n * @param {string} sessionId session identifier\n * @param {string} body      base64-encoded body of the encrypted message\n *\n * @return {null} the sessionId is unknown\n *\n * @return {Promise<{result: string, senderKey: string,\n *    forwardingCurve25519KeyChain: Array<string>,\n *    keysClaimed: Object<string, string>}>}\n */\nOlmDevice.prototype.decryptGroupMessage = async function(\n    roomId, senderKey, sessionId, body,\n) {\n    const self = this;\n\n    function decrypt(session, sessionData) {\n        const res = session.decrypt(body);\n\n        let plaintext = res.plaintext;\n        if (plaintext === undefined) {\n            // Compatibility for older olm versions.\n            plaintext = res;\n        } else {\n            // Check if we have seen this message index before to detect replay attacks.\n            const messageIndexKey = senderKey + \"|\" + sessionId + \"|\" + res.message_index;\n            if (messageIndexKey in self._inboundGroupSessionMessageIndexes) {\n                throw new Error(\n                    \"Duplicate message index, possible replay attack: \" +\n                    messageIndexKey,\n                );\n            }\n            self._inboundGroupSessionMessageIndexes[messageIndexKey] = true;\n        }\n\n        sessionData.session = session.pickle(self._pickleKey);\n        self._saveInboundGroupSession(\n            senderKey, sessionId, sessionData,\n        );\n        return {\n            result: plaintext,\n            keysClaimed: sessionData.keysClaimed || {},\n            senderKey: senderKey,\n            forwardingCurve25519KeyChain: sessionData.forwardingCurve25519KeyChain || [],\n        };\n    }\n\n    return this._getInboundGroupSession(\n        roomId, senderKey, sessionId, decrypt,\n    );\n};\n\n/**\n * Determine if we have the keys for a given megolm session\n *\n * @param {string} roomId    room in which the message was received\n * @param {string} senderKey base64-encoded curve25519 key of the sender\n * @param {sring} sessionId session identifier\n *\n * @returns {Promise<boolean>} true if we have the keys to this session\n */\nOlmDevice.prototype.hasInboundSessionKeys = async function(roomId, senderKey, sessionId) {\n    const s = this._sessionStore.getEndToEndInboundGroupSession(\n        senderKey, sessionId,\n    );\n\n    if (s === null) {\n        return false;\n    }\n\n    const r = JSON.parse(s);\n    if (roomId !== r.room_id) {\n        console.warn(\n            `requested keys for inbound group session ${senderKey}|` +\n            `${sessionId}, with incorrect room_id (expected ${r.room_id}, ` +\n            `was ${roomId})`,\n        );\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Extract the keys to a given megolm session, for sharing\n *\n * @param {string} roomId    room in which the message was received\n * @param {string} senderKey base64-encoded curve25519 key of the sender\n * @param {string} sessionId session identifier\n *\n * @returns {Promise<{chain_index: number, key: string,\n *        forwarding_curve25519_key_chain: Array<string>,\n *        sender_claimed_ed25519_key: string\n *    }>}\n *    details of the session key. The key is a base64-encoded megolm key in\n *    export format.\n */\nOlmDevice.prototype.getInboundGroupSessionKey = async function(\n    roomId, senderKey, sessionId,\n) {\n    function getKey(session, sessionData) {\n        const messageIndex = session.first_known_index();\n\n        const claimedKeys = sessionData.keysClaimed || {};\n        const senderEd25519Key = claimedKeys.ed25519 || null;\n\n        return {\n            \"chain_index\": messageIndex,\n            \"key\": session.export_session(messageIndex),\n            \"forwarding_curve25519_key_chain\":\n                sessionData.forwardingCurve25519KeyChain || [],\n            \"sender_claimed_ed25519_key\": senderEd25519Key,\n        };\n    }\n\n    return this._getInboundGroupSession(\n        roomId, senderKey, sessionId, getKey,\n    );\n};\n\n/**\n * Export an inbound group session\n *\n * @param {string} senderKey base64-encoded curve25519 key of the sender\n * @param {string} sessionId session identifier\n * @return {Promise<module:crypto/OlmDevice.MegolmSessionData>} exported session data\n */\nOlmDevice.prototype.exportInboundGroupSession = async function(senderKey, sessionId) {\n    const s = this._sessionStore.getEndToEndInboundGroupSession(\n        senderKey, sessionId,\n    );\n\n    if (s === null) {\n        throw new Error(\"Unknown inbound group session [\" + senderKey + \",\" +\n                        sessionId + \"]\");\n    }\n    const r = JSON.parse(s);\n\n    const session = new Olm.InboundGroupSession();\n    try {\n        session.unpickle(this._pickleKey, r.session);\n\n        const messageIndex = session.first_known_index();\n\n        return {\n            \"sender_key\": senderKey,\n            \"sender_claimed_keys\": r.keysClaimed,\n            \"room_id\": r.room_id,\n            \"session_id\": sessionId,\n            \"session_key\": session.export_session(messageIndex),\n            \"forwarding_curve25519_key_chain\":\n                session.forwardingCurve25519KeyChain || [],\n        };\n    } finally {\n        session.free();\n    }\n};\n\n// Utilities\n// =========\n\n/**\n * Verify an ed25519 signature.\n *\n * @param {string} key ed25519 key\n * @param {string} message message which was signed\n * @param {string} signature base64-encoded signature to be checked\n *\n * @raises {Error} if there is a problem with the verification. If the key was\n * too small then the message will be \"OLM.INVALID_BASE64\". If the signature\n * was invalid then the message will be \"OLM.BAD_MESSAGE_MAC\".\n */\nOlmDevice.prototype.verifySignature = function(\n    key, message, signature,\n) {\n    this._getUtility(function(util) {\n        util.ed25519_verify(key, message, signature);\n    });\n};\n\n/** */\nmodule.exports = OlmDevice;\n","/*\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport Promise from 'bluebird';\n\nimport utils from '../utils';\n\n/**\n * Internal module. Management of outgoing room key requests.\n *\n * See https://docs.google.com/document/d/1m4gQkcnJkxNuBmb5NoFCIadIY-DyqqNAS3lloE73BlQ\n * for draft documentation on what we're supposed to be implementing here.\n *\n * @module\n */\n\n// delay between deciding we want some keys, and sending out the request, to\n// allow for (a) it turning up anyway, (b) grouping requests together\nconst SEND_KEY_REQUESTS_DELAY_MS = 500;\n\n/** possible states for a room key request\n *\n * The state machine looks like:\n *\n *     |\n *     V         (cancellation requested)\n *   UNSENT  -----------------------------+\n *     |                                  |\n *     | (send successful)                |\n *     V                                  |\n *    SENT                                |\n *     |                                  |\n *     | (cancellation requested)         |\n *     V                                  |\n * CANCELLATION_PENDING                   |\n *     |                                  |\n *     | (cancellation sent)              |\n *     V                                  |\n * (deleted)  <---------------------------+\n *\n * @enum {number}\n */\nconst ROOM_KEY_REQUEST_STATES = {\n    /** request not yet sent */\n    UNSENT: 0,\n\n    /** request sent, awaiting reply */\n    SENT: 1,\n\n    /** reply received, cancellation not yet sent */\n    CANCELLATION_PENDING: 2,\n};\n\nexport default class OutgoingRoomKeyRequestManager {\n    constructor(baseApis, deviceId, cryptoStore) {\n        this._baseApis = baseApis;\n        this._deviceId = deviceId;\n        this._cryptoStore = cryptoStore;\n\n        // handle for the delayed call to _sendOutgoingRoomKeyRequests. Non-null\n        // if the callback has been set, or if it is still running.\n        this._sendOutgoingRoomKeyRequestsTimer = null;\n\n        // sanity check to ensure that we don't end up with two concurrent runs\n        // of _sendOutgoingRoomKeyRequests\n        this._sendOutgoingRoomKeyRequestsRunning = false;\n\n        this._clientRunning = false;\n    }\n\n    /**\n     * Called when the client is started. Sets background processes running.\n     */\n    start() {\n        this._clientRunning = true;\n\n        // set the timer going, to handle any requests which didn't get sent\n        // on the previous run of the client.\n        this._startTimer();\n    }\n\n    /**\n     * Called when the client is stopped. Stops any running background processes.\n     */\n    stop() {\n        console.log('stopping OutgoingRoomKeyRequestManager');\n        // stop the timer on the next run\n        this._clientRunning = false;\n    }\n\n    /**\n     * Send off a room key request, if we haven't already done so.\n     *\n     * The `requestBody` is compared (with a deep-equality check) against\n     * previous queued or sent requests and if it matches, no change is made.\n     * Otherwise, a request is added to the pending list, and a job is started\n     * in the background to send it.\n     *\n     * @param {module:crypto~RoomKeyRequestBody} requestBody\n     * @param {Array<{userId: string, deviceId: string}>} recipients\n     *\n     * @returns {Promise} resolves when the request has been added to the\n     *    pending list (or we have established that a similar request already\n     *    exists)\n     */\n    sendRoomKeyRequest(requestBody, recipients) {\n        return this._cryptoStore.getOrAddOutgoingRoomKeyRequest({\n            requestBody: requestBody,\n            recipients: recipients,\n            requestId: this._baseApis.makeTxnId(),\n            state: ROOM_KEY_REQUEST_STATES.UNSENT,\n        }).then((req) => {\n            if (req.state === ROOM_KEY_REQUEST_STATES.UNSENT) {\n                this._startTimer();\n            }\n        });\n    }\n\n    /**\n     * Cancel room key requests, if any match the given details\n     *\n     * @param {module:crypto~RoomKeyRequestBody} requestBody\n     *\n     * @returns {Promise} resolves when the request has been updated in our\n     *    pending list.\n     */\n    cancelRoomKeyRequest(requestBody) {\n        return this._cryptoStore.getOutgoingRoomKeyRequest(\n            requestBody,\n        ).then((req) => {\n            if (!req) {\n                // no request was made for this key\n                return;\n            }\n            switch (req.state) {\n                case ROOM_KEY_REQUEST_STATES.CANCELLATION_PENDING:\n                    // nothing to do here\n                    return;\n\n                case ROOM_KEY_REQUEST_STATES.UNSENT:\n                    // just delete it\n\n                    // FIXME: ghahah we may have attempted to send it, and\n                    // not yet got a successful response. So the server\n                    // may have seen it, so we still need to send a cancellation\n                    // in that case :/\n\n                    console.log(\n                        'deleting unnecessary room key request for ' +\n                        stringifyRequestBody(requestBody),\n                    );\n                    return this._cryptoStore.deleteOutgoingRoomKeyRequest(\n                        req.requestId, ROOM_KEY_REQUEST_STATES.UNSENT,\n                    );\n\n                case ROOM_KEY_REQUEST_STATES.SENT:\n                    // send a cancellation.\n                    return this._cryptoStore.updateOutgoingRoomKeyRequest(\n                        req.requestId, ROOM_KEY_REQUEST_STATES.SENT, {\n                            state: ROOM_KEY_REQUEST_STATES.CANCELLATION_PENDING,\n                            cancellationTxnId: this._baseApis.makeTxnId(),\n                        },\n                    ).then((updatedReq) => {\n                        if (!updatedReq) {\n                            // updateOutgoingRoomKeyRequest couldn't find the\n                            // request in state ROOM_KEY_REQUEST_STATES.SENT,\n                            // so we must have raced with another tab to mark\n                            // the request cancelled. There is no point in\n                            // sending another cancellation since the other tab\n                            // will do it.\n                            console.log(\n                                'Tried to cancel room key request for ' +\n                                stringifyRequestBody(requestBody) +\n                                ' but it was already cancelled in another tab',\n                            );\n                            return;\n                        }\n\n                        // We don't want to wait for the timer, so we send it\n                        // immediately. (We might actually end up racing with the timer,\n                        // but that's ok: even if we make the request twice, we'll do it\n                        // with the same transaction_id, so only one message will get\n                        // sent).\n                        //\n                        // (We also don't want to wait for the response from the server\n                        // here, as it will slow down processing of received keys if we\n                        // do.)\n                        this._sendOutgoingRoomKeyRequestCancellation(\n                            updatedReq,\n                        ).catch((e) => {\n                            console.error(\n                                \"Error sending room key request cancellation;\"\n                                + \" will retry later.\", e,\n                            );\n                            this._startTimer();\n                        }).done();\n                    });\n\n                default:\n                    throw new Error('unhandled state: ' + req.state);\n            }\n        });\n    }\n\n    // start the background timer to send queued requests, if the timer isn't\n    // already running\n    _startTimer() {\n        if (this._sendOutgoingRoomKeyRequestsTimer) {\n            return;\n        }\n\n        const startSendingOutgoingRoomKeyRequests = () => {\n            if (this._sendOutgoingRoomKeyRequestsRunning) {\n                throw new Error(\"RoomKeyRequestSend already in progress!\");\n            }\n            this._sendOutgoingRoomKeyRequestsRunning = true;\n\n            this._sendOutgoingRoomKeyRequests().finally(() => {\n                this._sendOutgoingRoomKeyRequestsRunning = false;\n            }).catch((e) => {\n                // this should only happen if there is an indexeddb error,\n                // in which case we're a bit stuffed anyway.\n                console.warn(\n                    `error in OutgoingRoomKeyRequestManager: ${e}`,\n                );\n            }).done();\n        };\n\n        this._sendOutgoingRoomKeyRequestsTimer = global.setTimeout(\n            startSendingOutgoingRoomKeyRequests,\n            SEND_KEY_REQUESTS_DELAY_MS,\n        );\n    }\n\n    // look for and send any queued requests. Runs itself recursively until\n    // there are no more requests, or there is an error (in which case, the\n    // timer will be restarted before the promise resolves).\n    _sendOutgoingRoomKeyRequests() {\n        if (!this._clientRunning) {\n            this._sendOutgoingRoomKeyRequestsTimer = null;\n            return Promise.resolve();\n        }\n\n        console.log(\"Looking for queued outgoing room key requests\");\n\n        return this._cryptoStore.getOutgoingRoomKeyRequestByState([\n            ROOM_KEY_REQUEST_STATES.CANCELLATION_PENDING,\n            ROOM_KEY_REQUEST_STATES.UNSENT,\n        ]).then((req) => {\n            if (!req) {\n                console.log(\"No more outgoing room key requests\");\n                this._sendOutgoingRoomKeyRequestsTimer = null;\n                return;\n            }\n\n            let prom;\n            if (req.state === ROOM_KEY_REQUEST_STATES.UNSENT) {\n                prom = this._sendOutgoingRoomKeyRequest(req);\n            } else { // must be a cancellation\n                prom = this._sendOutgoingRoomKeyRequestCancellation(req);\n            }\n\n            return prom.then(() => {\n                // go around the loop again\n                return this._sendOutgoingRoomKeyRequests();\n            }).catch((e) => {\n                console.error(\"Error sending room key request; will retry later.\", e);\n                this._sendOutgoingRoomKeyRequestsTimer = null;\n                this._startTimer();\n            }).done();\n        });\n    }\n\n    // given a RoomKeyRequest, send it and update the request record\n    _sendOutgoingRoomKeyRequest(req) {\n        console.log(\n            `Requesting keys for ${stringifyRequestBody(req.requestBody)}` +\n            ` from ${stringifyRecipientList(req.recipients)}` +\n            `(id ${req.requestId})`,\n        );\n\n        const requestMessage = {\n            action: \"request\",\n            requesting_device_id: this._deviceId,\n            request_id: req.requestId,\n            body: req.requestBody,\n        };\n\n        return this._sendMessageToDevices(\n            requestMessage, req.recipients, req.requestId,\n        ).then(() => {\n            return this._cryptoStore.updateOutgoingRoomKeyRequest(\n                req.requestId, ROOM_KEY_REQUEST_STATES.UNSENT,\n                { state: ROOM_KEY_REQUEST_STATES.SENT },\n            );\n        });\n    }\n\n    // given a RoomKeyRequest, cancel it and delete the request record\n    _sendOutgoingRoomKeyRequestCancellation(req) {\n        console.log(\n            `Sending cancellation for key request for ` +\n            `${stringifyRequestBody(req.requestBody)} to ` +\n            `${stringifyRecipientList(req.recipients)} ` +\n            `(cancellation id ${req.cancellationTxnId})`,\n        );\n\n        const requestMessage = {\n            action: \"request_cancellation\",\n            requesting_device_id: this._deviceId,\n            request_id: req.requestId,\n        };\n\n        return this._sendMessageToDevices(\n            requestMessage, req.recipients, req.cancellationTxnId,\n        ).then(() => {\n            return this._cryptoStore.deleteOutgoingRoomKeyRequest(\n                req.requestId, ROOM_KEY_REQUEST_STATES.CANCELLATION_PENDING,\n            );\n        });\n    }\n\n    // send a RoomKeyRequest to a list of recipients\n    _sendMessageToDevices(message, recipients, txnId) {\n        const contentMap = {};\n        for (const recip of recipients) {\n            if (!contentMap[recip.userId]) {\n                contentMap[recip.userId] = {};\n            }\n            contentMap[recip.userId][recip.deviceId] = message;\n        }\n\n        return this._baseApis.sendToDevice(\n            'm.room_key_request', contentMap, txnId,\n        );\n    }\n}\n\nfunction stringifyRequestBody(requestBody) {\n    // we assume that the request is for megolm keys, which are identified by\n    // room id and session id\n    return requestBody.room_id + \" / \" + requestBody.session_id;\n}\n\nfunction stringifyRecipientList(recipients) {\n    return '['\n        + utils.map(recipients, (r) => `${r.userId}:${r.deviceId}`).join(\",\")\n        + ']';\n}\n\n","/*\nCopyright 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * Internal module. Defines the base classes of the encryption implementations\n *\n * @module\n */\n\nimport Promise from 'bluebird';\n\n/**\n * map of registered encryption algorithm classes. A map from string to {@link\n * module:crypto/algorithms/base.EncryptionAlgorithm|EncryptionAlgorithm} class\n *\n * @type {Object.<string, function(new: module:crypto/algorithms/base.EncryptionAlgorithm)>}\n */\nexport const ENCRYPTION_CLASSES = {};\n\n/**\n * map of registered encryption algorithm classes. Map from string to {@link\n * module:crypto/algorithms/base.DecryptionAlgorithm|DecryptionAlgorithm} class\n *\n * @type {Object.<string, function(new: module:crypto/algorithms/base.DecryptionAlgorithm)>}\n */\nexport const DECRYPTION_CLASSES = {};\n\n/**\n * base type for encryption implementations\n *\n * @alias module:crypto/algorithms/base.EncryptionAlgorithm\n *\n * @param {object} params parameters\n * @param {string} params.userId  The UserID for the local user\n * @param {string} params.deviceId The identifier for this device.\n * @param {module:crypto} params.crypto crypto core\n * @param {module:crypto/OlmDevice} params.olmDevice olm.js wrapper\n * @param {module:base-apis~MatrixBaseApis} baseApis base matrix api interface\n * @param {string} params.roomId  The ID of the room we will be sending to\n * @param {object} params.config  The body of the m.room.encryption event\n */\nclass EncryptionAlgorithm {\n    constructor(params) {\n        this._userId = params.userId;\n        this._deviceId = params.deviceId;\n        this._crypto = params.crypto;\n        this._olmDevice = params.olmDevice;\n        this._baseApis = params.baseApis;\n        this._roomId = params.roomId;\n    }\n\n    /**\n     * Encrypt a message event\n     *\n     * @method module:crypto/algorithms/base.EncryptionAlgorithm.encryptMessage\n     * @abstract\n     *\n     * @param {module:models/room} room\n     * @param {string} eventType\n     * @param {object} plaintext event content\n     *\n     * @return {module:client.Promise} Promise which resolves to the new event body\n     */\n\n    /**\n     * Called when the membership of a member of the room changes.\n     *\n     * @param {module:models/event.MatrixEvent} event  event causing the change\n     * @param {module:models/room-member} member  user whose membership changed\n     * @param {string=} oldMembership  previous membership\n     * @public\n     */\n     onRoomMembership(event, member, oldMembership) {\n     }\n}\nexport {EncryptionAlgorithm}; // https://github.com/jsdoc3/jsdoc/issues/1272\n\n/**\n * base type for decryption implementations\n *\n * @alias module:crypto/algorithms/base.DecryptionAlgorithm\n * @param {object} params parameters\n * @param {string} params.userId  The UserID for the local user\n * @param {module:crypto} params.crypto crypto core\n * @param {module:crypto/OlmDevice} params.olmDevice olm.js wrapper\n * @param {module:base-apis~MatrixBaseApis} baseApis base matrix api interface\n * @param {string=} params.roomId The ID of the room we will be receiving\n *     from. Null for to-device events.\n */\nclass DecryptionAlgorithm {\n    constructor(params) {\n        this._userId = params.userId;\n        this._crypto = params.crypto;\n        this._olmDevice = params.olmDevice;\n        this._baseApis = params.baseApis;\n        this._roomId = params.roomId;\n    }\n\n    /**\n     * Decrypt an event\n     *\n     * @method module:crypto/algorithms/base.DecryptionAlgorithm#decryptEvent\n     * @abstract\n     *\n     * @param {MatrixEvent} event undecrypted event\n     *\n     * @return {Promise<module:crypto~EventDecryptionResult>} promise which\n     * resolves once we have finished decrypting. Rejects with an\n     * `algorithms.DecryptionError` if there is a problem decrypting the event.\n     */\n\n    /**\n     * Handle a key event\n     *\n     * @method module:crypto/algorithms/base.DecryptionAlgorithm#onRoomKeyEvent\n     *\n     * @param {module:models/event.MatrixEvent} params event key event\n     */\n    onRoomKeyEvent(params) {\n        // ignore by default\n    }\n\n    /**\n     * Import a room key\n     *\n     * @param {module:crypto/OlmDevice.MegolmSessionData} session\n     */\n    importRoomKey(session) {\n        // ignore by default\n    }\n\n    /**\n     * Determine if we have the keys necessary to respond to a room key request\n     *\n     * @param {module:crypto~IncomingRoomKeyRequest} keyRequest\n     * @return {Promise<boolean>} true if we have the keys and could (theoretically) share\n     *  them; else false.\n     */\n    hasKeysForKeyRequest(keyRequest) {\n        return Promise.resolve(false);\n    }\n\n    /**\n     * Send the response to a room key request\n     *\n     * @param {module:crypto~IncomingRoomKeyRequest} keyRequest\n     */\n    shareKeysWithDevice(keyRequest) {\n        throw new Error(\"shareKeysWithDevice not supported for this DecryptionAlgorithm\");\n    }\n}\nexport {DecryptionAlgorithm}; // https://github.com/jsdoc3/jsdoc/issues/1272\n\n/**\n * Exception thrown when decryption fails\n *\n * @alias module:crypto/algorithms/base.DecryptionError\n * @param {string} msg user-visible message describing the problem\n *\n * @param {Object=} details key/value pairs reported in the logs but not shown\n *   to the user.\n *\n * @extends Error\n */\nclass DecryptionError extends Error {\n    constructor(msg, details) {\n        super(msg);\n        this.name = 'DecryptionError';\n        this.details = details;\n    }\n\n    /**\n     * override the string used when logging\n     *\n     * @returns {String}\n     */\n    toString() {\n        let result = this.name + '[msg: ' + this.message;\n\n        if (this.details) {\n            result += ', ' +\n                Object.keys(this.details).map(\n                    (k) => k + ': ' + this.details[k],\n                ).join(', ');\n        }\n\n        result += ']';\n\n        return result;\n    }\n}\nexport {DecryptionError}; // https://github.com/jsdoc3/jsdoc/issues/1272\n\n/**\n * Exception thrown specifically when we want to warn the user to consider\n * the security of their conversation before continuing\n *\n * @param {string} msg message describing the problem\n * @param {Object} devices userId -> {deviceId -> object}\n *      set of unknown devices per user we're warning about\n * @extends Error\n */\nexport class UnknownDeviceError extends Error {\n    constructor(msg, devices) {\n        super(msg);\n        this.name = \"UnknownDeviceError\";\n        this.devices = devices;\n    }\n}\n\n/**\n * Registers an encryption/decryption class for a particular algorithm\n *\n * @param {string} algorithm algorithm tag to register for\n *\n * @param {class} encryptor {@link\n *     module:crypto/algorithms/base.EncryptionAlgorithm|EncryptionAlgorithm}\n *     implementation\n *\n * @param {class} decryptor {@link\n *     module:crypto/algorithms/base.DecryptionAlgorithm|DecryptionAlgorithm}\n *     implementation\n */\nexport function registerAlgorithm(algorithm, encryptor, decryptor) {\n    ENCRYPTION_CLASSES[algorithm] = encryptor;\n    DECRYPTION_CLASSES[algorithm] = decryptor;\n}\n","/*\nCopyright 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/**\n * @module crypto/algorithms\n */\n\nconst base = require(\"./base\");\n\nrequire(\"./olm\");\nrequire(\"./megolm\");\n\n/**\n * @see module:crypto/algorithms/base.ENCRYPTION_CLASSES\n */\nmodule.exports.ENCRYPTION_CLASSES = base.ENCRYPTION_CLASSES;\n\n/**\n * @see module:crypto/algorithms/base.DECRYPTION_CLASSES\n */\nmodule.exports.DECRYPTION_CLASSES = base.DECRYPTION_CLASSES;\n\n/**\n * @see module:crypto/algorithms/base.DecryptionError\n */\nmodule.exports.DecryptionError = base.DecryptionError;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/**\n * Defines m.olm encryption/decryption\n *\n * @module crypto/algorithms/megolm\n */\n\nimport Promise from 'bluebird';\n\nconst utils = require(\"../../utils\");\nconst olmlib = require(\"../olmlib\");\nconst base = require(\"./base\");\n\n/**\n * @private\n * @constructor\n *\n * @param {string} sessionId\n *\n * @property {string} sessionId\n * @property {Number} useCount     number of times this session has been used\n * @property {Number} creationTime when the session was created (ms since the epoch)\n *\n * @property {object} sharedWithDevices\n *    devices with which we have shared the session key\n *        userId -> {deviceId -> msgindex}\n */\nfunction OutboundSessionInfo(sessionId) {\n    this.sessionId = sessionId;\n    this.useCount = 0;\n    this.creationTime = new Date().getTime();\n    this.sharedWithDevices = {};\n}\n\n\n/**\n * Check if it's time to rotate the session\n *\n * @param {Number} rotationPeriodMsgs\n * @param {Number} rotationPeriodMs\n * @return {Boolean}\n */\nOutboundSessionInfo.prototype.needsRotation = function(\n    rotationPeriodMsgs, rotationPeriodMs,\n) {\n    const sessionLifetime = new Date().getTime() - this.creationTime;\n\n    if (this.useCount >= rotationPeriodMsgs ||\n        sessionLifetime >= rotationPeriodMs\n       ) {\n        console.log(\n            \"Rotating megolm session after \" + this.useCount +\n                \" messages, \" + sessionLifetime + \"ms\",\n        );\n        return true;\n    }\n\n    return false;\n};\n\n\n/**\n * Determine if this session has been shared with devices which it shouldn't\n * have been.\n *\n * @param {Object} devicesInRoom userId -> {deviceId -> object}\n *   devices we should shared the session with.\n *\n * @return {Boolean} true if we have shared the session with devices which aren't\n * in devicesInRoom.\n */\nOutboundSessionInfo.prototype.sharedWithTooManyDevices = function(\n    devicesInRoom,\n) {\n    for (const userId in this.sharedWithDevices) {\n        if (!this.sharedWithDevices.hasOwnProperty(userId)) {\n            continue;\n        }\n\n        if (!devicesInRoom.hasOwnProperty(userId)) {\n            console.log(\"Starting new session because we shared with \" + userId);\n            return true;\n        }\n\n        for (const deviceId in this.sharedWithDevices[userId]) {\n            if (!this.sharedWithDevices[userId].hasOwnProperty(deviceId)) {\n                continue;\n            }\n\n            if (!devicesInRoom[userId].hasOwnProperty(deviceId)) {\n                console.log(\n                    \"Starting new session because we shared with \" +\n                        userId + \":\" + deviceId,\n                );\n                return true;\n            }\n        }\n    }\n};\n\n\n/**\n * Megolm encryption implementation\n *\n * @constructor\n * @extends {module:crypto/algorithms/base.EncryptionAlgorithm}\n *\n * @param {object} params parameters, as per\n *     {@link module:crypto/algorithms/base.EncryptionAlgorithm}\n */\nfunction MegolmEncryption(params) {\n    base.EncryptionAlgorithm.call(this, params);\n\n    // the most recent attempt to set up a session. This is used to serialise\n    // the session setups, so that we have a race-free view of which session we\n    // are using, and which devices we have shared the keys with. It resolves\n    // with an OutboundSessionInfo (or undefined, for the first message in the\n    // room).\n    this._setupPromise = Promise.resolve();\n\n    // default rotation periods\n    this._sessionRotationPeriodMsgs = 100;\n    this._sessionRotationPeriodMs = 7 * 24 * 3600 * 1000;\n\n    if (params.config.rotation_period_ms !== undefined) {\n        this._sessionRotationPeriodMs = params.config.rotation_period_ms;\n    }\n\n    if (params.config.rotation_period_msgs !== undefined) {\n        this._sessionRotationPeriodMsgs = params.config.rotation_period_msgs;\n    }\n}\nutils.inherits(MegolmEncryption, base.EncryptionAlgorithm);\n\n/**\n * @private\n *\n * @param {Object} devicesInRoom The devices in this room, indexed by user ID\n *\n * @return {module:client.Promise} Promise which resolves to the\n *    OutboundSessionInfo when setup is complete.\n */\nMegolmEncryption.prototype._ensureOutboundSession = function(devicesInRoom) {\n    const self = this;\n\n    let session;\n\n    // takes the previous OutboundSessionInfo, and considers whether to create\n    // a new one. Also shares the key with any (new) devices in the room.\n    // Updates `session` to hold the final OutboundSessionInfo.\n    //\n    // returns a promise which resolves once the keyshare is successful.\n    async function prepareSession(oldSession) {\n        session = oldSession;\n\n        // need to make a brand new session?\n        if (session && session.needsRotation(self._sessionRotationPeriodMsgs,\n                                             self._sessionRotationPeriodMs)\n           ) {\n            console.log(\"Starting new megolm session because we need to rotate.\");\n            session = null;\n        }\n\n        // determine if we have shared with anyone we shouldn't have\n        if (session && session.sharedWithTooManyDevices(devicesInRoom)) {\n            session = null;\n        }\n\n        if (!session) {\n            console.log(`Starting new megolm session for room ${self._roomId}`);\n            session = await self._prepareNewSession();\n        }\n\n        // now check if we need to share with any devices\n        const shareMap = {};\n\n        for (const userId in devicesInRoom) {\n            if (!devicesInRoom.hasOwnProperty(userId)) {\n                continue;\n            }\n\n            const userDevices = devicesInRoom[userId];\n\n            for (const deviceId in userDevices) {\n                if (!userDevices.hasOwnProperty(deviceId)) {\n                    continue;\n                }\n\n                const deviceInfo = userDevices[deviceId];\n\n                const key = deviceInfo.getIdentityKey();\n                if (key == self._olmDevice.deviceCurve25519Key) {\n                    // don't bother sending to ourself\n                    continue;\n                }\n\n                if (\n                    !session.sharedWithDevices[userId] ||\n                        session.sharedWithDevices[userId][deviceId] === undefined\n                ) {\n                    shareMap[userId] = shareMap[userId] || [];\n                    shareMap[userId].push(deviceInfo);\n                }\n            }\n        }\n\n        return self._shareKeyWithDevices(\n            session, shareMap,\n        );\n    }\n\n    // helper which returns the session prepared by prepareSession\n    function returnSession() {\n        return session;\n    }\n\n    // first wait for the previous share to complete\n    const prom = this._setupPromise.then(prepareSession);\n\n    // _setupPromise resolves to `session` whether or not the share succeeds\n    this._setupPromise = prom.then(returnSession, returnSession);\n\n    // but we return a promise which only resolves if the share was successful.\n    return prom.then(returnSession);\n};\n\n/**\n * @private\n *\n * @return {module:crypto/algorithms/megolm.OutboundSessionInfo} session\n */\nMegolmEncryption.prototype._prepareNewSession = async function() {\n    const sessionId = this._olmDevice.createOutboundGroupSession();\n    const key = this._olmDevice.getOutboundGroupSessionKey(sessionId);\n\n    await this._olmDevice.addInboundGroupSession(\n        this._roomId, this._olmDevice.deviceCurve25519Key, [], sessionId,\n        key.key, {ed25519: this._olmDevice.deviceEd25519Key},\n    );\n\n    return new OutboundSessionInfo(sessionId);\n};\n\n/**\n * @private\n *\n * @param {module:crypto/algorithms/megolm.OutboundSessionInfo} session\n *\n * @param {object<string, module:crypto/deviceinfo[]>} devicesByUser\n *    map from userid to list of devices\n *\n * @return {module:client.Promise} Promise which resolves once the key sharing\n *     message has been sent.\n */\nMegolmEncryption.prototype._shareKeyWithDevices = function(session, devicesByUser) {\n    const self = this;\n\n    const key = this._olmDevice.getOutboundGroupSessionKey(session.sessionId);\n    const payload = {\n        type: \"m.room_key\",\n        content: {\n            algorithm: olmlib.MEGOLM_ALGORITHM,\n            room_id: this._roomId,\n            session_id: session.sessionId,\n            session_key: key.key,\n            chain_index: key.chain_index,\n        },\n    };\n\n    const contentMap = {};\n\n    return olmlib.ensureOlmSessionsForDevices(\n        this._olmDevice, this._baseApis, devicesByUser,\n    ).then(function(devicemap) {\n        const promises = [];\n\n        for (const userId in devicesByUser) {\n            if (!devicesByUser.hasOwnProperty(userId)) {\n                continue;\n            }\n\n            const devicesToShareWith = devicesByUser[userId];\n            const sessionResults = devicemap[userId];\n\n            for (let i = 0; i < devicesToShareWith.length; i++) {\n                const deviceInfo = devicesToShareWith[i];\n                const deviceId = deviceInfo.deviceId;\n\n                const sessionResult = sessionResults[deviceId];\n                if (!sessionResult.sessionId) {\n                    // no session with this device, probably because there\n                    // were no one-time keys.\n                    //\n                    // we could send them a to_device message anyway, as a\n                    // signal that they have missed out on the key sharing\n                    // message because of the lack of keys, but there's not\n                    // much point in that really; it will mostly serve to clog\n                    // up to_device inboxes.\n                    //\n                    // ensureOlmSessionsForUsers has already done the logging,\n                    // so just skip it.\n                    continue;\n                }\n\n                console.log(\n                    \"sharing keys with device \" + userId + \":\" + deviceId,\n                );\n\n                const encryptedContent = {\n                    algorithm: olmlib.OLM_ALGORITHM,\n                    sender_key: self._olmDevice.deviceCurve25519Key,\n                    ciphertext: {},\n                };\n\n                if (!contentMap[userId]) {\n                    contentMap[userId] = {};\n                }\n\n                contentMap[userId][deviceId] = encryptedContent;\n\n                promises.push(\n                    olmlib.encryptMessageForDevice(\n                        encryptedContent.ciphertext,\n                        self._userId,\n                        self._deviceId,\n                        self._olmDevice,\n                        userId,\n                        deviceInfo,\n                        payload,\n                    ),\n                );\n            }\n        }\n\n        if (promises.length === 0) {\n            // no devices to send to\n            return Promise.resolve();\n        }\n\n        return Promise.all(promises).then(() => {\n            // TODO: retries\n            return self._baseApis.sendToDevice(\"m.room.encrypted\", contentMap);\n        });\n    }).then(function() {\n        console.log(`Completed megolm keyshare in ${self._roomId}`);\n\n        // Add the devices we have shared with to session.sharedWithDevices.\n        //\n        // we deliberately iterate over devicesByUser (ie, the devices we\n        // attempted to share with) rather than the contentMap (those we did\n        // share with), because we don't want to try to claim a one-time-key\n        // for dead devices on every message.\n        for (const userId in devicesByUser) {\n            if (!devicesByUser.hasOwnProperty(userId)) {\n                continue;\n            }\n            if (!session.sharedWithDevices[userId]) {\n                session.sharedWithDevices[userId] = {};\n            }\n            const devicesToShareWith = devicesByUser[userId];\n            for (let i = 0; i < devicesToShareWith.length; i++) {\n                const deviceInfo = devicesToShareWith[i];\n                session.sharedWithDevices[userId][deviceInfo.deviceId] =\n                    key.chain_index;\n            }\n        }\n    });\n};\n\n/**\n * @inheritdoc\n *\n * @param {module:models/room} room\n * @param {string} eventType\n * @param {object} content plaintext event content\n *\n * @return {module:client.Promise} Promise which resolves to the new event body\n */\nMegolmEncryption.prototype.encryptMessage = function(room, eventType, content) {\n    const self = this;\n    console.log(`Starting to encrypt event for ${this._roomId}`);\n\n    return this._getDevicesInRoom(room).then(function(devicesInRoom) {\n        // check if any of these devices are not yet known to the user.\n        // if so, warn the user so they can verify or ignore.\n        self._checkForUnknownDevices(devicesInRoom);\n\n        return self._ensureOutboundSession(devicesInRoom);\n    }).then(function(session) {\n        const payloadJson = {\n            room_id: self._roomId,\n            type: eventType,\n            content: content,\n        };\n\n        const ciphertext = self._olmDevice.encryptGroupMessage(\n            session.sessionId, JSON.stringify(payloadJson),\n        );\n\n        const encryptedContent = {\n            algorithm: olmlib.MEGOLM_ALGORITHM,\n            sender_key: self._olmDevice.deviceCurve25519Key,\n            ciphertext: ciphertext,\n            session_id: session.sessionId,\n             // Include our device ID so that recipients can send us a\n             // m.new_device message if they don't have our session key.\n            device_id: self._deviceId,\n        };\n\n        session.useCount++;\n        return encryptedContent;\n    });\n};\n\n/**\n * Checks the devices we're about to send to and see if any are entirely\n * unknown to the user.  If so, warn the user, and mark them as known to\n * give the user a chance to go verify them before re-sending this message.\n *\n * @param {Object} devicesInRoom userId -> {deviceId -> object}\n *   devices we should shared the session with.\n */\nMegolmEncryption.prototype._checkForUnknownDevices = function(devicesInRoom) {\n    const unknownDevices = {};\n\n    Object.keys(devicesInRoom).forEach((userId)=>{\n        Object.keys(devicesInRoom[userId]).forEach((deviceId)=>{\n            const device = devicesInRoom[userId][deviceId];\n            if (device.isUnverified() && !device.isKnown()) {\n                if (!unknownDevices[userId]) {\n                    unknownDevices[userId] = {};\n                }\n                unknownDevices[userId][deviceId] = device;\n            }\n        });\n    });\n\n    if (Object.keys(unknownDevices).length) {\n        // it'd be kind to pass unknownDevices up to the user in this error\n        throw new base.UnknownDeviceError(\n            \"This room contains unknown devices which have not been verified. \" +\n            \"We strongly recommend you verify them before continuing.\", unknownDevices);\n    }\n};\n\n/**\n * Get the list of unblocked devices for all users in the room\n *\n * @param {module:models/room} room\n *\n * @return {module:client.Promise} Promise which resolves to a map\n *     from userId to deviceId to deviceInfo\n */\nMegolmEncryption.prototype._getDevicesInRoom = function(room) {\n    // XXX what about rooms where invitees can see the content?\n    const roomMembers = utils.map(room.getJoinedMembers(), function(u) {\n        return u.userId;\n    });\n\n    // We are happy to use a cached version here: we assume that if we already\n    // have a list of the user's devices, then we already share an e2e room\n    // with them, which means that they will have announced any new devices via\n    // an m.new_device.\n    //\n    // XXX: what if the cache is stale, and the user left the room we had in\n    // common and then added new devices before joining this one? --Matthew\n    //\n    // yup, see https://github.com/vector-im/riot-web/issues/2305 --richvdh\n    return this._crypto.downloadKeys(roomMembers, false).then((devices) => {\n        // remove any blocked devices\n        for (const userId in devices) {\n            if (!devices.hasOwnProperty(userId)) {\n                continue;\n            }\n\n            const userDevices = devices[userId];\n            for (const deviceId in userDevices) {\n                if (!userDevices.hasOwnProperty(deviceId)) {\n                    continue;\n                }\n\n                if (userDevices[deviceId].isBlocked() ||\n                    (userDevices[deviceId].isUnverified() &&\n                     (room.getBlacklistUnverifiedDevices() ||\n                      this._crypto.getGlobalBlacklistUnverifiedDevices()))\n                   ) {\n                    delete userDevices[deviceId];\n                }\n            }\n        }\n\n        return devices;\n    });\n};\n\n/**\n * Megolm decryption implementation\n *\n * @constructor\n * @extends {module:crypto/algorithms/base.DecryptionAlgorithm}\n *\n * @param {object} params parameters, as per\n *     {@link module:crypto/algorithms/base.DecryptionAlgorithm}\n */\nfunction MegolmDecryption(params) {\n    base.DecryptionAlgorithm.call(this, params);\n\n    // events which we couldn't decrypt due to unknown sessions / indexes: map from\n    // senderKey|sessionId to list of MatrixEvents\n    this._pendingEvents = {};\n\n    // this gets stubbed out by the unit tests.\n    this.olmlib = olmlib;\n}\nutils.inherits(MegolmDecryption, base.DecryptionAlgorithm);\n\n/**\n * @inheritdoc\n *\n * @param {MatrixEvent} event\n *\n * returns a promise which resolves to a\n * {@link module:crypto~EventDecryptionResult} once we have finished\n * decrypting, or rejects with an `algorithms.DecryptionError` if there is a\n * problem decrypting the event.\n */\nMegolmDecryption.prototype.decryptEvent = async function(event) {\n    const content = event.getWireContent();\n\n    if (!content.sender_key || !content.session_id ||\n        !content.ciphertext\n       ) {\n        throw new base.DecryptionError(\"Missing fields in input\");\n    }\n\n    let res;\n    try {\n        res = await this._olmDevice.decryptGroupMessage(\n            event.getRoomId(), content.sender_key, content.session_id, content.ciphertext,\n        );\n    } catch (e) {\n        if (e.message === 'OLM.UNKNOWN_MESSAGE_INDEX') {\n            this._addEventToPendingList(event);\n            this._requestKeysForEvent(event);\n        }\n        throw new base.DecryptionError(\n            e.toString(), {\n                session: content.sender_key + '|' + content.session_id,\n            },\n        );\n    }\n\n    if (res === null) {\n        // We've got a message for a session we don't have.\n        this._addEventToPendingList(event);\n        this._requestKeysForEvent(event);\n        throw new base.DecryptionError(\n            \"The sender's device has not sent us the keys for this message.\",\n            {\n                session: content.sender_key + '|' + content.session_id,\n            },\n        );\n    }\n\n    const payload = JSON.parse(res.result);\n\n    // belt-and-braces check that the room id matches that indicated by the HS\n    // (this is somewhat redundant, since the megolm session is scoped to the\n    // room, so neither the sender nor a MITM can lie about the room_id).\n    if (payload.room_id !== event.getRoomId()) {\n        throw new base.DecryptionError(\n            \"Message intended for room \" + payload.room_id,\n        );\n    }\n\n    return {\n        clearEvent: payload,\n        senderCurve25519Key: res.senderKey,\n        claimedEd25519Key: res.keysClaimed.ed25519,\n        forwardingCurve25519KeyChain: res.forwardingCurve25519KeyChain,\n    };\n};\n\nMegolmDecryption.prototype._requestKeysForEvent = function(event) {\n    const sender = event.getSender();\n    const wireContent = event.getWireContent();\n\n    // send the request to all of our own devices, and the\n    // original sending device if it wasn't us.\n    const recipients = [{\n        userId: this._userId, deviceId: '*',\n    }];\n    if (sender != this._userId) {\n        recipients.push({\n            userId: sender, deviceId: wireContent.device_id,\n        });\n    }\n\n    this._crypto.requestRoomKey({\n        room_id: event.getRoomId(),\n        algorithm: wireContent.algorithm,\n        sender_key: wireContent.sender_key,\n        session_id: wireContent.session_id,\n    }, recipients);\n};\n\n/**\n * Add an event to the list of those we couldn't decrypt the first time we\n * saw them.\n *\n * @private\n *\n * @param {module:models/event.MatrixEvent} event\n */\nMegolmDecryption.prototype._addEventToPendingList = function(event) {\n    const content = event.getWireContent();\n    const k = content.sender_key + \"|\" + content.session_id;\n    if (!this._pendingEvents[k]) {\n        this._pendingEvents[k] = [];\n    }\n    this._pendingEvents[k].push(event);\n};\n\n/**\n * @inheritdoc\n *\n * @param {module:models/event.MatrixEvent} event key event\n */\nMegolmDecryption.prototype.onRoomKeyEvent = function(event) {\n    const content = event.getContent();\n    const sessionId = content.session_id;\n    let senderKey = event.getSenderKey();\n    let forwardingKeyChain = [];\n    let exportFormat = false;\n    let keysClaimed;\n\n    if (!content.room_id ||\n        !sessionId ||\n        !content.session_key\n       ) {\n        console.error(\"key event is missing fields\");\n        return;\n    }\n\n    if (!senderKey) {\n        console.error(\"key event has no sender key (not encrypted?)\");\n        return;\n    }\n\n    if (event.getType() == \"m.forwarded_room_key\") {\n        exportFormat = true;\n        forwardingKeyChain = content.forwarding_curve25519_key_chain;\n        if (!utils.isArray(forwardingKeyChain)) {\n            forwardingKeyChain = [];\n        }\n\n        // copy content before we modify it\n        forwardingKeyChain = forwardingKeyChain.slice();\n        forwardingKeyChain.push(senderKey);\n\n        senderKey = content.sender_key;\n        if (!senderKey) {\n            console.error(\"forwarded_room_key event is missing sender_key field\");\n            return;\n        }\n\n        const ed25519Key = content.sender_claimed_ed25519_key;\n        if (!ed25519Key) {\n            console.error(\n                `forwarded_room_key_event is missing sender_claimed_ed25519_key field`,\n            );\n            return;\n        }\n\n        keysClaimed = {\n            ed25519: ed25519Key,\n        };\n    } else {\n        keysClaimed = event.getKeysClaimed();\n    }\n\n    console.log(`Adding key for megolm session ${senderKey}|${sessionId}`);\n    this._olmDevice.addInboundGroupSession(\n        content.room_id, senderKey, forwardingKeyChain, sessionId,\n        content.session_key, keysClaimed,\n        exportFormat,\n    ).then(() => {\n        // cancel any outstanding room key requests for this session\n        this._crypto.cancelRoomKeyRequest({\n            algorithm: content.algorithm,\n            room_id: content.room_id,\n            session_id: content.session_id,\n            sender_key: senderKey,\n        });\n\n        // have another go at decrypting events sent with this session.\n        this._retryDecryption(senderKey, sessionId);\n    }).catch((e) => {\n        console.error(`Error handling m.room_key_event: ${e}`);\n    });\n};\n\n/**\n * @inheritdoc\n */\nMegolmDecryption.prototype.hasKeysForKeyRequest = function(keyRequest) {\n    const body = keyRequest.requestBody;\n\n    return this._olmDevice.hasInboundSessionKeys(\n        body.room_id,\n        body.sender_key,\n        body.session_id,\n        // TODO: ratchet index\n    );\n};\n\n/**\n * @inheritdoc\n */\nMegolmDecryption.prototype.shareKeysWithDevice = function(keyRequest) {\n    const userId = keyRequest.userId;\n    const deviceId = keyRequest.deviceId;\n    const deviceInfo = this._crypto.getStoredDevice(userId, deviceId);\n    const body = keyRequest.requestBody;\n\n    this.olmlib.ensureOlmSessionsForDevices(\n        this._olmDevice, this._baseApis, {\n            [userId]: [deviceInfo],\n        },\n    ).then((devicemap) => {\n        const olmSessionResult = devicemap[userId][deviceId];\n        if (!olmSessionResult.sessionId) {\n            // no session with this device, probably because there\n            // were no one-time keys.\n            //\n            // ensureOlmSessionsForUsers has already done the logging,\n            // so just skip it.\n            return null;\n        }\n\n        console.log(\n            \"sharing keys for session \" + body.sender_key + \"|\"\n            + body.session_id + \" with device \"\n            + userId + \":\" + deviceId,\n        );\n\n        return this._buildKeyForwardingMessage(\n            body.room_id, body.sender_key, body.session_id,\n        );\n    }).then((payload) => {\n        const encryptedContent = {\n            algorithm: olmlib.OLM_ALGORITHM,\n            sender_key: this._olmDevice.deviceCurve25519Key,\n            ciphertext: {},\n        };\n\n        return this.olmlib.encryptMessageForDevice(\n            encryptedContent.ciphertext,\n            this._userId,\n            this._deviceId,\n            this._olmDevice,\n            userId,\n            deviceInfo,\n            payload,\n        ).then(() => {\n            const contentMap = {\n                [userId]: {\n                    [deviceId]: encryptedContent,\n                },\n            };\n\n            // TODO: retries\n            return this._baseApis.sendToDevice(\"m.room.encrypted\", contentMap);\n        });\n    }).done();\n};\n\nMegolmDecryption.prototype._buildKeyForwardingMessage = async function(\n    roomId, senderKey, sessionId,\n) {\n    const key = await this._olmDevice.getInboundGroupSessionKey(\n        roomId, senderKey, sessionId,\n    );\n\n    return {\n        type: \"m.forwarded_room_key\",\n        content: {\n            algorithm: olmlib.MEGOLM_ALGORITHM,\n            room_id: roomId,\n            sender_key: senderKey,\n            sender_claimed_ed25519_key: key.sender_claimed_ed25519_key,\n            session_id: sessionId,\n            session_key: key.key,\n            chain_index: key.chain_index,\n            forwarding_curve25519_key_chain: key.forwarding_curve25519_key_chain,\n        },\n    };\n};\n\n/**\n * @inheritdoc\n *\n * @param {module:crypto/OlmDevice.MegolmSessionData} session\n */\nMegolmDecryption.prototype.importRoomKey = function(session) {\n    this._olmDevice.importInboundGroupSession(session);\n\n    // have another go at decrypting events sent with this session.\n    this._retryDecryption(session.sender_key, session.session_id);\n};\n\n/**\n * Have another go at decrypting events after we receive a key\n *\n * @private\n * @param {String} senderKey\n * @param {String} sessionId\n */\nMegolmDecryption.prototype._retryDecryption = function(senderKey, sessionId) {\n    const k = senderKey + \"|\" + sessionId;\n    const pending = this._pendingEvents[k];\n    if (!pending) {\n        return;\n    }\n\n    delete this._pendingEvents[k];\n\n    for (let i = 0; i < pending.length; i++) {\n        pending[i].attemptDecryption(this._crypto);\n    }\n};\n\nbase.registerAlgorithm(\n    olmlib.MEGOLM_ALGORITHM, MegolmEncryption, MegolmDecryption,\n);\n","/*\nCopyright 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/**\n * Defines m.olm encryption/decryption\n *\n * @module crypto/algorithms/olm\n */\nimport Promise from 'bluebird';\n\nconst utils = require(\"../../utils\");\nconst olmlib = require(\"../olmlib\");\nconst DeviceInfo = require(\"../deviceinfo\");\nconst DeviceVerification = DeviceInfo.DeviceVerification;\n\n\nconst base = require(\"./base\");\n\n/**\n * Olm encryption implementation\n *\n * @constructor\n * @extends {module:crypto/algorithms/base.EncryptionAlgorithm}\n *\n * @param {object} params parameters, as per\n *     {@link module:crypto/algorithms/base.EncryptionAlgorithm}\n */\nfunction OlmEncryption(params) {\n    base.EncryptionAlgorithm.call(this, params);\n    this._sessionPrepared = false;\n    this._prepPromise = null;\n}\nutils.inherits(OlmEncryption, base.EncryptionAlgorithm);\n\n/**\n * @private\n\n * @param {string[]} roomMembers list of currently-joined users in the room\n * @return {module:client.Promise} Promise which resolves when setup is complete\n */\nOlmEncryption.prototype._ensureSession = function(roomMembers) {\n    if (this._prepPromise) {\n        // prep already in progress\n        return this._prepPromise;\n    }\n\n    if (this._sessionPrepared) {\n        // prep already done\n        return Promise.resolve();\n    }\n\n    const self = this;\n    this._prepPromise = self._crypto.downloadKeys(roomMembers).then(function(res) {\n        return self._crypto.ensureOlmSessionsForUsers(roomMembers);\n    }).then(function() {\n        self._sessionPrepared = true;\n    }).finally(function() {\n        self._prepPromise = null;\n    });\n    return this._prepPromise;\n};\n\n/**\n * @inheritdoc\n *\n * @param {module:models/room} room\n * @param {string} eventType\n * @param {object} content plaintext event content\n *\n * @return {module:client.Promise} Promise which resolves to the new event body\n */\nOlmEncryption.prototype.encryptMessage = function(room, eventType, content) {\n    // pick the list of recipients based on the membership list.\n    //\n    // TODO: there is a race condition here! What if a new user turns up\n    // just as you are sending a secret message?\n\n    const users = utils.map(room.getJoinedMembers(), function(u) {\n        return u.userId;\n    });\n\n    const self = this;\n    return this._ensureSession(users).then(function() {\n        const payloadFields = {\n            room_id: room.roomId,\n            type: eventType,\n            content: content,\n        };\n\n        const encryptedContent = {\n            algorithm: olmlib.OLM_ALGORITHM,\n            sender_key: self._olmDevice.deviceCurve25519Key,\n            ciphertext: {},\n        };\n\n        const promises = [];\n\n        for (let i = 0; i < users.length; ++i) {\n            const userId = users[i];\n            const devices = self._crypto.getStoredDevicesForUser(userId);\n\n            for (let j = 0; j < devices.length; ++j) {\n                const deviceInfo = devices[j];\n                const key = deviceInfo.getIdentityKey();\n                if (key == self._olmDevice.deviceCurve25519Key) {\n                    // don't bother sending to ourself\n                    continue;\n                }\n                if (deviceInfo.verified == DeviceVerification.BLOCKED) {\n                    // don't bother setting up sessions with blocked users\n                    continue;\n                }\n\n                promises.push(\n                    olmlib.encryptMessageForDevice(\n                        encryptedContent.ciphertext,\n                        self._userId, self._deviceId, self._olmDevice,\n                        userId, deviceInfo, payloadFields,\n                    ),\n                );\n            }\n        }\n\n        return Promise.all(promises).return(encryptedContent);\n    });\n};\n\n/**\n * Olm decryption implementation\n *\n * @constructor\n * @extends {module:crypto/algorithms/base.DecryptionAlgorithm}\n * @param {object} params parameters, as per\n *     {@link module:crypto/algorithms/base.DecryptionAlgorithm}\n */\nfunction OlmDecryption(params) {\n    base.DecryptionAlgorithm.call(this, params);\n}\nutils.inherits(OlmDecryption, base.DecryptionAlgorithm);\n\n/**\n * @inheritdoc\n *\n * @param {MatrixEvent} event\n *\n * returns a promise which resolves to a\n * {@link module:crypto~EventDecryptionResult} once we have finished\n * decrypting. Rejects with an `algorithms.DecryptionError` if there is a\n * problem decrypting the event.\n */\nOlmDecryption.prototype.decryptEvent = async function(event) {\n    const content = event.getWireContent();\n    const deviceKey = content.sender_key;\n    const ciphertext = content.ciphertext;\n\n    if (!ciphertext) {\n        throw new base.DecryptionError(\"Missing ciphertext\");\n    }\n\n    if (!(this._olmDevice.deviceCurve25519Key in ciphertext)) {\n        throw new base.DecryptionError(\"Not included in recipients\");\n    }\n    const message = ciphertext[this._olmDevice.deviceCurve25519Key];\n    let payloadString;\n\n    try {\n        payloadString = await this._decryptMessage(deviceKey, message);\n    } catch (e) {\n        throw new base.DecryptionError(\n            \"Bad Encrypted Message\", {\n                sender: deviceKey,\n                err: e,\n            },\n        );\n    }\n\n    const payload = JSON.parse(payloadString);\n\n    // check that we were the intended recipient, to avoid unknown-key attack\n    // https://github.com/vector-im/vector-web/issues/2483\n    if (payload.recipient != this._userId) {\n        throw new base.DecryptionError(\n            \"Message was intented for \" + payload.recipient,\n        );\n    }\n\n    if (payload.recipient_keys.ed25519 != this._olmDevice.deviceEd25519Key) {\n        throw new base.DecryptionError(\n            \"Message not intended for this device\", {\n                intended: payload.recipient_keys.ed25519,\n                our_key: this._olmDevice.deviceEd25519Key,\n            },\n        );\n    }\n\n    // check that the original sender matches what the homeserver told us, to\n    // avoid people masquerading as others.\n    // (this check is also provided via the sender's embedded ed25519 key,\n    // which is checked elsewhere).\n    if (payload.sender != event.getSender()) {\n        throw new base.DecryptionError(\n            \"Message forwarded from \" + payload.sender, {\n                reported_sender: event.getSender(),\n            },\n        );\n    }\n\n    // Olm events intended for a room have a room_id.\n    if (payload.room_id !== event.getRoomId()) {\n        throw new base.DecryptionError(\n            \"Message intended for room \" + payload.room_id, {\n                reported_room: event.room_id,\n            },\n        );\n    }\n\n    const claimedKeys = payload.keys || {};\n\n    return {\n        clearEvent: payload,\n        senderCurve25519Key: deviceKey,\n        claimedEd25519Key: claimedKeys.ed25519 || null,\n    };\n};\n\n/**\n * Attempt to decrypt an Olm message\n *\n * @param {string} theirDeviceIdentityKey  Curve25519 identity key of the sender\n * @param {object} message  message object, with 'type' and 'body' fields\n *\n * @return {string} payload, if decrypted successfully.\n */\nOlmDecryption.prototype._decryptMessage = async function(\n    theirDeviceIdentityKey, message,\n) {\n    const sessionIds = await this._olmDevice.getSessionIdsForDevice(\n        theirDeviceIdentityKey,\n    );\n\n    // try each session in turn.\n    const decryptionErrors = {};\n    for (let i = 0; i < sessionIds.length; i++) {\n        const sessionId = sessionIds[i];\n        try {\n            const payload = await this._olmDevice.decryptMessage(\n                theirDeviceIdentityKey, sessionId, message.type, message.body,\n            );\n            console.log(\n                \"Decrypted Olm message from \" + theirDeviceIdentityKey +\n                    \" with session \" + sessionId,\n            );\n            return payload;\n        } catch (e) {\n            const foundSession = await this._olmDevice.matchesSession(\n                theirDeviceIdentityKey, sessionId, message.type, message.body,\n            );\n\n            if (foundSession) {\n                // decryption failed, but it was a prekey message matching this\n                // session, so it should have worked.\n                throw new Error(\n                    \"Error decrypting prekey message with existing session id \" +\n                        sessionId + \": \" + e.message,\n                );\n            }\n\n            // otherwise it's probably a message for another session; carry on, but\n            // keep a record of the error\n            decryptionErrors[sessionId] = e.message;\n        }\n    }\n\n    if (message.type !== 0) {\n        // not a prekey message, so it should have matched an existing session, but it\n        // didn't work.\n\n        if (sessionIds.length === 0) {\n            throw new Error(\"No existing sessions\");\n        }\n\n        throw new Error(\n            \"Error decrypting non-prekey message with existing sessions: \" +\n                JSON.stringify(decryptionErrors),\n        );\n    }\n\n    // prekey message which doesn't match any existing sessions: make a new\n    // session.\n\n    let res;\n    try {\n        res = await this._olmDevice.createInboundSession(\n            theirDeviceIdentityKey, message.type, message.body,\n        );\n    } catch (e) {\n        decryptionErrors[\"(new)\"] = e.message;\n        throw new Error(\n            \"Error decrypting prekey message: \" +\n                JSON.stringify(decryptionErrors),\n        );\n    }\n\n    console.log(\n        \"created new inbound Olm session ID \" +\n            res.session_id + \" with \" + theirDeviceIdentityKey,\n    );\n    return res.payload;\n};\n\n\nbase.registerAlgorithm(olmlib.OLM_ALGORITHM, OlmEncryption, OlmDecryption);\n","/*\nCopyright 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n\n/**\n * @module crypto/deviceinfo\n */\n\n/**\n  * Information about a user's device\n  *\n  * @constructor\n  * @alias module:crypto/deviceinfo\n  *\n  * @property {string} deviceId the ID of this device\n  *\n  * @property {string[]} algorithms list of algorithms supported by this device\n  *\n  * @property {Object.<string,string>} keys a map from\n  *      &lt;key type&gt;:&lt;id&gt; -> &lt;base64-encoded key&gt;>\n  *\n  * @property {module:crypto/deviceinfo.DeviceVerification} verified\n  *     whether the device has been verified/blocked by the user\n  *\n  * @property {boolean} known\n  *     whether the user knows of this device's existence (useful when warning\n  *     the user that a user has added new devices)\n  *\n  * @property {Object} unsigned  additional data from the homeserver\n  *\n  * @param {string} deviceId id of the device\n  */\nfunction DeviceInfo(deviceId) {\n    // you can't change the deviceId\n    Object.defineProperty(this, 'deviceId', {\n        enumerable: true,\n        value: deviceId,\n    });\n\n    this.algorithms = [];\n    this.keys = {};\n    this.verified = DeviceVerification.UNVERIFIED;\n    this.known = false;\n    this.unsigned = {};\n}\n\n/**\n * rehydrate a DeviceInfo from the session store\n *\n * @param {object} obj  raw object from session store\n * @param {string} deviceId id of the device\n *\n * @return {module:crypto~DeviceInfo} new DeviceInfo\n */\nDeviceInfo.fromStorage = function(obj, deviceId) {\n    const res = new DeviceInfo(deviceId);\n    for (const prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            res[prop] = obj[prop];\n        }\n    }\n    return res;\n};\n\n/**\n * Prepare a DeviceInfo for JSON serialisation in the session store\n *\n * @return {object} deviceinfo with non-serialised members removed\n */\nDeviceInfo.prototype.toStorage = function() {\n    return {\n        algorithms: this.algorithms,\n        keys: this.keys,\n        verified: this.verified,\n        known: this.known,\n        unsigned: this.unsigned,\n    };\n};\n\n/**\n * Get the fingerprint for this device (ie, the Ed25519 key)\n *\n * @return {string} base64-encoded fingerprint of this device\n */\nDeviceInfo.prototype.getFingerprint = function() {\n    return this.keys[\"ed25519:\" + this.deviceId];\n};\n\n/**\n * Get the identity key for this device (ie, the Curve25519 key)\n *\n * @return {string} base64-encoded identity key of this device\n */\nDeviceInfo.prototype.getIdentityKey = function() {\n    return this.keys[\"curve25519:\" + this.deviceId];\n};\n\n/**\n * Get the configured display name for this device, if any\n *\n * @return {string?} displayname\n */\nDeviceInfo.prototype.getDisplayName = function() {\n    return this.unsigned.device_display_name || null;\n};\n\n/**\n * Returns true if this device is blocked\n *\n * @return {Boolean} true if blocked\n */\nDeviceInfo.prototype.isBlocked = function() {\n    return this.verified == DeviceVerification.BLOCKED;\n};\n\n/**\n * Returns true if this device is verified\n *\n * @return {Boolean} true if verified\n */\nDeviceInfo.prototype.isVerified = function() {\n    return this.verified == DeviceVerification.VERIFIED;\n};\n\n/**\n * Returns true if this device is unverified\n *\n * @return {Boolean} true if unverified\n */\nDeviceInfo.prototype.isUnverified = function() {\n    return this.verified == DeviceVerification.UNVERIFIED;\n};\n\n/**\n * Returns true if the user knows about this device's existence\n *\n * @return {Boolean} true if known\n */\nDeviceInfo.prototype.isKnown = function() {\n    return this.known == true;\n};\n\n/**\n * @enum\n */\nDeviceInfo.DeviceVerification = {\n    VERIFIED: 1,\n    UNVERIFIED: 0,\n    BLOCKED: -1,\n};\n\nconst DeviceVerification = DeviceInfo.DeviceVerification;\n\n/** */\nmodule.exports = DeviceInfo;\n","/*\nCopyright 2016 OpenMarket Ltd\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/**\n * @module crypto\n */\n\nconst anotherjson = require('another-json');\nimport Promise from 'bluebird';\nimport {EventEmitter} from 'events';\n\nconst utils = require(\"../utils\");\nconst OlmDevice = require(\"./OlmDevice\");\nconst olmlib = require(\"./olmlib\");\nconst algorithms = require(\"./algorithms\");\nconst DeviceInfo = require(\"./deviceinfo\");\nconst DeviceVerification = DeviceInfo.DeviceVerification;\nconst DeviceList = require('./DeviceList').default;\n\nimport OutgoingRoomKeyRequestManager from './OutgoingRoomKeyRequestManager';\n\n/**\n * Cryptography bits\n *\n * This module is internal to the js-sdk; the public API is via MatrixClient.\n *\n * @constructor\n * @alias module:crypto\n *\n * @internal\n *\n * @param {module:base-apis~MatrixBaseApis} baseApis base matrix api interface\n *\n * @param {module:store/session/webstorage~WebStorageSessionStore} sessionStore\n *    Store to be used for end-to-end crypto session data\n *\n * @param {string} userId The user ID for the local user\n *\n * @param {string} deviceId The identifier for this device.\n *\n * @param {Object} clientStore the MatrixClient data store.\n *\n * @param {module:crypto/store/base~CryptoStore} cryptoStore\n *    storage for the crypto layer.\n */\nfunction Crypto(baseApis, sessionStore, userId, deviceId,\n                clientStore, cryptoStore) {\n    this._baseApis = baseApis;\n    this._sessionStore = sessionStore;\n    this._userId = userId;\n    this._deviceId = deviceId;\n    this._clientStore = clientStore;\n    this._cryptoStore = cryptoStore;\n\n    this._olmDevice = new OlmDevice(sessionStore);\n    this._deviceList = new DeviceList(baseApis, sessionStore, this._olmDevice);\n\n    // the last time we did a check for the number of one-time-keys on the\n    // server.\n    this._lastOneTimeKeyCheck = null;\n    this._oneTimeKeyCheckInProgress = false;\n\n    // EncryptionAlgorithm instance for each room\n    this._roomEncryptors = {};\n\n    // map from algorithm to DecryptionAlgorithm instance, for each room\n    this._roomDecryptors = {};\n\n    this._supportedAlgorithms = utils.keys(\n        algorithms.DECRYPTION_CLASSES,\n    );\n\n    this._deviceKeys = {};\n\n    this._globalBlacklistUnverifiedDevices = false;\n\n    this._outgoingRoomKeyRequestManager = new OutgoingRoomKeyRequestManager(\n         baseApis, this._deviceId, this._cryptoStore,\n    );\n\n    // list of IncomingRoomKeyRequests/IncomingRoomKeyRequestCancellations\n    // we received in the current sync.\n    this._receivedRoomKeyRequests = [];\n    this._receivedRoomKeyRequestCancellations = [];\n    // true if we are currently processing received room key requests\n    this._processingRoomKeyRequests = false;\n}\nutils.inherits(Crypto, EventEmitter);\n\n/**\n * Initialise the crypto module so that it is ready for use\n *\n * Returns a promise which resolves once the crypto module is ready for use.\n */\nCrypto.prototype.init = async function() {\n    await this._olmDevice.init();\n\n    // build our device keys: these will later be uploaded\n    this._deviceKeys[\"ed25519:\" + this._deviceId] =\n        this._olmDevice.deviceEd25519Key;\n    this._deviceKeys[\"curve25519:\" + this._deviceId] =\n        this._olmDevice.deviceCurve25519Key;\n\n    let myDevices = this._sessionStore.getEndToEndDevicesForUser(\n        this._userId,\n    );\n\n    if (!myDevices) {\n        myDevices = {};\n    }\n\n    if (!myDevices[this._deviceId]) {\n        // add our own deviceinfo to the sessionstore\n        const deviceInfo = {\n            keys: this._deviceKeys,\n            algorithms: this._supportedAlgorithms,\n            verified: DeviceVerification.VERIFIED,\n            known: true,\n        };\n\n        myDevices[this._deviceId] = deviceInfo;\n        this._sessionStore.storeEndToEndDevicesForUser(\n            this._userId, myDevices,\n        );\n    }\n};\n\n/**\n * Tell the crypto module to register for MatrixClient events which it needs to\n * listen for\n *\n * @param {external:EventEmitter} eventEmitter event source where we can register\n *    for event notifications\n */\nCrypto.prototype.registerEventHandlers = function(eventEmitter) {\n    const crypto = this;\n\n    eventEmitter.on(\"RoomMember.membership\", function(event, member, oldMembership) {\n        try {\n            crypto._onRoomMembership(event, member, oldMembership);\n        } catch (e) {\n             console.error(\"Error handling membership change:\", e);\n        }\n    });\n\n    eventEmitter.on(\"toDeviceEvent\", function(event) {\n        crypto._onToDeviceEvent(event);\n    });\n};\n\n\n/** Start background processes related to crypto */\nCrypto.prototype.start = function() {\n    this._outgoingRoomKeyRequestManager.start();\n};\n\n/** Stop background processes related to crypto */\nCrypto.prototype.stop = function() {\n    this._outgoingRoomKeyRequestManager.stop();\n};\n\n/**\n * @return {string} The version of Olm.\n */\nCrypto.getOlmVersion = function() {\n    return OlmDevice.getOlmVersion();\n};\n\n/**\n * Get the Ed25519 key for this device\n *\n * @return {string} base64-encoded ed25519 key.\n */\nCrypto.prototype.getDeviceEd25519Key = function() {\n    return this._olmDevice.deviceEd25519Key;\n};\n\n/**\n * Set the global override for whether the client should ever send encrypted\n * messages to unverified devices.  If false, it can still be overridden\n * per-room.  If true, it overrides the per-room settings.\n *\n * @param {boolean} value whether to unilaterally blacklist all\n * unverified devices\n */\nCrypto.prototype.setGlobalBlacklistUnverifiedDevices = function(value) {\n    this._globalBlacklistUnverifiedDevices = value;\n};\n\n/**\n * @return {boolean} whether to unilaterally blacklist all unverified devices\n */\nCrypto.prototype.getGlobalBlacklistUnverifiedDevices = function() {\n    return this._globalBlacklistUnverifiedDevices;\n};\n\n/**\n * Upload the device keys to the homeserver.\n * @return {object} A promise that will resolve when the keys are uploaded.\n */\nCrypto.prototype.uploadDeviceKeys = function() {\n    const crypto = this;\n    const userId = crypto._userId;\n    const deviceId = crypto._deviceId;\n\n    const deviceKeys = {\n        algorithms: crypto._supportedAlgorithms,\n        device_id: deviceId,\n        keys: crypto._deviceKeys,\n        user_id: userId,\n    };\n\n    return crypto._signObject(deviceKeys).then(() => {\n        crypto._baseApis.uploadKeysRequest({\n            device_keys: deviceKeys,\n        }, {\n            // for now, we set the device id explicitly, as we may not be using the\n            // same one as used in login.\n            device_id: deviceId,\n        });\n    });\n};\n\n/**\n * Stores the current one_time_key count which will be handled later (in a call of\n * onSyncCompleted). The count is e.g. coming from a /sync response.\n *\n * @param {Number} currentCount The current count of one_time_keys to be stored\n */\nCrypto.prototype.updateOneTimeKeyCount = function(currentCount) {\n    if (isFinite(currentCount)) {\n        this._oneTimeKeyCount = currentCount;\n    } else {\n        throw new TypeError(\"Parameter for updateOneTimeKeyCount has to be a number\");\n    }\n};\n\n// check if it's time to upload one-time keys, and do so if so.\nfunction _maybeUploadOneTimeKeys(crypto) {\n    // frequency with which to check & upload one-time keys\n    const uploadPeriod = 1000 * 60; // one minute\n\n    // max number of keys to upload at once\n    // Creating keys can be an expensive operation so we limit the\n    // number we generate in one go to avoid blocking the application\n    // for too long.\n    const maxKeysPerCycle = 5;\n\n    if (crypto._oneTimeKeyCheckInProgress) {\n        return;\n    }\n\n    const now = Date.now();\n    if (crypto._lastOneTimeKeyCheck !== null &&\n        now - crypto._lastOneTimeKeyCheck < uploadPeriod\n       ) {\n        // we've done a key upload recently.\n        return;\n    }\n\n    crypto._lastOneTimeKeyCheck = now;\n\n    // We need to keep a pool of one time public keys on the server so that\n    // other devices can start conversations with us. But we can only store\n    // a finite number of private keys in the olm Account object.\n    // To complicate things further then can be a delay between a device\n    // claiming a public one time key from the server and it sending us a\n    // message. We need to keep the corresponding private key locally until\n    // we receive the message.\n    // But that message might never arrive leaving us stuck with duff\n    // private keys clogging up our local storage.\n    // So we need some kind of enginering compromise to balance all of\n    // these factors.\n\n    // Check how many keys we can store in the Account object.\n    const maxOneTimeKeys = crypto._olmDevice.maxNumberOfOneTimeKeys();\n    // Try to keep at most half that number on the server. This leaves the\n    // rest of the slots free to hold keys that have been claimed from the\n    // server but we haven't recevied a message for.\n    // If we run out of slots when generating new keys then olm will\n    // discard the oldest private keys first. This will eventually clean\n    // out stale private keys that won't receive a message.\n    const keyLimit = Math.floor(maxOneTimeKeys / 2);\n\n    function uploadLoop(keyCount) {\n        if (keyLimit <= keyCount) {\n            // If we don't need to generate any more keys then we are done.\n            return Promise.resolve();\n        }\n\n        const keysThisLoop = Math.min(keyLimit - keyCount, maxKeysPerCycle);\n\n        // Ask olm to generate new one time keys, then upload them to synapse.\n        return crypto._olmDevice.generateOneTimeKeys(keysThisLoop).then(() => {\n            return _uploadOneTimeKeys(crypto);\n        }).then((res) => {\n            if (res.one_time_key_counts && res.one_time_key_counts.signed_curve25519) {\n                // if the response contains a more up to date value use this\n                // for the next loop\n                return uploadLoop(res.one_time_key_counts.signed_curve25519);\n            } else {\n                throw new Error(\"response for uploading keys does not contain \"\n                              + \"one_time_key_counts.signed_curve25519\");\n            }\n        });\n    }\n\n    crypto._oneTimeKeyCheckInProgress = true;\n    Promise.resolve().then(() => {\n        if (crypto._oneTimeKeyCount !== undefined) {\n            // We already have the current one_time_key count from a /sync response.\n            // Use this value instead of asking the server for the current key count.\n            return Promise.resolve(crypto._oneTimeKeyCount);\n        }\n        // ask the server how many keys we have\n        return crypto._baseApis.uploadKeysRequest({}, {\n            device_id: crypto._deviceId,\n        }).then((res) => {\n            return res.one_time_key_counts.signed_curve25519 || 0;\n        });\n    }).then((keyCount) => {\n        // Start the uploadLoop with the current keyCount. The function checks if\n        // we need to upload new keys or not.\n        // If there are too many keys on the server then we don't need to\n        // create any more keys.\n        return uploadLoop(keyCount);\n    }).catch((e) => {\n        console.error(\"Error uploading one-time keys\", e.stack || e);\n    }).finally(() => {\n        // reset _oneTimeKeyCount to prevent start uploading based on old data.\n        // it will be set again on the next /sync-response\n        crypto._oneTimeKeyCount = undefined;\n        crypto._oneTimeKeyCheckInProgress = false;\n    }).done();\n}\n\n// returns a promise which resolves to the response\nasync function _uploadOneTimeKeys(crypto) {\n    const oneTimeKeys = await crypto._olmDevice.getOneTimeKeys();\n    const oneTimeJson = {};\n\n    const promises = [];\n\n    for (const keyId in oneTimeKeys.curve25519) {\n        if (oneTimeKeys.curve25519.hasOwnProperty(keyId)) {\n            const k = {\n                key: oneTimeKeys.curve25519[keyId],\n            };\n            oneTimeJson[\"signed_curve25519:\" + keyId] = k;\n            promises.push(crypto._signObject(k));\n        }\n    }\n\n    await Promise.all(promises);\n\n    const res = await crypto._baseApis.uploadKeysRequest({\n        one_time_keys: oneTimeJson,\n    }, {\n        // for now, we set the device id explicitly, as we may not be using the\n        // same one as used in login.\n        device_id: crypto._deviceId,\n    });\n\n    await crypto._olmDevice.markKeysAsPublished();\n    return res;\n}\n\n/**\n * Download the keys for a list of users and stores the keys in the session\n * store.\n * @param {Array} userIds The users to fetch.\n * @param {bool} forceDownload Always download the keys even if cached.\n *\n * @return {Promise} A promise which resolves to a map userId->deviceId->{@link\n * module:crypto/deviceinfo|DeviceInfo}.\n */\nCrypto.prototype.downloadKeys = function(userIds, forceDownload) {\n    return this._deviceList.downloadKeys(userIds, forceDownload);\n};\n\n/**\n * Get the stored device keys for a user id\n *\n * @param {string} userId the user to list keys for.\n *\n * @return {module:crypto/deviceinfo[]|null} list of devices, or null if we haven't\n * managed to get a list of devices for this user yet.\n */\nCrypto.prototype.getStoredDevicesForUser = function(userId) {\n    return this._deviceList.getStoredDevicesForUser(userId);\n};\n\n/**\n * Get the stored keys for a single device\n *\n * @param {string} userId\n * @param {string} deviceId\n *\n * @return {module:crypto/deviceinfo?} device, or undefined\n * if we don't know about this device\n */\nCrypto.prototype.getStoredDevice = function(userId, deviceId) {\n    return this._deviceList.getStoredDevice(userId, deviceId);\n};\n\n/**\n * Update the blocked/verified state of the given device\n *\n * @param {string} userId owner of the device\n * @param {string} deviceId unique identifier for the device\n *\n * @param {?boolean} verified whether to mark the device as verified. Null to\n *     leave unchanged.\n *\n * @param {?boolean} blocked whether to mark the device as blocked. Null to\n *      leave unchanged.\n *\n * @param {?boolean} known whether to mark that the user has been made aware of\n *      the existence of this device. Null to leave unchanged\n *\n * @return {Promise<module:crypto/deviceinfo>} updated DeviceInfo\n */\nCrypto.prototype.setDeviceVerification = async function(\n    userId, deviceId, verified, blocked, known,\n) {\n    const devices = this._sessionStore.getEndToEndDevicesForUser(userId);\n    if (!devices || !devices[deviceId]) {\n        throw new Error(\"Unknown device \" + userId + \":\" + deviceId);\n    }\n\n    const dev = devices[deviceId];\n    let verificationStatus = dev.verified;\n\n    if (verified) {\n        verificationStatus = DeviceVerification.VERIFIED;\n    } else if (verified !== null && verificationStatus == DeviceVerification.VERIFIED) {\n        verificationStatus = DeviceVerification.UNVERIFIED;\n    }\n\n    if (blocked) {\n        verificationStatus = DeviceVerification.BLOCKED;\n    } else if (blocked !== null && verificationStatus == DeviceVerification.BLOCKED) {\n        verificationStatus = DeviceVerification.UNVERIFIED;\n    }\n\n    let knownStatus = dev.known;\n    if (known !== null && known !== undefined) {\n        knownStatus = known;\n    }\n\n    if (dev.verified !== verificationStatus || dev.known !== knownStatus) {\n        dev.verified = verificationStatus;\n        dev.known = knownStatus;\n        this._sessionStore.storeEndToEndDevicesForUser(userId, devices);\n    }\n    return DeviceInfo.fromStorage(dev, deviceId);\n};\n\n\n/**\n * Get information on the active olm sessions with a user\n * <p>\n * Returns a map from device id to an object with keys 'deviceIdKey' (the\n * device's curve25519 identity key) and 'sessions' (an array of objects in the\n * same format as that returned by\n * {@link module:crypto/OlmDevice#getSessionInfoForDevice}).\n * <p>\n * This method is provided for debugging purposes.\n *\n * @param {string} userId id of user to inspect\n *\n * @return {Promise<Object.<string, {deviceIdKey: string, sessions: object[]}>>}\n */\nCrypto.prototype.getOlmSessionsForUser = async function(userId) {\n    const devices = this.getStoredDevicesForUser(userId) || [];\n    const result = {};\n    for (let j = 0; j < devices.length; ++j) {\n        const device = devices[j];\n        const deviceKey = device.getIdentityKey();\n        const sessions = await this._olmDevice.getSessionInfoForDevice(deviceKey);\n\n        result[device.deviceId] = {\n            deviceIdKey: deviceKey,\n            sessions: sessions,\n        };\n    }\n    return result;\n};\n\n\n/**\n * Get the device which sent an event\n *\n * @param {module:models/event.MatrixEvent} event event to be checked\n *\n * @return {module:crypto/deviceinfo?}\n */\nCrypto.prototype.getEventSenderDeviceInfo = function(event) {\n    const senderKey = event.getSenderKey();\n    const algorithm = event.getWireContent().algorithm;\n\n    if (!senderKey || !algorithm) {\n        return null;\n    }\n\n    const forwardingChain = event.getForwardingCurve25519KeyChain();\n    if (forwardingChain.length > 0) {\n        // we got this event from somewhere else\n        // TODO: check if we can trust the forwarders.\n        return null;\n    }\n\n    // senderKey is the Curve25519 identity key of the device which the event\n    // was sent from. In the case of Megolm, it's actually the Curve25519\n    // identity key of the device which set up the Megolm session.\n\n    const device = this._deviceList.getDeviceByIdentityKey(\n        event.getSender(), algorithm, senderKey,\n    );\n\n    if (device === null) {\n        // we haven't downloaded the details of this device yet.\n        return null;\n    }\n\n    // so far so good, but now we need to check that the sender of this event\n    // hadn't advertised someone else's Curve25519 key as their own. We do that\n    // by checking the Ed25519 claimed by the event (or, in the case of megolm,\n    // the event which set up the megolm session), to check that it matches the\n    // fingerprint of the purported sending device.\n    //\n    // (see https://github.com/vector-im/vector-web/issues/2215)\n\n    const claimedKey = event.getClaimedEd25519Key();\n    if (!claimedKey) {\n        console.warn(\"Event \" + event.getId() + \" claims no ed25519 key: \" +\n                     \"cannot verify sending device\");\n        return null;\n    }\n\n    if (claimedKey !== device.getFingerprint()) {\n        console.warn(\n            \"Event \" + event.getId() + \" claims ed25519 key \" + claimedKey +\n                \"but sender device has key \" + device.getFingerprint());\n        return null;\n    }\n\n    return device;\n};\n\n\n/**\n * Configure a room to use encryption (ie, save a flag in the sessionstore).\n *\n * @param {string} roomId The room ID to enable encryption in.\n *\n * @param {object} config The encryption config for the room.\n *\n * @param {boolean=} inhibitDeviceQuery true to suppress device list query for\n *   users in the room (for now)\n */\nCrypto.prototype.setRoomEncryption = async function(roomId, config, inhibitDeviceQuery) {\n    // if we already have encryption in this room, we should ignore this event\n    // (for now at least. maybe we should alert the user somehow?)\n    const existingConfig = this._sessionStore.getEndToEndRoom(roomId);\n    if (existingConfig) {\n        if (JSON.stringify(existingConfig) != JSON.stringify(config)) {\n            console.error(\"Ignoring m.room.encryption event which requests \" +\n                          \"a change of config in \" + roomId);\n            return;\n        }\n    }\n\n    const AlgClass = algorithms.ENCRYPTION_CLASSES[config.algorithm];\n    if (!AlgClass) {\n        throw new Error(\"Unable to encrypt with \" + config.algorithm);\n    }\n\n    this._sessionStore.storeEndToEndRoom(roomId, config);\n\n    const alg = new AlgClass({\n        userId: this._userId,\n        deviceId: this._deviceId,\n        crypto: this,\n        olmDevice: this._olmDevice,\n        baseApis: this._baseApis,\n        roomId: roomId,\n        config: config,\n    });\n    this._roomEncryptors[roomId] = alg;\n\n    // make sure we are tracking the device lists for all users in this room.\n    console.log(\"Enabling encryption in \" + roomId + \"; \" +\n                \"starting to track device lists for all users therein\");\n    const room = this._clientStore.getRoom(roomId);\n    if (!room) {\n        throw new Error(`Unable to enable encryption in unknown room ${roomId}`);\n    }\n\n    const members = room.getJoinedMembers();\n    members.forEach((m) => {\n        this._deviceList.startTrackingDeviceList(m.userId);\n    });\n    if (!inhibitDeviceQuery) {\n        this._deviceList.refreshOutdatedDeviceLists();\n    }\n};\n\n\n/**\n * @typedef {Object} module:crypto~OlmSessionResult\n * @property {module:crypto/deviceinfo} device  device info\n * @property {string?} sessionId base64 olm session id; null if no session\n *    could be established\n */\n\n/**\n * Try to make sure we have established olm sessions for all known devices for\n * the given users.\n *\n * @param {string[]} users list of user ids\n *\n * @return {module:client.Promise} resolves once the sessions are complete, to\n *    an Object mapping from userId to deviceId to\n *    {@link module:crypto~OlmSessionResult}\n */\nCrypto.prototype.ensureOlmSessionsForUsers = function(users) {\n    const devicesByUser = {};\n\n    for (let i = 0; i < users.length; ++i) {\n        const userId = users[i];\n        devicesByUser[userId] = [];\n\n        const devices = this.getStoredDevicesForUser(userId) || [];\n        for (let j = 0; j < devices.length; ++j) {\n            const deviceInfo = devices[j];\n\n            const key = deviceInfo.getIdentityKey();\n            if (key == this._olmDevice.deviceCurve25519Key) {\n                // don't bother setting up session to ourself\n                continue;\n            }\n            if (deviceInfo.verified == DeviceVerification.BLOCKED) {\n                // don't bother setting up sessions with blocked users\n                continue;\n            }\n\n            devicesByUser[userId].push(deviceInfo);\n        }\n    }\n\n    return olmlib.ensureOlmSessionsForDevices(\n        this._olmDevice, this._baseApis, devicesByUser,\n    );\n};\n\n/**\n * Whether encryption is enabled for a room.\n * @param {string} roomId the room id to query.\n * @return {bool} whether encryption is enabled.\n */\nCrypto.prototype.isRoomEncrypted = function(roomId) {\n    return Boolean(this._roomEncryptors[roomId]);\n};\n\n\n/**\n * Get a list containing all of the room keys\n *\n * @return {module:client.Promise} a promise which resolves to a list of\n *    session export objects\n */\nCrypto.prototype.exportRoomKeys = function() {\n    return Promise.map(\n        this._sessionStore.getAllEndToEndInboundGroupSessionKeys(),\n        (s) => {\n            return this._olmDevice.exportInboundGroupSession(\n                s.senderKey, s.sessionId,\n            ).then((sess) => {\n                sess.algorithm = olmlib.MEGOLM_ALGORITHM;\n                return sess;\n            });\n        },\n    );\n};\n\n/**\n * Import a list of room keys previously exported by exportRoomKeys\n *\n * @param {Object[]} keys a list of session export objects\n * @return {module:client.Promise} a promise which resolves once the keys have been imported\n */\nCrypto.prototype.importRoomKeys = function(keys) {\n    return Promise.map(\n        keys, (key) => {\n            if (!key.room_id || !key.algorithm) {\n                console.warn(\"ignoring room key entry with missing fields\", key);\n                return null;\n            }\n\n            const alg = this._getRoomDecryptor(key.room_id, key.algorithm);\n            return alg.importRoomKey(key);\n        },\n    );\n};\n\n/**\n * Encrypt an event according to the configuration of the room.\n *\n * @param {module:models/event.MatrixEvent} event  event to be sent\n *\n * @param {module:models/room} room destination room.\n *\n * @return {module:client.Promise?} Promise which resolves when the event has been\n *     encrypted, or null if nothing was needed\n */\nCrypto.prototype.encryptEvent = function(event, room) {\n    if (!room) {\n        throw new Error(\"Cannot send encrypted messages in unknown rooms\");\n    }\n\n    const roomId = event.getRoomId();\n\n    const alg = this._roomEncryptors[roomId];\n    if (!alg) {\n        // MatrixClient has already checked that this room should be encrypted,\n        // so this is an unexpected situation.\n        throw new Error(\n            \"Room was previously configured to use encryption, but is \" +\n            \"no longer. Perhaps the homeserver is hiding the \" +\n            \"configuration event.\",\n        );\n    }\n\n    return alg.encryptMessage(\n        room, event.getType(), event.getContent(),\n    ).then((encryptedContent) => {\n        event.makeEncrypted(\n            \"m.room.encrypted\",\n            encryptedContent,\n            this._olmDevice.deviceCurve25519Key,\n            this._olmDevice.deviceEd25519Key,\n        );\n    });\n};\n\n/**\n * Decrypt a received event\n *\n * @param {MatrixEvent} event\n *\n * @return {Promise<module:crypto~EventDecryptionResult>} resolves once we have\n *  finished decrypting. Rejects with an `algorithms.DecryptionError` if there\n *  is a problem decrypting the event.\n */\nCrypto.prototype.decryptEvent = function(event) {\n    const content = event.getWireContent();\n    const alg = this._getRoomDecryptor(event.getRoomId(), content.algorithm);\n    return alg.decryptEvent(event);\n};\n\n/**\n * Handle the notification from /sync or /keys/changes that device lists have\n * been changed.\n *\n * @param {Object} deviceLists device_lists field from /sync, or response from\n * /keys/changes\n */\nCrypto.prototype.handleDeviceListChanges = async function(deviceLists) {\n    if (deviceLists.changed && Array.isArray(deviceLists.changed)) {\n        deviceLists.changed.forEach((u) => {\n            this._deviceList.invalidateUserDeviceList(u);\n        });\n    }\n\n    if (deviceLists.left && Array.isArray(deviceLists.left)) {\n        deviceLists.left.forEach((u) => {\n            this._deviceList.stopTrackingDeviceList(u);\n        });\n    }\n\n    // don't flush the outdated device list yet - we do it once we finish\n    // processing the sync.\n};\n\n/**\n * Send a request for some room keys, if we have not already done so\n *\n * @param {module:crypto~RoomKeyRequestBody} requestBody\n * @param {Array<{userId: string, deviceId: string}>} recipients\n */\nCrypto.prototype.requestRoomKey = function(requestBody, recipients) {\n    this._outgoingRoomKeyRequestManager.sendRoomKeyRequest(\n        requestBody, recipients,\n    ).catch((e) => {\n        // this normally means we couldn't talk to the store\n        console.error(\n            'Error requesting key for event', e,\n        );\n    }).done();\n};\n\n/**\n * Cancel any earlier room key request\n *\n * @param {module:crypto~RoomKeyRequestBody} requestBody\n *    parameters to match for cancellation\n */\nCrypto.prototype.cancelRoomKeyRequest = function(requestBody) {\n    this._outgoingRoomKeyRequestManager.cancelRoomKeyRequest(requestBody)\n    .catch((e) => {\n        console.warn(\"Error clearing pending room key requests\", e);\n    }).done();\n};\n\n/**\n * handle an m.room.encryption event\n *\n * @param {module:models/event.MatrixEvent} event encryption event\n */\nCrypto.prototype.onCryptoEvent = async function(event) {\n    const roomId = event.getRoomId();\n    const content = event.getContent();\n\n    try {\n        // inhibit the device list refresh for now - it will happen once we've\n        // finished processing the sync, in onSyncCompleted.\n        await this.setRoomEncryption(roomId, content, true);\n    } catch (e) {\n        console.error(\"Error configuring encryption in room \" + roomId +\n                      \":\", e);\n    }\n};\n\n/**\n * handle the completion of a /sync\n *\n * This is called after the processing of each successful /sync response.\n * It is an opportunity to do a batch process on the information received.\n *\n * @param {Object} syncData  the data from the 'MatrixClient.sync' event\n */\nCrypto.prototype.onSyncCompleted = async function(syncData) {\n    const nextSyncToken = syncData.nextSyncToken;\n\n    if (!syncData.oldSyncToken) {\n        console.log(\"Completed initial sync\");\n\n        // if we have a deviceSyncToken, we can tell the deviceList to\n        // invalidate devices which have changed since then.\n        const oldSyncToken = this._sessionStore.getEndToEndDeviceSyncToken();\n        if (oldSyncToken !== null) {\n            try {\n                await this._invalidateDeviceListsSince(\n                    oldSyncToken, nextSyncToken,\n                );\n            } catch (e) {\n                // if that failed, we fall back to invalidating everyone.\n                console.warn(\"Error fetching changed device list\", e);\n                this._deviceList.invalidateAllDeviceLists();\n            }\n        } else {\n            // otherwise, we have to invalidate all devices for all users we\n            // are tracking.\n            console.log(\"Completed first initialsync; invalidating all \" +\n                        \"device list caches\");\n            this._deviceList.invalidateAllDeviceLists();\n        }\n    }\n\n    // we can now store our sync token so that we can get an update on\n    // restart rather than having to invalidate everyone.\n    //\n    // (we don't really need to do this on every sync - we could just\n    // do it periodically)\n    this._sessionStore.storeEndToEndDeviceSyncToken(nextSyncToken);\n\n    // catch up on any new devices we got told about during the sync.\n    this._deviceList.lastKnownSyncToken = nextSyncToken;\n    this._deviceList.refreshOutdatedDeviceLists();\n\n    // we don't start uploading one-time keys until we've caught up with\n    // to-device messages, to help us avoid throwing away one-time-keys that we\n    // are about to receive messages for\n    // (https://github.com/vector-im/riot-web/issues/2782).\n    if (!syncData.catchingUp) {\n        _maybeUploadOneTimeKeys(this);\n        this._processReceivedRoomKeyRequests();\n    }\n};\n\n/**\n * Ask the server which users have new devices since a given token,\n * and invalidate them\n *\n * @param {String} oldSyncToken\n * @param {String} lastKnownSyncToken\n *\n * Returns a Promise which resolves once the query is complete. Rejects if the\n *   keyChange query fails.\n */\nCrypto.prototype._invalidateDeviceListsSince = async function(\n    oldSyncToken, lastKnownSyncToken,\n) {\n    const r = await this._baseApis.getKeyChanges(\n        oldSyncToken, lastKnownSyncToken,\n    );\n\n    console.log(\"got key changes since\", oldSyncToken, \":\", r);\n\n    await this.handleDeviceListChanges(r);\n};\n\n/**\n * Get a list of the e2e-enabled rooms we are members of\n *\n * @returns {module:models.Room[]}\n */\nCrypto.prototype._getE2eRooms = function() {\n    return this._clientStore.getRooms().filter((room) => {\n        // check for rooms with encryption enabled\n        const alg = this._roomEncryptors[room.roomId];\n        if (!alg) {\n            return false;\n        }\n\n        // ignore any rooms which we have left\n        const me = room.getMember(this._userId);\n        if (!me || (\n            me.membership !== \"join\" && me.membership !== \"invite\"\n        )) {\n            return false;\n        }\n\n        return true;\n    });\n};\n\n\nCrypto.prototype._onToDeviceEvent = function(event) {\n    try {\n        if (event.getType() == \"m.room_key\"\n            || event.getType() == \"m.forwarded_room_key\") {\n            this._onRoomKeyEvent(event);\n        } else if (event.getType() == \"m.room_key_request\") {\n            this._onRoomKeyRequestEvent(event);\n        } else if (event.isBeingDecrypted()) {\n            // once the event has been decrypted, try again\n            event.once('Event.decrypted', (ev) => {\n                this._onToDeviceEvent(ev);\n            });\n        }\n    } catch (e) {\n        console.error(\"Error handling toDeviceEvent:\", e);\n    }\n};\n\n/**\n * Handle a key event\n *\n * @private\n * @param {module:models/event.MatrixEvent} event key event\n */\nCrypto.prototype._onRoomKeyEvent = function(event) {\n    const content = event.getContent();\n\n    if (!content.room_id || !content.algorithm) {\n        console.error(\"key event is missing fields\");\n        return;\n    }\n\n    const alg = this._getRoomDecryptor(content.room_id, content.algorithm);\n    alg.onRoomKeyEvent(event);\n};\n\n/**\n * Handle a change in the membership state of a member of a room\n *\n * @private\n * @param {module:models/event.MatrixEvent} event  event causing the change\n * @param {module:models/room-member} member  user whose membership changed\n * @param {string=} oldMembership  previous membership\n */\nCrypto.prototype._onRoomMembership = function(event, member, oldMembership) {\n    // this event handler is registered on the *client* (as opposed to the room\n    // member itself), which means it is only called on changes to the *live*\n    // membership state (ie, it is not called when we back-paginate, nor when\n    // we load the state in the initialsync).\n    //\n    // Further, it is automatically registered and called when new members\n    // arrive in the room.\n\n    const roomId = member.roomId;\n\n    const alg = this._roomEncryptors[roomId];\n    if (!alg) {\n        // not encrypting in this room\n        return;\n    }\n\n    if (member.membership == 'join') {\n        console.log('Join event for ' + member.userId + ' in ' + roomId);\n        // make sure we are tracking the deviceList for this user\n        this._deviceList.startTrackingDeviceList(member.userId);\n    }\n\n    alg.onRoomMembership(event, member, oldMembership);\n};\n\n\n/**\n * Called when we get an m.room_key_request event.\n *\n * @private\n * @param {module:models/event.MatrixEvent} event key request event\n */\nCrypto.prototype._onRoomKeyRequestEvent = function(event) {\n    const content = event.getContent();\n    if (content.action === \"request\") {\n        // Queue it up for now, because they tend to arrive before the room state\n        // events at initial sync, and we want to see if we know anything about the\n        // room before passing them on to the app.\n        const req = new IncomingRoomKeyRequest(event);\n        this._receivedRoomKeyRequests.push(req);\n    } else if (content.action === \"request_cancellation\") {\n        const req = new IncomingRoomKeyRequestCancellation(event);\n        this._receivedRoomKeyRequestCancellations.push(req);\n    }\n};\n\n/**\n * Process any m.room_key_request events which were queued up during the\n * current sync.\n *\n * @private\n */\nCrypto.prototype._processReceivedRoomKeyRequests = async function() {\n    if (this._processingRoomKeyRequests) {\n        // we're still processing last time's requests; keep queuing new ones\n        // up for now.\n        return;\n    }\n    this._processingRoomKeyRequests = true;\n\n    try {\n        // we need to grab and clear the queues in the synchronous bit of this method,\n        // so that we don't end up racing with the next /sync.\n        const requests = this._receivedRoomKeyRequests;\n        this._receivedRoomKeyRequests = [];\n        const cancellations = this._receivedRoomKeyRequestCancellations;\n        this._receivedRoomKeyRequestCancellations = [];\n\n        // Process all of the requests, *then* all of the cancellations.\n        //\n        // This makes sure that if we get a request and its cancellation in the\n        // same /sync result, then we process the request before the\n        // cancellation (and end up with a cancelled request), rather than the\n        // cancellation before the request (and end up with an outstanding\n        // request which should have been cancelled.)\n        await Promise.map(\n            requests, (req) =>\n                this._processReceivedRoomKeyRequest(req),\n        );\n        await Promise.map(\n            cancellations, (cancellation) =>\n                this._processReceivedRoomKeyRequestCancellation(cancellation),\n        );\n    } catch (e) {\n        console.error(`Error processing room key requsts: ${e}`);\n    } finally {\n        this._processingRoomKeyRequests = false;\n    }\n};\n\n/**\n * Helper for processReceivedRoomKeyRequests\n *\n * @param {IncomingRoomKeyRequest} req\n */\nCrypto.prototype._processReceivedRoomKeyRequest = async function(req) {\n    const userId = req.userId;\n    const deviceId = req.deviceId;\n\n    const body = req.requestBody;\n    const roomId = body.room_id;\n    const alg = body.algorithm;\n\n    console.log(`m.room_key_request from ${userId}:${deviceId}` +\n                ` for ${roomId} / ${body.session_id} (id ${req.requestId})`);\n\n    if (userId !== this._userId) {\n        // TODO: determine if we sent this device the keys already: in\n        // which case we can do so again.\n        console.log(\"Ignoring room key request from other user for now\");\n        return;\n    }\n\n    // todo: should we queue up requests we don't yet have keys for,\n    // in case they turn up later?\n\n    // if we don't have a decryptor for this room/alg, we don't have\n    // the keys for the requested events, and can drop the requests.\n    if (!this._roomDecryptors[roomId]) {\n        console.log(`room key request for unencrypted room ${roomId}`);\n        return;\n    }\n\n    const decryptor = this._roomDecryptors[roomId][alg];\n    if (!decryptor) {\n        console.log(`room key request for unknown alg ${alg} in room ${roomId}`);\n        return;\n    }\n\n    if (!await decryptor.hasKeysForKeyRequest(req)) {\n        console.log(\n            `room key request for unknown session ${roomId} / ` +\n                body.session_id,\n        );\n        return;\n    }\n\n    req.share = () => {\n        decryptor.shareKeysWithDevice(req);\n    };\n\n    // if the device is is verified already, share the keys\n    const device = this._deviceList.getStoredDevice(userId, deviceId);\n    if (device && device.isVerified()) {\n        console.log('device is already verified: sharing keys');\n        req.share();\n        return;\n    }\n\n    this.emit(\"crypto.roomKeyRequest\", req);\n};\n\n\n/**\n * Helper for processReceivedRoomKeyRequests\n *\n * @param {IncomingRoomKeyRequestCancellation} cancellation\n */\nCrypto.prototype._processReceivedRoomKeyRequestCancellation = async function(\n    cancellation,\n) {\n    console.log(\n        `m.room_key_request cancellation for ${cancellation.userId}:` +\n            `${cancellation.deviceId} (id ${cancellation.requestId})`,\n    );\n\n    // we should probably only notify the app of cancellations we told it\n    // about, but we don't currently have a record of that, so we just pass\n    // everything through.\n    this.emit(\"crypto.roomKeyRequestCancellation\", cancellation);\n};\n\n/**\n * Get a decryptor for a given room and algorithm.\n *\n * If we already have a decryptor for the given room and algorithm, return\n * it. Otherwise try to instantiate it.\n *\n * @private\n *\n * @param {string?} roomId   room id for decryptor. If undefined, a temporary\n * decryptor is instantiated.\n *\n * @param {string} algorithm  crypto algorithm\n *\n * @return {module:crypto.algorithms.base.DecryptionAlgorithm}\n *\n * @raises {module:crypto.algorithms.DecryptionError} if the algorithm is\n * unknown\n */\nCrypto.prototype._getRoomDecryptor = function(roomId, algorithm) {\n    let decryptors;\n    let alg;\n\n    roomId = roomId || null;\n    if (roomId) {\n        decryptors = this._roomDecryptors[roomId];\n        if (!decryptors) {\n            this._roomDecryptors[roomId] = decryptors = {};\n        }\n\n        alg = decryptors[algorithm];\n        if (alg) {\n            return alg;\n        }\n    }\n\n    const AlgClass = algorithms.DECRYPTION_CLASSES[algorithm];\n    if (!AlgClass) {\n        throw new algorithms.DecryptionError(\n            'Unknown encryption algorithm \"' + algorithm + '\".',\n        );\n    }\n    alg = new AlgClass({\n        userId: this._userId,\n        crypto: this,\n        olmDevice: this._olmDevice,\n        baseApis: this._baseApis,\n        roomId: roomId,\n    });\n\n    if (decryptors) {\n        decryptors[algorithm] = alg;\n    }\n    return alg;\n};\n\n\n/**\n * sign the given object with our ed25519 key\n *\n * @param {Object} obj  Object to which we will add a 'signatures' property\n */\nCrypto.prototype._signObject = async function(obj) {\n    const sigs = {};\n    sigs[this._userId] = {};\n    sigs[this._userId][\"ed25519:\" + this._deviceId] =\n        await this._olmDevice.sign(anotherjson.stringify(obj));\n    obj.signatures = sigs;\n};\n\n\n/**\n * The parameters of a room key request. The details of the request may\n * vary with the crypto algorithm, but the management and storage layers for\n * outgoing requests expect it to have 'room_id' and 'session_id' properties.\n *\n * @typedef {Object} RoomKeyRequestBody\n */\n\n/**\n * Represents a received m.room_key_request event\n *\n * @property {string} userId    user requesting the key\n * @property {string} deviceId  device requesting the key\n * @property {string} requestId unique id for the request\n * @property {module:crypto~RoomKeyRequestBody} requestBody\n * @property {function()} share  callback which, when called, will ask\n *    the relevant crypto algorithm implementation to share the keys for\n *    this request.\n */\nclass IncomingRoomKeyRequest {\n    constructor(event) {\n        const content = event.getContent();\n\n        this.userId = event.getSender();\n        this.deviceId = content.requesting_device_id;\n        this.requestId = content.request_id;\n        this.requestBody = content.body || {};\n        this.share = () => {\n            throw new Error(\"don't know how to share keys for this request yet\");\n        };\n    }\n}\n\n/**\n * Represents a received m.room_key_request cancellation\n *\n * @property {string} userId    user requesting the cancellation\n * @property {string} deviceId  device requesting the cancellation\n * @property {string} requestId unique id for the request to be cancelled\n */\nclass IncomingRoomKeyRequestCancellation {\n    constructor(event) {\n        const content = event.getContent();\n\n        this.userId = event.getSender();\n        this.deviceId = content.requesting_device_id;\n        this.requestId = content.request_id;\n    }\n}\n\n/**\n * The result of a (successful) call to decryptEvent.\n *\n * @typedef {Object} EventDecryptionResult\n *\n * @property {Object} clearEvent The plaintext payload for the event\n *     (typically containing <tt>type</tt> and <tt>content</tt> fields).\n *\n * @property {?string} senderCurve25519Key Key owned by the sender of this\n *    event.  See {@link module:models/event.MatrixEvent#getSenderKey}.\n *\n * @property {?string} claimedEd25519Key ed25519 key claimed by the sender of\n *    this event. See\n *    {@link module:models/event.MatrixEvent#getClaimedEd25519Key}.\n *\n * @property {?Array<string>} forwardingCurve25519KeyChain list of curve25519\n *     keys involved in telling us about the senderCurve25519Key and\n *     claimedEd25519Key. See\n *     {@link module:models/event.MatrixEvent#getForwardingCurve25519KeyChain}.\n */\n\n/**\n * Fires when we receive a room key request\n *\n * @event module:client~MatrixClient#\"crypto.roomKeyRequest\"\n * @param {module:crypto~IncomingRoomKeyRequest} req  request details\n */\n\n/**\n * Fires when we receive a room key request cancellation\n *\n * @event module:client~MatrixClient#\"crypto.roomKeyRequestCancellation\"\n * @param {module:crypto~IncomingRoomKeyRequestCancellation} req\n */\n\n/** */\nmodule.exports = Crypto;\n","/*\nCopyright 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * @module olmlib\n *\n * Utilities common to olm encryption algorithms\n */\n\nimport Promise from 'bluebird';\nconst anotherjson = require('another-json');\n\nconst utils = require(\"../utils\");\n\n/**\n * matrix algorithm tag for olm\n */\nmodule.exports.OLM_ALGORITHM = \"m.olm.v1.curve25519-aes-sha2\";\n\n/**\n * matrix algorithm tag for megolm\n */\nmodule.exports.MEGOLM_ALGORITHM = \"m.megolm.v1.aes-sha2\";\n\n\n/**\n * Encrypt an event payload for an Olm device\n *\n * @param {Object<string, string>} resultsObject  The `ciphertext` property\n *   of the m.room.encrypted event to which to add our result\n *\n * @param {string} ourUserId\n * @param {string} ourDeviceId\n * @param {module:crypto/OlmDevice} olmDevice olm.js wrapper\n * @param {string} recipientUserId\n * @param {module:crypto/deviceinfo} recipientDevice\n * @param {object} payloadFields fields to include in the encrypted payload\n *\n * Returns a promise which resolves (to undefined) when the payload\n *    has been encrypted into `resultsObject`\n */\nmodule.exports.encryptMessageForDevice = async function(\n    resultsObject,\n    ourUserId, ourDeviceId, olmDevice, recipientUserId, recipientDevice,\n    payloadFields,\n) {\n    const deviceKey = recipientDevice.getIdentityKey();\n    const sessionId = await olmDevice.getSessionIdForDevice(deviceKey);\n    if (sessionId === null) {\n        // If we don't have a session for a device then\n        // we can't encrypt a message for it.\n        return;\n    }\n\n    console.log(\n        \"Using sessionid \" + sessionId + \" for device \" +\n            recipientUserId + \":\" + recipientDevice.deviceId,\n    );\n\n    const payload = {\n        sender: ourUserId,\n        sender_device: ourDeviceId,\n\n        // Include the Ed25519 key so that the recipient knows what\n        // device this message came from.\n        // We don't need to include the curve25519 key since the\n        // recipient will already know this from the olm headers.\n        // When combined with the device keys retrieved from the\n        // homeserver signed by the ed25519 key this proves that\n        // the curve25519 key and the ed25519 key are owned by\n        // the same device.\n        keys: {\n            \"ed25519\": olmDevice.deviceEd25519Key,\n        },\n\n        // include the recipient device details in the payload,\n        // to avoid unknown key attacks, per\n        // https://github.com/vector-im/vector-web/issues/2483\n        recipient: recipientUserId,\n        recipient_keys: {\n            \"ed25519\": recipientDevice.getFingerprint(),\n        },\n    };\n\n    // TODO: technically, a bunch of that stuff only needs to be included for\n    // pre-key messages: after that, both sides know exactly which devices are\n    // involved in the session. If we're looking to reduce data transfer in the\n    // future, we could elide them for subsequent messages.\n\n    utils.extend(payload, payloadFields);\n\n    resultsObject[deviceKey] = await olmDevice.encryptMessage(\n        deviceKey, sessionId, JSON.stringify(payload),\n    );\n};\n\n/**\n * Try to make sure we have established olm sessions for the given devices.\n *\n * @param {module:crypto/OlmDevice} olmDevice\n *\n * @param {module:base-apis~MatrixBaseApis} baseApis\n *\n * @param {object<string, module:crypto/deviceinfo[]>} devicesByUser\n *    map from userid to list of devices\n *\n * @return {module:client.Promise} resolves once the sessions are complete, to\n *    an Object mapping from userId to deviceId to\n *    {@link module:crypto~OlmSessionResult}\n */\nmodule.exports.ensureOlmSessionsForDevices = async function(\n    olmDevice, baseApis, devicesByUser,\n) {\n    const devicesWithoutSession = [\n        // [userId, deviceId], ...\n    ];\n    const result = {};\n\n    for (const userId in devicesByUser) {\n        if (!devicesByUser.hasOwnProperty(userId)) {\n            continue;\n        }\n        result[userId] = {};\n        const devices = devicesByUser[userId];\n        for (let j = 0; j < devices.length; j++) {\n            const deviceInfo = devices[j];\n            const deviceId = deviceInfo.deviceId;\n            const key = deviceInfo.getIdentityKey();\n            const sessionId = await olmDevice.getSessionIdForDevice(key);\n            if (sessionId === null) {\n                devicesWithoutSession.push([userId, deviceId]);\n            }\n            result[userId][deviceId] = {\n                device: deviceInfo,\n                sessionId: sessionId,\n            };\n        }\n    }\n\n    if (devicesWithoutSession.length === 0) {\n        return result;\n    }\n\n    // TODO: this has a race condition - if we try to send another message\n    // while we are claiming a key, we will end up claiming two and setting up\n    // two sessions.\n    //\n    // That should eventually resolve itself, but it's poor form.\n\n    const oneTimeKeyAlgorithm = \"signed_curve25519\";\n    const res = await baseApis.claimOneTimeKeys(\n        devicesWithoutSession, oneTimeKeyAlgorithm,\n    );\n\n    const otk_res = res.one_time_keys || {};\n    const promises = [];\n    for (const userId in devicesByUser) {\n        if (!devicesByUser.hasOwnProperty(userId)) {\n            continue;\n        }\n        const userRes = otk_res[userId] || {};\n        const devices = devicesByUser[userId];\n        for (let j = 0; j < devices.length; j++) {\n            const deviceInfo = devices[j];\n            const deviceId = deviceInfo.deviceId;\n            if (result[userId][deviceId].sessionId) {\n                // we already have a result for this device\n                continue;\n            }\n\n            const deviceRes = userRes[deviceId] || {};\n            let oneTimeKey = null;\n            for (const keyId in deviceRes) {\n                if (keyId.indexOf(oneTimeKeyAlgorithm + \":\") === 0) {\n                    oneTimeKey = deviceRes[keyId];\n                }\n            }\n\n            if (!oneTimeKey) {\n                console.warn(\n                    \"No one-time keys (alg=\" + oneTimeKeyAlgorithm +\n                        \") for device \" + userId + \":\" + deviceId,\n                );\n                continue;\n            }\n\n            promises.push(\n                _verifyKeyAndStartSession(\n                    olmDevice, oneTimeKey, userId, deviceInfo,\n                ).then((sid) => {\n                    result[userId][deviceId].sessionId = sid;\n                }),\n            );\n        }\n    }\n\n    await Promise.all(promises);\n    return result;\n};\n\nasync function _verifyKeyAndStartSession(olmDevice, oneTimeKey, userId, deviceInfo) {\n    const deviceId = deviceInfo.deviceId;\n    try {\n        await _verifySignature(\n            olmDevice, oneTimeKey, userId, deviceId,\n            deviceInfo.getFingerprint(),\n        );\n    } catch (e) {\n        console.error(\n            \"Unable to verify signature on one-time key for device \" +\n                userId + \":\" + deviceId + \":\", e,\n        );\n        return null;\n    }\n\n    let sid;\n    try {\n        sid = await olmDevice.createOutboundSession(\n            deviceInfo.getIdentityKey(), oneTimeKey.key,\n        );\n    } catch (e) {\n        // possibly a bad key\n        console.error(\"Error starting session with device \" +\n                      userId + \":\" + deviceId + \": \" + e);\n        return null;\n    }\n\n    console.log(\"Started new sessionid \" + sid +\n                \" for device \" + userId + \":\" + deviceId);\n    return sid;\n}\n\n\n/**\n * Verify the signature on an object\n *\n * @param {module:crypto/OlmDevice} olmDevice olm wrapper to use for verify op\n *\n * @param {Object} obj object to check signature on. Note that this will be\n * stripped of its 'signatures' and 'unsigned' properties.\n *\n * @param {string} signingUserId  ID of the user whose signature should be checked\n *\n * @param {string} signingDeviceId  ID of the device whose signature should be checked\n *\n * @param {string} signingKey   base64-ed ed25519 public key\n *\n * Returns a promise which resolves (to undefined) if the the signature is good,\n * or rejects with an Error if it is bad.\n */\nconst _verifySignature = module.exports.verifySignature = async function(\n    olmDevice, obj, signingUserId, signingDeviceId, signingKey,\n) {\n    const signKeyId = \"ed25519:\" + signingDeviceId;\n    const signatures = obj.signatures || {};\n    const userSigs = signatures[signingUserId] || {};\n    const signature = userSigs[signKeyId];\n    if (!signature) {\n        throw Error(\"No signature\");\n    }\n\n    // prepare the canonical json: remove unsigned and signatures, and stringify with\n    // anotherjson\n    delete obj.unsigned;\n    delete obj.signatures;\n    const json = anotherjson.stringify(obj);\n\n    olmDevice.verifySignature(\n        signingKey, json, signature,\n    );\n};\n","import Promise from 'bluebird';\nimport utils from '../../utils';\n\nexport const VERSION = 1;\n\n/**\n * Implementation of a CryptoStore which is backed by an existing\n * IndexedDB connection. Generally you want IndexedDBCryptoStore\n * which connects to the database and defers to one of these.\n *\n * @implements {module:crypto/store/base~CryptoStore}\n */\nexport class Backend {\n    /**\n     * @param {IDBDatabase} db\n     */\n    constructor(db) {\n        this._db = db;\n\n        // make sure we close the db on `onversionchange` - otherwise\n        // attempts to delete the database will block (and subsequent\n        // attempts to re-create it will also block).\n        db.onversionchange = (ev) => {\n            console.log(`versionchange for indexeddb ${this._dbName}: closing`);\n            db.close();\n        };\n    }\n\n    /**\n     * Look for an existing outgoing room key request, and if none is found,\n     * add a new one\n     *\n     * @param {module:crypto/store/base~OutgoingRoomKeyRequest} request\n     *\n     * @returns {Promise} resolves to\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}: either the\n     *    same instance as passed in, or the existing one.\n     */\n    getOrAddOutgoingRoomKeyRequest(request) {\n        const requestBody = request.requestBody;\n\n        const deferred = Promise.defer();\n        const txn = this._db.transaction(\"outgoingRoomKeyRequests\", \"readwrite\");\n        txn.onerror = deferred.reject;\n\n        // first see if we already have an entry for this request.\n        this._getOutgoingRoomKeyRequest(txn, requestBody, (existing) => {\n            if (existing) {\n                // this entry matches the request - return it.\n                console.log(\n                    `already have key request outstanding for ` +\n                        `${requestBody.room_id} / ${requestBody.session_id}: ` +\n                        `not sending another`,\n                );\n                deferred.resolve(existing);\n                return;\n            }\n\n            // we got to the end of the list without finding a match\n            // - add the new request.\n            console.log(\n                `enqueueing key request for ${requestBody.room_id} / ` +\n                    requestBody.session_id,\n            );\n            const store = txn.objectStore(\"outgoingRoomKeyRequests\");\n            store.add(request);\n            txn.onsuccess = () => { deferred.resolve(request); };\n        });\n\n        return deferred.promise;\n    }\n\n    /**\n     * Look for an existing room key request\n     *\n     * @param {module:crypto~RoomKeyRequestBody} requestBody\n     *    existing request to look for\n     *\n     * @return {Promise} resolves to the matching\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}, or null if\n     *    not found\n     */\n    getOutgoingRoomKeyRequest(requestBody) {\n        const deferred = Promise.defer();\n\n        const txn = this._db.transaction(\"outgoingRoomKeyRequests\", \"readonly\");\n        txn.onerror = deferred.reject;\n\n        this._getOutgoingRoomKeyRequest(txn, requestBody, (existing) => {\n            deferred.resolve(existing);\n        });\n        return deferred.promise;\n    }\n\n    /**\n     * look for an existing room key request in the db\n     *\n     * @private\n     * @param {IDBTransaction} txn  database transaction\n     * @param {module:crypto~RoomKeyRequestBody} requestBody\n     *    existing request to look for\n     * @param {Function} callback  function to call with the results of the\n     *    search. Either passed a matching\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}, or null if\n     *    not found.\n     */\n    _getOutgoingRoomKeyRequest(txn, requestBody, callback) {\n        const store = txn.objectStore(\"outgoingRoomKeyRequests\");\n\n        const idx = store.index(\"session\");\n        const cursorReq = idx.openCursor([\n            requestBody.room_id,\n            requestBody.session_id,\n        ]);\n\n        cursorReq.onsuccess = (ev) => {\n            const cursor = ev.target.result;\n            if(!cursor) {\n                // no match found\n                callback(null);\n                return;\n            }\n\n            const existing = cursor.value;\n\n            if (utils.deepCompare(existing.requestBody, requestBody)) {\n                // got a match\n                callback(existing);\n                return;\n            }\n\n            // look at the next entry in the index\n            cursor.continue();\n        };\n    }\n\n    /**\n     * Look for room key requests by state\n     *\n     * @param {Array<Number>} wantedStates list of acceptable states\n     *\n     * @return {Promise} resolves to the a\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}, or null if\n     *    there are no pending requests in those states. If there are multiple\n     *    requests in those states, an arbitrary one is chosen.\n     */\n    getOutgoingRoomKeyRequestByState(wantedStates) {\n        if (wantedStates.length === 0) {\n            return Promise.resolve(null);\n        }\n\n        // this is a bit tortuous because we need to make sure we do the lookup\n        // in a single transaction, to avoid having a race with the insertion\n        // code.\n\n        // index into the wantedStates array\n        let stateIndex = 0;\n        let result;\n\n        function onsuccess(ev) {\n            const cursor = ev.target.result;\n            if (cursor) {\n                // got a match\n                result = cursor.value;\n                return;\n            }\n\n            // try the next state in the list\n            stateIndex++;\n            if (stateIndex >= wantedStates.length) {\n                // no matches\n                return;\n            }\n\n            const wantedState = wantedStates[stateIndex];\n            const cursorReq = ev.target.source.openCursor(wantedState);\n            cursorReq.onsuccess = onsuccess;\n        }\n\n        const txn = this._db.transaction(\"outgoingRoomKeyRequests\", \"readonly\");\n        const store = txn.objectStore(\"outgoingRoomKeyRequests\");\n\n        const wantedState = wantedStates[stateIndex];\n        const cursorReq = store.index(\"state\").openCursor(wantedState);\n        cursorReq.onsuccess = onsuccess;\n\n        return promiseifyTxn(txn).then(() => result);\n    }\n\n    /**\n     * Look for an existing room key request by id and state, and update it if\n     * found\n     *\n     * @param {string} requestId      ID of request to update\n     * @param {number} expectedState  state we expect to find the request in\n     * @param {Object} updates        name/value map of updates to apply\n     *\n     * @returns {Promise} resolves to\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}\n     *    updated request, or null if no matching row was found\n     */\n    updateOutgoingRoomKeyRequest(requestId, expectedState, updates) {\n        let result = null;\n\n        function onsuccess(ev) {\n            const cursor = ev.target.result;\n            if (!cursor) {\n                return;\n            }\n            const data = cursor.value;\n            if (data.state != expectedState) {\n                console.warn(\n                    `Cannot update room key request from ${expectedState} ` +\n                    `as it was already updated to ${data.state}`,\n                );\n                return;\n            }\n            Object.assign(data, updates);\n            cursor.update(data);\n            result = data;\n        }\n\n        const txn = this._db.transaction(\"outgoingRoomKeyRequests\", \"readwrite\");\n        const cursorReq = txn.objectStore(\"outgoingRoomKeyRequests\")\n                  .openCursor(requestId);\n        cursorReq.onsuccess = onsuccess;\n        return promiseifyTxn(txn).then(() => result);\n    }\n\n    /**\n     * Look for an existing room key request by id and state, and delete it if\n     * found\n     *\n     * @param {string} requestId      ID of request to update\n     * @param {number} expectedState  state we expect to find the request in\n     *\n     * @returns {Promise} resolves once the operation is completed\n     */\n    deleteOutgoingRoomKeyRequest(requestId, expectedState) {\n        const txn = this._db.transaction(\"outgoingRoomKeyRequests\", \"readwrite\");\n        const cursorReq = txn.objectStore(\"outgoingRoomKeyRequests\")\n                  .openCursor(requestId);\n        cursorReq.onsuccess = (ev) => {\n            const cursor = ev.target.result;\n            if (!cursor) {\n                return;\n            }\n            const data = cursor.value;\n            if (data.state != expectedState) {\n                console.warn(\n                    `Cannot delete room key request in state ${data.state} `\n                        + `(expected ${expectedState})`,\n                );\n                return;\n            }\n            cursor.delete();\n        };\n        return promiseifyTxn(txn);\n    }\n}\n\nexport function upgradeDatabase(db, oldVersion) {\n    console.log(\n        `Upgrading IndexedDBCryptoStore from version ${oldVersion}`\n            + ` to ${VERSION}`,\n    );\n    if (oldVersion < 1) { // The database did not previously exist.\n        createDatabase(db);\n    }\n    // Expand as needed.\n}\n\nfunction createDatabase(db) {\n    const outgoingRoomKeyRequestsStore =\n        db.createObjectStore(\"outgoingRoomKeyRequests\", { keyPath: \"requestId\" });\n\n    // we assume that the RoomKeyRequestBody will have room_id and session_id\n    // properties, to make the index efficient.\n    outgoingRoomKeyRequestsStore.createIndex(\"session\",\n        [\"requestBody.room_id\", \"requestBody.session_id\"],\n    );\n\n    outgoingRoomKeyRequestsStore.createIndex(\"state\", \"state\");\n}\n\nfunction promiseifyTxn(txn) {\n    return new Promise((resolve, reject) => {\n        txn.oncomplete = resolve;\n        txn.onerror = reject;\n    });\n}\n","/*\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport Promise from 'bluebird';\n\nimport MemoryCryptoStore from './memory-crypto-store';\nimport * as IndexedDBCryptoStoreBackend from './indexeddb-crypto-store-backend';\n\n/**\n * Internal module. indexeddb storage for e2e.\n *\n * @module\n */\n\n/**\n * An implementation of CryptoStore, which is normally backed by an indexeddb,\n * but with fallback to MemoryCryptoStore.\n *\n * @implements {module:crypto/store/base~CryptoStore}\n */\nexport default class IndexedDBCryptoStore {\n    /**\n     * Create a new IndexedDBCryptoStore\n     *\n     * @param {IDBFactory} indexedDB  global indexedDB instance\n     * @param {string} dbName   name of db to connect to\n     */\n    constructor(indexedDB, dbName) {\n        this._indexedDB = indexedDB;\n        this._dbName = dbName;\n        this._backendPromise = null;\n    }\n\n    /**\n     * Ensure the database exists and is up-to-date, or fall back to\n     * an in-memory store.\n     *\n     * @return {Promise} resolves to either an IndexedDBCryptoStoreBackend.Backend,\n     * or a MemoryCryptoStore\n     */\n    _connect() {\n        if (this._backendPromise) {\n            return this._backendPromise;\n        }\n\n        this._backendPromise = new Promise((resolve, reject) => {\n            if (!this._indexedDB) {\n                reject(new Error('no indexeddb support available'));\n                return;\n            }\n\n            console.log(`connecting to indexeddb ${this._dbName}`);\n\n            const req = this._indexedDB.open(\n                this._dbName, IndexedDBCryptoStoreBackend.VERSION,\n            );\n\n            req.onupgradeneeded = (ev) => {\n                const db = ev.target.result;\n                const oldVersion = ev.oldVersion;\n                IndexedDBCryptoStoreBackend.upgradeDatabase(db, oldVersion);\n            };\n\n            req.onblocked = () => {\n                console.log(\n                    `can't yet open IndexedDBCryptoStore because it is open elsewhere`,\n                );\n            };\n\n            req.onerror = (ev) => {\n                reject(ev.target.error);\n            };\n\n            req.onsuccess = (r) => {\n                const db = r.target.result;\n\n                console.log(`connected to indexeddb ${this._dbName}`);\n                resolve(new IndexedDBCryptoStoreBackend.Backend(db));\n            };\n        }).catch((e) => {\n            console.warn(\n                `unable to connect to indexeddb ${this._dbName}` +\n                    `: falling back to in-memory store: ${e}`,\n            );\n            return new MemoryCryptoStore();\n        });\n\n        return this._backendPromise;\n    }\n\n    /**\n     * Delete all data from this store.\n     *\n     * @returns {Promise} resolves when the store has been cleared.\n     */\n    deleteAllData() {\n        return new Promise((resolve, reject) => {\n            if (!this._indexedDB) {\n                reject(new Error('no indexeddb support available'));\n                return;\n            }\n\n            console.log(`Removing indexeddb instance: ${this._dbName}`);\n            const req = this._indexedDB.deleteDatabase(this._dbName);\n\n            req.onblocked = () => {\n                console.log(\n                    `can't yet delete IndexedDBCryptoStore because it is open elsewhere`,\n                );\n            };\n\n            req.onerror = (ev) => {\n                reject(ev.target.error);\n            };\n\n            req.onsuccess = () => {\n                console.log(`Removed indexeddb instance: ${this._dbName}`);\n                resolve();\n            };\n        }).catch((e) => {\n            // in firefox, with indexedDB disabled, this fails with a\n            // DOMError. We treat this as non-fatal, so that people can\n            // still use the app.\n            console.warn(`unable to delete IndexedDBCryptoStore: ${e}`);\n        });\n    }\n\n    /**\n     * Look for an existing outgoing room key request, and if none is found,\n     * add a new one\n     *\n     * @param {module:crypto/store/base~OutgoingRoomKeyRequest} request\n     *\n     * @returns {Promise} resolves to\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}: either the\n     *    same instance as passed in, or the existing one.\n     */\n    getOrAddOutgoingRoomKeyRequest(request) {\n        return this._connect().then((backend) => {\n            return backend.getOrAddOutgoingRoomKeyRequest(request);\n        });\n    }\n\n    /**\n     * Look for an existing room key request\n     *\n     * @param {module:crypto~RoomKeyRequestBody} requestBody\n     *    existing request to look for\n     *\n     * @return {Promise} resolves to the matching\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}, or null if\n     *    not found\n     */\n    getOutgoingRoomKeyRequest(requestBody) {\n        return this._connect().then((backend) => {\n            return backend.getOutgoingRoomKeyRequest(requestBody);\n        });\n    }\n\n    /**\n     * Look for room key requests by state\n     *\n     * @param {Array<Number>} wantedStates list of acceptable states\n     *\n     * @return {Promise} resolves to the a\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}, or null if\n     *    there are no pending requests in those states. If there are multiple\n     *    requests in those states, an arbitrary one is chosen.\n     */\n    getOutgoingRoomKeyRequestByState(wantedStates) {\n        return this._connect().then((backend) => {\n            return backend.getOutgoingRoomKeyRequestByState(wantedStates);\n        });\n    }\n\n    /**\n     * Look for an existing room key request by id and state, and update it if\n     * found\n     *\n     * @param {string} requestId      ID of request to update\n     * @param {number} expectedState  state we expect to find the request in\n     * @param {Object} updates        name/value map of updates to apply\n     *\n     * @returns {Promise} resolves to\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}\n     *    updated request, or null if no matching row was found\n     */\n    updateOutgoingRoomKeyRequest(requestId, expectedState, updates) {\n        return this._connect().then((backend) => {\n            return backend.updateOutgoingRoomKeyRequest(\n                requestId, expectedState, updates,\n            );\n        });\n    }\n\n    /**\n     * Look for an existing room key request by id and state, and delete it if\n     * found\n     *\n     * @param {string} requestId      ID of request to update\n     * @param {number} expectedState  state we expect to find the request in\n     *\n     * @returns {Promise} resolves once the operation is completed\n     */\n    deleteOutgoingRoomKeyRequest(requestId, expectedState) {\n        return this._connect().then((backend) => {\n            return backend.deleteOutgoingRoomKeyRequest(requestId, expectedState);\n        });\n    }\n}\n","/*\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport Promise from 'bluebird';\n\nimport utils from '../../utils';\n\n/**\n * Internal module. in-memory storage for e2e.\n *\n * @module\n */\n\n/**\n * @implements {module:crypto/store/base~CryptoStore}\n */\nexport default class MemoryCryptoStore {\n    constructor() {\n        this._outgoingRoomKeyRequests = [];\n    }\n\n    /**\n     * Delete all data from this store.\n     *\n     * @returns {Promise} Promise which resolves when the store has been cleared.\n     */\n    deleteAllData() {\n        return Promise.resolve();\n    }\n\n    /**\n     * Look for an existing outgoing room key request, and if none is found,\n     * add a new one\n     *\n     * @param {module:crypto/store/base~OutgoingRoomKeyRequest} request\n     *\n     * @returns {Promise} resolves to\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}: either the\n     *    same instance as passed in, or the existing one.\n     */\n    getOrAddOutgoingRoomKeyRequest(request) {\n        const requestBody = request.requestBody;\n\n        return Promise.try(() => {\n            // first see if we already have an entry for this request.\n            const existing = this._getOutgoingRoomKeyRequest(requestBody);\n\n            if (existing) {\n                // this entry matches the request - return it.\n                console.log(\n                    `already have key request outstanding for ` +\n                    `${requestBody.room_id} / ${requestBody.session_id}: ` +\n                    `not sending another`,\n                );\n                return existing;\n            }\n\n            // we got to the end of the list without finding a match\n            // - add the new request.\n            console.log(\n                `enqueueing key request for ${requestBody.room_id} / ` +\n                requestBody.session_id,\n            );\n            this._outgoingRoomKeyRequests.push(request);\n            return request;\n        });\n    }\n\n    /**\n     * Look for an existing room key request\n     *\n     * @param {module:crypto~RoomKeyRequestBody} requestBody\n     *    existing request to look for\n     *\n     * @return {Promise} resolves to the matching\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}, or null if\n     *    not found\n     */\n    getOutgoingRoomKeyRequest(requestBody) {\n        return Promise.resolve(this._getOutgoingRoomKeyRequest(requestBody));\n    }\n\n    /**\n     * Looks for existing room key request, and returns the result synchronously.\n     *\n     * @internal\n     *\n     * @param {module:crypto~RoomKeyRequestBody} requestBody\n     *    existing request to look for\n     *\n     * @return {module:crypto/store/base~OutgoingRoomKeyRequest?}\n     *    the matching request, or null if not found\n     */\n    _getOutgoingRoomKeyRequest(requestBody) {\n        for (const existing of this._outgoingRoomKeyRequests) {\n            if (utils.deepCompare(existing.requestBody, requestBody)) {\n                return existing;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Look for room key requests by state\n     *\n     * @param {Array<Number>} wantedStates list of acceptable states\n     *\n     * @return {Promise} resolves to the a\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}, or null if\n     *    there are no pending requests in those states\n     */\n    getOutgoingRoomKeyRequestByState(wantedStates) {\n        for (const req of this._outgoingRoomKeyRequests) {\n            for (const state of wantedStates) {\n                if (req.state === state) {\n                    return Promise.resolve(req);\n                }\n            }\n        }\n        return Promise.resolve(null);\n    }\n\n    /**\n     * Look for an existing room key request by id and state, and update it if\n     * found\n     *\n     * @param {string} requestId      ID of request to update\n     * @param {number} expectedState  state we expect to find the request in\n     * @param {Object} updates        name/value map of updates to apply\n     *\n     * @returns {Promise} resolves to\n     *    {@link module:crypto/store/base~OutgoingRoomKeyRequest}\n     *    updated request, or null if no matching row was found\n     */\n    updateOutgoingRoomKeyRequest(requestId, expectedState, updates) {\n        for (const req of this._outgoingRoomKeyRequests) {\n            if (req.requestId !== requestId) {\n                continue;\n            }\n\n            if (req.state != expectedState) {\n                console.warn(\n                    `Cannot update room key request from ${expectedState} ` +\n                    `as it was already updated to ${req.state}`,\n                );\n                return Promise.resolve(null);\n            }\n            Object.assign(req, updates);\n            return Promise.resolve(req);\n        }\n\n        return Promise.resolve(null);\n    }\n\n    /**\n     * Look for an existing room key request by id and state, and delete it if\n     * found\n     *\n     * @param {string} requestId      ID of request to update\n     * @param {number} expectedState  state we expect to find the request in\n     *\n     * @returns {Promise} resolves once the operation is completed\n     */\n    deleteOutgoingRoomKeyRequest(requestId, expectedState) {\n        for (let i = 0; i < this._outgoingRoomKeyRequests.length; i++) {\n            const req = this._outgoingRoomKeyRequests[i];\n\n            if (req.requestId !== requestId) {\n                continue;\n            }\n\n            if (req.state != expectedState) {\n                console.warn(\n                    `Cannot delete room key request in state ${req.state} `\n                    + `(expected ${expectedState})`,\n                );\n                return Promise.resolve(null);\n            }\n\n            this._outgoingRoomKeyRequests.splice(i, 1);\n            return Promise.resolve(req);\n        }\n\n        return Promise.resolve(null);\n    }\n}\n","/*\nCopyright 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * @module filter-component\n */\n\n/**\n * Checks if a value matches a given field value, which may be a * terminated\n * wildcard pattern.\n * @param {String} actual_value  The value to be compared\n * @param {String} filter_value  The filter pattern to be compared\n * @return {bool} true if the actual_value matches the filter_value\n */\nfunction _matches_wildcard(actual_value, filter_value) {\n    if (filter_value.endsWith(\"*\")) {\n        const type_prefix = filter_value.slice(0, -1);\n        return actual_value.substr(0, type_prefix.length) === type_prefix;\n    } else {\n        return actual_value === filter_value;\n    }\n}\n\n/**\n * FilterComponent is a section of a Filter definition which defines the\n * types, rooms, senders filters etc to be applied to a particular type of resource.\n * This is all ported over from synapse's Filter object.\n *\n * N.B. that synapse refers to these as 'Filters', and what js-sdk refers to as\n * 'Filters' are referred to as 'FilterCollections'.\n *\n * @constructor\n * @param {Object} filter_json the definition of this filter JSON, e.g. { 'contains_url': true }\n */\nfunction FilterComponent(filter_json) {\n    this.filter_json = filter_json;\n\n    this.types = filter_json.types || null;\n    this.not_types = filter_json.not_types || [];\n\n    this.rooms = filter_json.rooms || null;\n    this.not_rooms = filter_json.not_rooms || [];\n\n    this.senders = filter_json.senders || null;\n    this.not_senders = filter_json.not_senders || [];\n\n    this.contains_url = filter_json.contains_url || null;\n}\n\n/**\n * Checks with the filter component matches the given event\n * @param {MatrixEvent} event event to be checked against the filter\n * @return {bool} true if the event matches the filter\n */\nFilterComponent.prototype.check = function(event) {\n    return this._checkFields(\n        event.getRoomId(),\n        event.getSender(),\n        event.getType(),\n        event.getContent() ? event.getContent().url !== undefined : false,\n    );\n};\n\n/**\n * Checks whether the filter component matches the given event fields.\n * @param {String} room_id       the room_id for the event being checked\n * @param {String} sender        the sender of the event being checked\n * @param {String} event_type    the type of the event being checked\n * @param {String} contains_url  whether the event contains a content.url field\n * @return {bool} true if the event fields match the filter\n */\nFilterComponent.prototype._checkFields =\n    function(room_id, sender, event_type, contains_url) {\n    const literal_keys = {\n        \"rooms\": function(v) {\n            return room_id === v;\n        },\n        \"senders\": function(v) {\n            return sender === v;\n        },\n        \"types\": function(v) {\n            return _matches_wildcard(event_type, v);\n        },\n    };\n\n    const self = this;\n    Object.keys(literal_keys).forEach(function(name) {\n        const match_func = literal_keys[name];\n        const not_name = \"not_\" + name;\n        const disallowed_values = self[not_name];\n        if (disallowed_values.map(match_func)) {\n            return false;\n        }\n\n        const allowed_values = self[name];\n        if (allowed_values) {\n            if (!allowed_values.map(match_func)) {\n                return false;\n            }\n        }\n    });\n\n    const contains_url_filter = this.filter_json.contains_url;\n    if (contains_url_filter !== undefined) {\n        if (contains_url_filter !== contains_url) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n/**\n * Filters a list of events down to those which match this filter component\n * @param {MatrixEvent[]} events  Events to be checked againt the filter component\n * @return {MatrixEvent[]} events which matched the filter component\n */\nFilterComponent.prototype.filter = function(events) {\n    return events.filter(this.check, this);\n};\n\n/**\n * Returns the limit field for a given filter component, providing a default of\n * 10 if none is otherwise specified.  Cargo-culted from Synapse.\n * @return {Number} the limit for this filter component.\n */\nFilterComponent.prototype.limit = function() {\n    return this.filter_json.limit !== undefined ? this.filter_json.limit : 10;\n};\n\n/** The FilterComponent class */\nmodule.exports = FilterComponent;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * @module filter\n */\n\nconst FilterComponent = require(\"./filter-component\");\n\n/**\n * @param {Object} obj\n * @param {string} keyNesting\n * @param {*} val\n */\nfunction setProp(obj, keyNesting, val) {\n    const nestedKeys = keyNesting.split(\".\");\n    let currentObj = obj;\n    for (let i = 0; i < (nestedKeys.length - 1); i++) {\n        if (!currentObj[nestedKeys[i]]) {\n            currentObj[nestedKeys[i]] = {};\n        }\n        currentObj = currentObj[nestedKeys[i]];\n    }\n    currentObj[nestedKeys[nestedKeys.length - 1]] = val;\n}\n\n/**\n * Construct a new Filter.\n * @constructor\n * @param {string} userId The user ID for this filter.\n * @param {string=} filterId The filter ID if known.\n * @prop {string} userId The user ID of the filter\n * @prop {?string} filterId The filter ID\n */\nfunction Filter(userId, filterId) {\n    this.userId = userId;\n    this.filterId = filterId;\n    this.definition = {};\n}\n\n/**\n * Get the ID of this filter on your homeserver (if known)\n * @return {?Number} The filter ID\n */\nFilter.prototype.getFilterId = function() {\n    return this.filterId;\n};\n\n/**\n * Get the JSON body of the filter.\n * @return {Object} The filter definition\n */\nFilter.prototype.getDefinition = function() {\n    return this.definition;\n};\n\n/**\n * Set the JSON body of the filter\n * @param {Object} definition The filter definition\n */\nFilter.prototype.setDefinition = function(definition) {\n    this.definition = definition;\n\n    // This is all ported from synapse's FilterCollection()\n\n    // definitions look something like:\n    // {\n    //   \"room\": {\n    //     \"rooms\": [\"!abcde:example.com\"],\n    //     \"not_rooms\": [\"!123456:example.com\"],\n    //     \"state\": {\n    //       \"types\": [\"m.room.*\"],\n    //       \"not_rooms\": [\"!726s6s6q:example.com\"],\n    //     },\n    //     \"timeline\": {\n    //       \"limit\": 10,\n    //       \"types\": [\"m.room.message\"],\n    //       \"not_rooms\": [\"!726s6s6q:example.com\"],\n    //       \"not_senders\": [\"@spam:example.com\"]\n    //       \"contains_url\": true\n    //     },\n    //     \"ephemeral\": {\n    //       \"types\": [\"m.receipt\", \"m.typing\"],\n    //       \"not_rooms\": [\"!726s6s6q:example.com\"],\n    //       \"not_senders\": [\"@spam:example.com\"]\n    //     }\n    //   },\n    //   \"presence\": {\n    //     \"types\": [\"m.presence\"],\n    //     \"not_senders\": [\"@alice:example.com\"]\n    //   },\n    //   \"event_format\": \"client\",\n    //   \"event_fields\": [\"type\", \"content\", \"sender\"]\n    // }\n\n    const room_filter_json = definition.room;\n\n    // consider the top level rooms/not_rooms filter\n    const room_filter_fields = {};\n    if (room_filter_json) {\n        if (room_filter_json.rooms) {\n            room_filter_fields.rooms = room_filter_json.rooms;\n        }\n        if (room_filter_json.rooms) {\n            room_filter_fields.not_rooms = room_filter_json.not_rooms;\n        }\n\n        this._include_leave = room_filter_json.include_leave || false;\n    }\n\n    this._room_filter = new FilterComponent(room_filter_fields);\n    this._room_timeline_filter = new FilterComponent(\n        room_filter_json ? (room_filter_json.timeline || {}) : {},\n    );\n\n    // don't bother porting this from synapse yet:\n    // this._room_state_filter =\n    //     new FilterComponent(room_filter_json.state || {});\n    // this._room_ephemeral_filter =\n    //     new FilterComponent(room_filter_json.ephemeral || {});\n    // this._room_account_data_filter =\n    //     new FilterComponent(room_filter_json.account_data || {});\n    // this._presence_filter =\n    //     new FilterComponent(definition.presence || {});\n    // this._account_data_filter =\n    //     new FilterComponent(definition.account_data || {});\n};\n\n/**\n * Get the room.timeline filter component of the filter\n * @return {FilterComponent} room timeline filter component\n */\nFilter.prototype.getRoomTimelineFilterComponent = function() {\n    return this._room_timeline_filter;\n};\n\n/**\n * Filter the list of events based on whether they are allowed in a timeline\n * based on this filter\n * @param {MatrixEvent[]} events  the list of events being filtered\n * @return {MatrixEvent[]} the list of events which match the filter\n */\nFilter.prototype.filterRoomTimeline = function(events) {\n    return this._room_timeline_filter.filter(this._room_filter.filter(events));\n};\n\n/**\n * Set the max number of events to return for each room's timeline.\n * @param {Number} limit The max number of events to return for each room.\n */\nFilter.prototype.setTimelineLimit = function(limit) {\n    setProp(this.definition, \"room.timeline.limit\", limit);\n};\n\n/**\n * Control whether left rooms should be included in responses.\n * @param {boolean} includeLeave True to make rooms the user has left appear\n * in responses.\n */\nFilter.prototype.setIncludeLeaveRooms = function(includeLeave) {\n    setProp(this.definition, \"room.include_leave\", includeLeave);\n};\n\n/**\n * Create a filter from existing data.\n * @static\n * @param {string} userId\n * @param {string} filterId\n * @param {Object} jsonObj\n * @return {Filter}\n */\nFilter.fromJson = function(userId, filterId, jsonObj) {\n    const filter = new Filter(userId, filterId);\n    filter.setDefinition(jsonObj);\n    return filter;\n};\n\n/** The Filter class */\nmodule.exports = Filter;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * This is an internal module. See {@link MatrixHttpApi} for the public class.\n * @module http-api\n */\nimport Promise from 'bluebird';\nconst parseContentType = require('content-type').parse;\n\nconst utils = require(\"./utils\");\n\n// we use our own implementation of setTimeout, so that if we get suspended in\n// the middle of a /sync, we cancel the sync as soon as we awake, rather than\n// waiting for the delay to elapse.\nconst callbacks = require(\"./realtime-callbacks\");\n\n/*\nTODO:\n- CS: complete register function (doing stages)\n- Identity server: linkEmail, authEmail, bindEmail, lookup3pid\n*/\n\n/**\n * A constant representing the URI path for release 0 of the Client-Server HTTP API.\n */\nmodule.exports.PREFIX_R0 = \"/_matrix/client/r0\";\n\n/**\n * A constant representing the URI path for as-yet unspecified Client-Server HTTP APIs.\n */\nmodule.exports.PREFIX_UNSTABLE = \"/_matrix/client/unstable\";\n\n/**\n * URI path for the identity API\n */\nmodule.exports.PREFIX_IDENTITY_V1 = \"/_matrix/identity/api/v1\";\n\n/**\n * URI path for the media repo API\n */\nmodule.exports.PREFIX_MEDIA_R0 = \"/_matrix/media/r0\";\n\n/**\n * Construct a MatrixHttpApi.\n * @constructor\n * @param {EventEmitter} event_emitter The event emitter to use for emitting events\n * @param {Object} opts The options to use for this HTTP API.\n * @param {string} opts.baseUrl Required. The base client-server URL e.g.\n * 'http://localhost:8008'.\n * @param {Function} opts.request Required. The function to call for HTTP\n * requests. This function must look like function(opts, callback){ ... }.\n * @param {string} opts.prefix Required. The matrix client prefix to use, e.g.\n * '/_matrix/client/r0'. See PREFIX_R0 and PREFIX_UNSTABLE for constants.\n *\n * @param {boolean} opts.onlyData True to return only the 'data' component of the\n * response (e.g. the parsed HTTP body). If false, requests will return an\n * object with the properties <tt>code</tt>, <tt>headers</tt> and <tt>data</tt>.\n *\n * @param {string} opts.accessToken The access_token to send with requests. Can be\n * null to not send an access token.\n * @param {Object=} opts.extraParams Optional. Extra query parameters to send on\n * requests.\n * @param {Number=} opts.localTimeoutMs The default maximum amount of time to wait\n * before timing out the request. If not specified, there is no timeout.\n * @param {boolean} [opts.useAuthorizationHeader = false] Set to true to use\n * Authorization header instead of query param to send the access token to the server.\n */\nmodule.exports.MatrixHttpApi = function MatrixHttpApi(event_emitter, opts) {\n    utils.checkObjectHasKeys(opts, [\"baseUrl\", \"request\", \"prefix\"]);\n    opts.onlyData = opts.onlyData || false;\n    this.event_emitter = event_emitter;\n    this.opts = opts;\n    this.useAuthorizationHeader = Boolean(opts.useAuthorizationHeader);\n    this.uploads = [];\n};\n\nmodule.exports.MatrixHttpApi.prototype = {\n\n    /**\n     * Get the content repository url with query parameters.\n     * @return {Object} An object with a 'base', 'path' and 'params' for base URL,\n     *          path and query parameters respectively.\n     */\n    getContentUri: function() {\n        const params = {\n            access_token: this.opts.accessToken,\n        };\n        return {\n            base: this.opts.baseUrl,\n            path: \"/_matrix/media/v1/upload\",\n            params: params,\n        };\n    },\n\n    /**\n     * Upload content to the Home Server\n     *\n     * @param {object} file The object to upload. On a browser, something that\n     *   can be sent to XMLHttpRequest.send (typically a File).  Under node.js,\n     *   a Buffer, String or ReadStream.\n     *\n     * @param {object} opts  options object\n     *\n     * @param {string=} opts.name   Name to give the file on the server. Defaults\n     *   to <tt>file.name</tt>.\n     *\n     * @param {string=} opts.type   Content-type for the upload. Defaults to\n     *   <tt>file.type</tt>, or <tt>applicaton/octet-stream</tt>.\n     *\n     * @param {boolean=} opts.rawResponse Return the raw body, rather than\n     *   parsing the JSON. Defaults to false (except on node.js, where it\n     *   defaults to true for backwards compatibility).\n     *\n     * @param {boolean=} opts.onlyContentUri Just return the content URI,\n     *   rather than the whole body. Defaults to false (except on browsers,\n     *   where it defaults to true for backwards compatibility). Ignored if\n     *   opts.rawResponse is true.\n     *\n     * @param {Function=} opts.callback Deprecated. Optional. The callback to\n     *    invoke on success/failure. See the promise return values for more\n     *    information.\n     *\n     * @param {Function=} opts.progressHandler Optional. Called when a chunk of\n     *    data has been uploaded, with an object containing the fields `loaded`\n     *    (number of bytes transferred) and `total` (total size, if known).\n     *\n     * @return {module:client.Promise} Resolves to response object, as\n     *    determined by this.opts.onlyData, opts.rawResponse, and\n     *    opts.onlyContentUri.  Rejects with an error (usually a MatrixError).\n     */\n    uploadContent: function(file, opts) {\n        if (utils.isFunction(opts)) {\n            // opts used to be callback\n            opts = {\n                callback: opts,\n            };\n        } else if (opts === undefined) {\n            opts = {};\n        }\n\n        // if the file doesn't have a mime type, use a default since\n        // the HS errors if we don't supply one.\n        const contentType = opts.type || file.type || 'application/octet-stream';\n        const fileName = opts.name || file.name;\n\n        // we used to recommend setting file.stream to the thing to upload on\n        // nodejs.\n        const body = file.stream ? file.stream : file;\n\n        // backwards-compatibility hacks where we used to do different things\n        // between browser and node.\n        let rawResponse = opts.rawResponse;\n        if (rawResponse === undefined) {\n            if (global.XMLHttpRequest) {\n                rawResponse = false;\n            } else {\n                console.warn(\n                    \"Returning the raw JSON from uploadContent(). Future \" +\n                    \"versions of the js-sdk will change this default, to \" +\n                    \"return the parsed object. Set opts.rawResponse=false \" +\n                    \"to change this behaviour now.\",\n                );\n                rawResponse = true;\n            }\n        }\n\n        let onlyContentUri = opts.onlyContentUri;\n        if (!rawResponse && onlyContentUri === undefined) {\n            if (global.XMLHttpRequest) {\n                console.warn(\n                    \"Returning only the content-uri from uploadContent(). \" +\n                    \"Future versions of the js-sdk will change this \" +\n                    \"default, to return the whole response object. Set \" +\n                    \"opts.onlyContentUri=false to change this behaviour now.\",\n                );\n                onlyContentUri = true;\n            } else {\n                onlyContentUri = false;\n            }\n        }\n\n        // browser-request doesn't support File objects because it deep-copies\n        // the options using JSON.parse(JSON.stringify(options)). Instead of\n        // loading the whole file into memory as a string and letting\n        // browser-request base64 encode and then decode it again, we just\n        // use XMLHttpRequest directly.\n        // (browser-request doesn't support progress either, which is also kind\n        // of important here)\n\n        const upload = { loaded: 0, total: 0 };\n        let promise;\n\n        // XMLHttpRequest doesn't parse JSON for us. request normally does, but\n        // we're setting opts.json=false so that it doesn't JSON-encode the\n        // request, which also means it doesn't JSON-decode the response. Either\n        // way, we have to JSON-parse the response ourselves.\n        let bodyParser = null;\n        if (!rawResponse) {\n            bodyParser = function(rawBody) {\n                let body = JSON.parse(rawBody);\n                if (onlyContentUri) {\n                    body = body.content_uri;\n                    if (body === undefined) {\n                        throw Error('Bad response');\n                    }\n                }\n                return body;\n            };\n        }\n\n        if (global.XMLHttpRequest) {\n            const defer = Promise.defer();\n            const xhr = new global.XMLHttpRequest();\n            upload.xhr = xhr;\n            const cb = requestCallback(defer, opts.callback, this.opts.onlyData);\n\n            const timeout_fn = function() {\n                xhr.abort();\n                cb(new Error('Timeout'));\n            };\n\n            // set an initial timeout of 30s; we'll advance it each time we get\n            // a progress notification\n            xhr.timeout_timer = callbacks.setTimeout(timeout_fn, 30000);\n\n            xhr.onreadystatechange = function() {\n                switch (xhr.readyState) {\n                    case global.XMLHttpRequest.DONE:\n                        callbacks.clearTimeout(xhr.timeout_timer);\n                        var resp;\n                        try {\n                            if (!xhr.responseText) {\n                                throw new Error('No response body.');\n                            }\n                            resp = xhr.responseText;\n                            if (bodyParser) {\n                                resp = bodyParser(resp);\n                            }\n                        } catch (err) {\n                            err.http_status = xhr.status;\n                            cb(err);\n                            return;\n                        }\n                        cb(undefined, xhr, resp);\n                        break;\n                }\n            };\n            xhr.upload.addEventListener(\"progress\", function(ev) {\n                callbacks.clearTimeout(xhr.timeout_timer);\n                upload.loaded = ev.loaded;\n                upload.total = ev.total;\n                xhr.timeout_timer = callbacks.setTimeout(timeout_fn, 30000);\n                if (opts.progressHandler) {\n                    opts.progressHandler({\n                        loaded: ev.loaded,\n                        total: ev.total,\n                    });\n                }\n            });\n            let url = this.opts.baseUrl + \"/_matrix/media/v1/upload\";\n            url += \"?access_token=\" + encodeURIComponent(this.opts.accessToken);\n            url += \"&filename=\" + encodeURIComponent(fileName);\n\n            xhr.open(\"POST\", url);\n            xhr.setRequestHeader(\"Content-Type\", contentType);\n            xhr.send(body);\n            promise = defer.promise;\n\n            // dirty hack (as per _request) to allow the upload to be cancelled.\n            promise.abort = xhr.abort.bind(xhr);\n        } else {\n            const queryParams = {\n                filename: fileName,\n            };\n\n            promise = this.authedRequest(\n                opts.callback, \"POST\", \"/upload\", queryParams, body, {\n                    prefix: \"/_matrix/media/v1\",\n                    headers: {\"Content-Type\": contentType},\n                    json: false,\n                    bodyParser: bodyParser,\n                },\n            );\n        }\n\n        const self = this;\n\n        // remove the upload from the list on completion\n        const promise0 = promise.finally(function() {\n            for (let i = 0; i < self.uploads.length; ++i) {\n                if (self.uploads[i] === upload) {\n                    self.uploads.splice(i, 1);\n                    return;\n                }\n            }\n        });\n\n        // copy our dirty abort() method to the new promise\n        promise0.abort = promise.abort;\n\n        upload.promise = promise0;\n        this.uploads.push(upload);\n\n        return promise0;\n    },\n\n    cancelUpload: function(promise) {\n        if (promise.abort) {\n            promise.abort();\n            return true;\n        }\n        return false;\n    },\n\n    getCurrentUploads: function() {\n        return this.uploads;\n    },\n\n    idServerRequest: function(callback, method, path, params, prefix) {\n        const fullUri = this.opts.idBaseUrl + prefix + path;\n\n        if (callback !== undefined && !utils.isFunction(callback)) {\n            throw Error(\n                \"Expected callback to be a function but got \" + typeof callback,\n            );\n        }\n\n        const opts = {\n            uri: fullUri,\n            method: method,\n            withCredentials: false,\n            json: false,\n            _matrix_opts: this.opts,\n        };\n        if (method == 'GET') {\n            opts.qs = params;\n        } else {\n            opts.form = params;\n        }\n\n        const defer = Promise.defer();\n        this.opts.request(\n            opts,\n            requestCallback(defer, callback, this.opts.onlyData),\n        );\n        // ID server does not always take JSON, so we can't use requests' 'json'\n        // option as we do with the home server, but it does return JSON, so\n        // parse it manually\n        return defer.promise.then(function(response) {\n            return JSON.parse(response);\n        });\n    },\n\n    /**\n     * Perform an authorised request to the homeserver.\n     * @param {Function} callback Optional. The callback to invoke on\n     * success/failure. See the promise return values for more information.\n     * @param {string} method The HTTP method e.g. \"GET\".\n     * @param {string} path The HTTP path <b>after</b> the supplied prefix e.g.\n     * \"/createRoom\".\n     *\n     * @param {Object=} queryParams A dict of query params (these will NOT be\n     * urlencoded). If unspecified, there will be no query params.\n     *\n     * @param {Object} data The HTTP JSON body.\n     *\n     * @param {Object|Number=} opts additional options. If a number is specified,\n     * this is treated as `opts.localTimeoutMs`.\n     *\n     * @param {Number=} opts.localTimeoutMs The maximum amount of time to wait before\n     * timing out the request. If not specified, there is no timeout.\n     *\n     * @param {sting=} opts.prefix The full prefix to use e.g.\n     * \"/_matrix/client/v2_alpha\". If not specified, uses this.opts.prefix.\n     *\n     * @param {Object=} opts.headers map of additional request headers\n     *\n     * @return {module:client.Promise} Resolves to <code>{data: {Object},\n     * headers: {Object}, code: {Number}}</code>.\n     * If <code>onlyData</code> is set, this will resolve to the <code>data</code>\n     * object only.\n     * @return {module:http-api.MatrixError} Rejects with an error if a problem\n     * occurred. This includes network problems and Matrix-specific error JSON.\n     */\n    authedRequest: function(callback, method, path, queryParams, data, opts) {\n        if (!queryParams) {\n            queryParams = {};\n        }\n        if (this.useAuthorizationHeader) {\n            if (isFinite(opts)) {\n                // opts used to be localTimeoutMs\n                opts = {\n                    localTimeoutMs: opts,\n                };\n            }\n            if (!opts) {\n                opts = {};\n            }\n            if (!opts.headers) {\n                opts.headers = {};\n            }\n            if (!opts.headers.Authorization) {\n                opts.headers.Authorization = \"Bearer \" + this.opts.accessToken;\n            }\n            if (queryParams.access_token) {\n                delete queryParams.access_token;\n            }\n        } else {\n            if (!queryParams.access_token) {\n                queryParams.access_token = this.opts.accessToken;\n            }\n        }\n\n        const requestPromise = this.request(\n            callback, method, path, queryParams, data, opts,\n        );\n\n        const self = this;\n        requestPromise.catch(function(err) {\n            if (err.errcode == 'M_UNKNOWN_TOKEN') {\n                self.event_emitter.emit(\"Session.logged_out\");\n            }\n        });\n\n        // return the original promise, otherwise tests break due to it having to\n        // go around the event loop one more time to process the result of the request\n        return requestPromise;\n    },\n\n    /**\n     * Perform a request to the homeserver without any credentials.\n     * @param {Function} callback Optional. The callback to invoke on\n     * success/failure. See the promise return values for more information.\n     * @param {string} method The HTTP method e.g. \"GET\".\n     * @param {string} path The HTTP path <b>after</b> the supplied prefix e.g.\n     * \"/createRoom\".\n     *\n     * @param {Object=} queryParams A dict of query params (these will NOT be\n     * urlencoded). If unspecified, there will be no query params.\n     *\n     * @param {Object} data The HTTP JSON body.\n     *\n     * @param {Object=} opts additional options\n     *\n     * @param {Number=} opts.localTimeoutMs The maximum amount of time to wait before\n     * timing out the request. If not specified, there is no timeout.\n     *\n     * @param {sting=} opts.prefix The full prefix to use e.g.\n     * \"/_matrix/client/v2_alpha\". If not specified, uses this.opts.prefix.\n     *\n     * @param {Object=} opts.headers map of additional request headers\n     *\n     * @return {module:client.Promise} Resolves to <code>{data: {Object},\n     * headers: {Object}, code: {Number}}</code>.\n     * If <code>onlyData</code> is set, this will resolve to the <code>data</code>\n     * object only.\n     * @return {module:http-api.MatrixError} Rejects with an error if a problem\n     * occurred. This includes network problems and Matrix-specific error JSON.\n     */\n    request: function(callback, method, path, queryParams, data, opts) {\n        opts = opts || {};\n        const prefix = opts.prefix !== undefined ? opts.prefix : this.opts.prefix;\n        const fullUri = this.opts.baseUrl + prefix + path;\n\n        return this.requestOtherUrl(\n            callback, method, fullUri, queryParams, data, opts,\n        );\n    },\n\n    /**\n     * Perform an authorised request to the homeserver with a specific path\n     * prefix which overrides the default for this call only. Useful for hitting\n     * different Matrix Client-Server versions.\n     * @param {Function} callback Optional. The callback to invoke on\n     * success/failure. See the promise return values for more information.\n     * @param {string} method The HTTP method e.g. \"GET\".\n     * @param {string} path The HTTP path <b>after</b> the supplied prefix e.g.\n     * \"/createRoom\".\n     * @param {Object} queryParams A dict of query params (these will NOT be\n     * urlencoded).\n     * @param {Object} data The HTTP JSON body.\n     * @param {string} prefix The full prefix to use e.g.\n     * \"/_matrix/client/v2_alpha\".\n     * @param {Number=} localTimeoutMs The maximum amount of time to wait before\n     * timing out the request. If not specified, there is no timeout.\n     * @return {module:client.Promise} Resolves to <code>{data: {Object},\n     * headers: {Object}, code: {Number}}</code>.\n     * If <code>onlyData</code> is set, this will resolve to the <code>data</code>\n     * object only.\n     * @return {module:http-api.MatrixError} Rejects with an error if a problem\n     * occurred. This includes network problems and Matrix-specific error JSON.\n     *\n     * @deprecated prefer authedRequest with opts.prefix\n     */\n    authedRequestWithPrefix: function(callback, method, path, queryParams, data,\n                                      prefix, localTimeoutMs) {\n        return this.authedRequest(\n            callback, method, path, queryParams, data, {\n                localTimeoutMs: localTimeoutMs,\n                prefix: prefix,\n            },\n        );\n    },\n\n    /**\n     * Perform a request to the homeserver without any credentials but with a\n     * specific path prefix which overrides the default for this call only.\n     * Useful for hitting different Matrix Client-Server versions.\n     * @param {Function} callback Optional. The callback to invoke on\n     * success/failure. See the promise return values for more information.\n     * @param {string} method The HTTP method e.g. \"GET\".\n     * @param {string} path The HTTP path <b>after</b> the supplied prefix e.g.\n     * \"/createRoom\".\n     * @param {Object} queryParams A dict of query params (these will NOT be\n     * urlencoded).\n     * @param {Object} data The HTTP JSON body.\n     * @param {string} prefix The full prefix to use e.g.\n     * \"/_matrix/client/v2_alpha\".\n     * @param {Number=} localTimeoutMs The maximum amount of time to wait before\n     * timing out the request. If not specified, there is no timeout.\n     * @return {module:client.Promise} Resolves to <code>{data: {Object},\n     * headers: {Object}, code: {Number}}</code>.\n     * If <code>onlyData</code> is set, this will resolve to the <code>data</code>\n     * object only.\n     * @return {module:http-api.MatrixError} Rejects with an error if a problem\n     * occurred. This includes network problems and Matrix-specific error JSON.\n     *\n     * @deprecated prefer request with opts.prefix\n     */\n    requestWithPrefix: function(callback, method, path, queryParams, data, prefix,\n                                localTimeoutMs) {\n        return this.request(\n            callback, method, path, queryParams, data, {\n                localTimeoutMs: localTimeoutMs,\n                prefix: prefix,\n            },\n        );\n    },\n\n    /**\n     * Perform a request to an arbitrary URL.\n     * @param {Function} callback Optional. The callback to invoke on\n     * success/failure. See the promise return values for more information.\n     * @param {string} method The HTTP method e.g. \"GET\".\n     * @param {string} uri The HTTP URI\n     *\n     * @param {Object=} queryParams A dict of query params (these will NOT be\n     * urlencoded). If unspecified, there will be no query params.\n     *\n     * @param {Object} data The HTTP JSON body.\n     *\n     * @param {Object=} opts additional options\n     *\n     * @param {Number=} opts.localTimeoutMs The maximum amount of time to wait before\n     * timing out the request. If not specified, there is no timeout.\n     *\n     * @param {sting=} opts.prefix The full prefix to use e.g.\n     * \"/_matrix/client/v2_alpha\". If not specified, uses this.opts.prefix.\n     *\n     * @param {Object=} opts.headers map of additional request headers\n     *\n     * @return {module:client.Promise} Resolves to <code>{data: {Object},\n     * headers: {Object}, code: {Number}}</code>.\n     * If <code>onlyData</code> is set, this will resolve to the <code>data</code>\n     * object only.\n     * @return {module:http-api.MatrixError} Rejects with an error if a problem\n     * occurred. This includes network problems and Matrix-specific error JSON.\n     */\n    requestOtherUrl: function(callback, method, uri, queryParams, data,\n                              opts) {\n        if (opts === undefined || opts === null) {\n            opts = {};\n        } else if (isFinite(opts)) {\n            // opts used to be localTimeoutMs\n            opts = {\n                localTimeoutMs: opts,\n            };\n        }\n\n        return this._request(\n            callback, method, uri, queryParams, data, opts,\n        );\n    },\n\n    /**\n     * Form and return a homeserver request URL based on the given path\n     * params and prefix.\n     * @param {string} path The HTTP path <b>after</b> the supplied prefix e.g.\n     * \"/createRoom\".\n     * @param {Object} queryParams A dict of query params (these will NOT be\n     * urlencoded).\n     * @param {string} prefix The full prefix to use e.g.\n     * \"/_matrix/client/v2_alpha\".\n     * @return {string} URL\n     */\n    getUrl: function(path, queryParams, prefix) {\n        let queryString = \"\";\n        if (queryParams) {\n            queryString = \"?\" + utils.encodeParams(queryParams);\n        }\n        return this.opts.baseUrl + prefix + path + queryString;\n    },\n\n    /**\n     * @private\n     *\n     * @param {function} callback\n     * @param {string} method\n     * @param {string} uri\n     * @param {object} queryParams\n     * @param {object|string} data\n     * @param {object=} opts\n     *\n     * @param {boolean} [opts.json =true] Json-encode data before sending, and\n     *   decode response on receipt. (We will still json-decode error\n     *   responses, even if this is false.)\n     *\n     * @param {object=} opts.headers  extra request headers\n     *\n     * @param {number=} opts.localTimeoutMs client-side timeout for the\n     *    request. Default timeout if falsy.\n     *\n     * @param {function=} opts.bodyParser function to parse the body of the\n     *    response before passing it to the promise and callback.\n     *\n     * @return {module:client.Promise} a promise which resolves to either the\n     * response object (if this.opts.onlyData is truthy), or the parsed\n     * body. Rejects\n     */\n    _request: function(callback, method, uri, queryParams, data, opts) {\n        if (callback !== undefined && !utils.isFunction(callback)) {\n            throw Error(\n                \"Expected callback to be a function but got \" + typeof callback,\n            );\n        }\n        opts = opts || {};\n\n        const self = this;\n        if (this.opts.extraParams) {\n            for (const key in this.opts.extraParams) {\n                if (!this.opts.extraParams.hasOwnProperty(key)) {\n                    continue;\n                }\n                queryParams[key] = this.opts.extraParams[key];\n            }\n        }\n\n        const headers = utils.extend({}, opts.headers || {});\n        const json = opts.json === undefined ? true : opts.json;\n        let bodyParser = opts.bodyParser;\n\n        // we handle the json encoding/decoding here, because request and\n        // browser-request make a mess of it. Specifically, they attempt to\n        // json-decode plain-text error responses, which in turn means that the\n        // actual error gets swallowed by a SyntaxError.\n\n        if (json) {\n            if (data) {\n                data = JSON.stringify(data);\n                headers['content-type'] = 'application/json';\n            }\n\n            if (!headers['accept']) {\n                headers['accept'] = 'application/json';\n            }\n\n            if (bodyParser === undefined) {\n                bodyParser = function(rawBody) {\n                    return JSON.parse(rawBody);\n                };\n            }\n        }\n\n        const defer = Promise.defer();\n\n        let timeoutId;\n        let timedOut = false;\n        let req;\n        const localTimeoutMs = opts.localTimeoutMs || this.opts.localTimeoutMs;\n\n        const resetTimeout = () => {\n            if (localTimeoutMs) {\n                if (timeoutId) {\n                    callbacks.clearTimeout(timeoutId);\n                }\n                timeoutId = callbacks.setTimeout(function() {\n                    timedOut = true;\n                    if (req && req.abort) {\n                        req.abort();\n                    }\n                    defer.reject(new module.exports.MatrixError({\n                        error: \"Locally timed out waiting for a response\",\n                        errcode: \"ORG.MATRIX.JSSDK_TIMEOUT\",\n                        timeout: localTimeoutMs,\n                    }));\n                }, localTimeoutMs);\n            }\n        };\n        resetTimeout();\n\n        const reqPromise = defer.promise;\n\n        try {\n            req = this.opts.request(\n                {\n                    uri: uri,\n                    method: method,\n                    withCredentials: false,\n                    qs: queryParams,\n                    body: data,\n                    json: false,\n                    timeout: localTimeoutMs,\n                    headers: opts.headers || {},\n                    _matrix_opts: this.opts,\n                },\n                function(err, response, body) {\n                    if (localTimeoutMs) {\n                        callbacks.clearTimeout(timeoutId);\n                        if (timedOut) {\n                            return; // already rejected promise\n                        }\n                    }\n\n                    const handlerFn = requestCallback(\n                        defer, callback, self.opts.onlyData,\n                        bodyParser,\n                    );\n                    handlerFn(err, response, body);\n                },\n            );\n            if (req) {\n                // This will only work in a browser, where opts.request is the\n                // `browser-request` import. Currently `request` does not support progress\n                // updates - see https://github.com/request/request/pull/2346.\n                // `browser-request` returns an XHRHttpRequest which exposes `onprogress`\n                if ('onprogress' in req) {\n                    req.onprogress = (e) => {\n                        // Prevent the timeout from rejecting the deferred promise if progress is\n                        // seen with the request\n                        resetTimeout();\n                    };\n                }\n\n                // FIXME: This is EVIL, but I can't think of a better way to expose\n                // abort() operations on underlying HTTP requests :(\n                if (req.abort) reqPromise.abort = req.abort.bind(req);\n            }\n        } catch (ex) {\n            defer.reject(ex);\n            if (callback) {\n                callback(ex);\n            }\n        }\n        return reqPromise;\n    },\n};\n\n/*\n * Returns a callback that can be invoked by an HTTP request on completion,\n * that will either resolve or reject the given defer as well as invoke the\n * given userDefinedCallback (if any).\n *\n * HTTP errors are transformed into javascript errors and the deferred is rejected.\n *\n * If bodyParser is given, it is used to transform the body of the successful\n * responses before passing to the defer/callback.\n *\n * If onlyData is true, the defer/callback is invoked with the body of the\n * response, otherwise the result object (with `code` and `data` fields)\n *\n */\nconst requestCallback = function(\n    defer, userDefinedCallback, onlyData,\n    bodyParser,\n) {\n    userDefinedCallback = userDefinedCallback || function() {};\n\n    return function(err, response, body) {\n        if (!err) {\n            try {\n                if (response.statusCode >= 400) {\n                    err = parseErrorResponse(response, body);\n                } else if (bodyParser) {\n                    body = bodyParser(body);\n                }\n            } catch (e) {\n                err = new Error(`Error parsing server response: ${e}`);\n            }\n        }\n\n        if (err) {\n            defer.reject(err);\n            userDefinedCallback(err);\n        } else {\n            const res = {\n                code: response.statusCode,\n\n                // XXX: why do we bother with this? it doesn't work for\n                // XMLHttpRequest, so clearly we don't use it.\n                headers: response.headers,\n                data: body,\n            };\n            defer.resolve(onlyData ? body : res);\n            userDefinedCallback(null, onlyData ? body : res);\n        }\n    };\n};\n\n/**\n * Attempt to turn an HTTP error response into a Javascript Error.\n *\n * If it is a JSON response, we will parse it into a MatrixError. Otherwise\n * we return a generic Error.\n *\n * @param {XMLHttpRequest|http.IncomingMessage} response response object\n * @param {String} body raw body of the response\n * @returns {Error}\n */\nfunction parseErrorResponse(response, body) {\n    const httpStatus = response.statusCode;\n    const contentType = getResponseContentType(response);\n\n    let err;\n    if (contentType) {\n        if (contentType.type === 'application/json') {\n            err = new module.exports.MatrixError(JSON.parse(body));\n        } else if (contentType.type === 'text/plain') {\n            err = new Error(`Server returned ${httpStatus} error: ${body}`);\n        }\n    }\n\n    if (!err) {\n        err = new Error(`Server returned ${httpStatus} error`);\n    }\n    err.httpStatus = httpStatus;\n    return err;\n}\n\n\n/**\n * extract the Content-Type header from the response object, and\n * parse it to a `{type, parameters}` object.\n *\n * returns null if no content-type header could be found.\n *\n * @param {XMLHttpRequest|http.IncomingMessage} response response object\n * @returns {{type: String, parameters: Object}?} parsed content-type header, or null if not found\n */\nfunction getResponseContentType(response) {\n    let contentType;\n    if (response.getResponseHeader) {\n        // XMLHttpRequest provides getResponseHeader\n        contentType = response.getResponseHeader(\"Content-Type\");\n    } else if (response.headers) {\n        // request provides http.IncomingMessage which has a message.headers map\n        contentType = response.headers['content-type'] || null;\n    }\n\n    if (!contentType) {\n        return null;\n    }\n\n    try {\n        return parseContentType(contentType);\n    } catch(e) {\n        throw new Error(`Error parsing Content-Type '${contentType}': ${e}`);\n    }\n}\n\n/**\n * Construct a Matrix error. This is a JavaScript Error with additional\n * information specific to the standard Matrix error response.\n * @constructor\n * @param {Object} errorJson The Matrix error JSON returned from the homeserver.\n * @prop {string} errcode The Matrix 'errcode' value, e.g. \"M_FORBIDDEN\".\n * @prop {string} name Same as MatrixError.errcode but with a default unknown string.\n * @prop {string} message The Matrix 'error' value, e.g. \"Missing token.\"\n * @prop {Object} data The raw Matrix error JSON used to construct this object.\n * @prop {integer} httpStatus The numeric HTTP status code given\n */\nmodule.exports.MatrixError = function MatrixError(errorJson) {\n    errorJson = errorJson || {};\n    this.errcode = errorJson.errcode;\n    this.name = errorJson.errcode || \"Unknown error code\";\n    this.message = errorJson.error || \"Unknown message\";\n    this.data = errorJson;\n};\nmodule.exports.MatrixError.prototype = Object.create(Error.prototype);\n/** */\nmodule.exports.MatrixError.prototype.constructor = module.exports.MatrixError;\n","/*\nCopyright 2016 OpenMarket Ltd\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/** @module interactive-auth */\nimport Promise from 'bluebird';\nconst url = require(\"url\");\n\nconst utils = require(\"./utils\");\n\nconst EMAIL_STAGE_TYPE = \"m.login.email.identity\";\nconst MSISDN_STAGE_TYPE = \"m.login.msisdn\";\n\n/**\n * Abstracts the logic used to drive the interactive auth process.\n *\n * <p>Components implementing an interactive auth flow should instantiate one of\n * these, passing in the necessary callbacks to the constructor. They should\n * then call attemptAuth, which will return a promise which will resolve or\n * reject when the interactive-auth process completes.\n *\n * <p>Meanwhile, calls will be made to the startAuthStage and doRequest\n * callbacks, and information gathered from the user can be submitted with\n * submitAuthDict.\n *\n * @constructor\n * @alias module:interactive-auth\n *\n * @param {object} opts  options object\n *\n * @param {object} opts.matrixClient A matrix client to use for the auth process\n *\n * @param {object?} opts.authData error response from the last request. If\n *    null, a request will be made with no auth before starting.\n *\n * @param {function(object?, bool?): module:client.Promise} opts.doRequest\n *     called with the new auth dict to submit the request and a flag set\n *     to true if this request is a background request. Should return a\n *     promise which resolves to the successful response or rejects with a\n *     MatrixError.\n *\n * @param {function(string, object?)} opts.stateUpdated\n *     called when the status of the UI auth changes, ie. when the state of\n *     an auth stage changes of when the auth flow moves to a new stage.\n *     The arguments are: the login type (eg m.login.password); and an object\n *     which is either an error or an informational object specific to the\n *     login type. If the 'errcode' key is defined, the object is an error,\n *     and has keys:\n *         errcode: string, the textual error code, eg. M_UNKNOWN\n *         error: string, human readable string describing the error\n *\n *     The login type specific objects are as follows:\n *         m.login.email.identity:\n *          * emailSid: string, the sid of the active email auth session\n *\n * @param {object?} opts.inputs Inputs provided by the user and used by different\n *     stages of the auto process. The inputs provided will affect what flow is chosen.\n *\n * @param {string?} opts.inputs.emailAddress An email address. If supplied, a flow\n *     using email verification will be chosen.\n *\n * @param {string?} opts.inputs.phoneCountry An ISO two letter country code. Gives\n *     the country that opts.phoneNumber should be resolved relative to.\n *\n * @param {string?} opts.inputs.phoneNumber A phone number. If supplied, a flow\n *     using phone number validation will be chosen.\n *\n * @param {string?} opts.sessionId If resuming an existing interactive auth session,\n *     the sessionId of that session.\n *\n * @param {string?} opts.clientSecret If resuming an existing interactive auth session,\n *     the client secret for that session\n *\n * @param {string?} opts.emailSid If returning from having completed m.login.email.identity\n *     auth, the sid for the email verification session.\n *\n */\nfunction InteractiveAuth(opts) {\n    this._matrixClient = opts.matrixClient;\n    this._data = opts.authData || {};\n    this._requestCallback = opts.doRequest;\n    // startAuthStage included for backwards compat\n    this._stateUpdatedCallback = opts.stateUpdated || opts.startAuthStage;\n    this._completionDeferred = null;\n    this._inputs = opts.inputs || {};\n\n    if (opts.sessionId) this._data.session = opts.sessionId;\n    this._clientSecret = opts.clientSecret || this._matrixClient.generateClientSecret();\n    this._emailSid = opts.emailSid;\n    if (this._emailSid === undefined) this._emailSid = null;\n\n    this._currentStage = null;\n}\n\nInteractiveAuth.prototype = {\n    /**\n     * begin the authentication process.\n     *\n     * @return {module:client.Promise} which resolves to the response on success,\n     * or rejects with the error on failure. Rejects with NoAuthFlowFoundError if\n     *     no suitable authentication flow can be found\n     */\n    attemptAuth: function() {\n        this._completionDeferred = Promise.defer();\n\n        // wrap in a promise so that if _startNextAuthStage\n        // throws, it rejects the promise in a consistent way\n        return Promise.resolve().then(() => {\n            // if we have no flows, try a request (we'll have\n            // just a session ID in _data if resuming)\n            if (!this._data.flows) {\n                this._doRequest(this._data);\n            } else {\n                this._startNextAuthStage();\n            }\n            return this._completionDeferred.promise;\n        });\n    },\n\n    /**\n     * Poll to check if the auth session or current stage has been\n     * completed out-of-band. If so, the attemptAuth promise will\n     * be resolved.\n     */\n    poll: function() {\n        if (!this._data.session) return;\n\n        let authDict = {};\n        if (this._currentStage == EMAIL_STAGE_TYPE) {\n            // The email can be validated out-of-band, but we need to provide the\n            // creds so the HS can go & check it.\n            if (this._emailSid) {\n                const idServerParsedUrl = url.parse(\n                    this._matrixClient.getIdentityServerUrl(),\n                );\n                authDict = {\n                    type: EMAIL_STAGE_TYPE,\n                    threepid_creds: {\n                        sid: this._emailSid,\n                        client_secret: this._clientSecret,\n                        id_server: idServerParsedUrl.host,\n                    },\n                };\n            }\n        }\n\n        this.submitAuthDict(authDict, true);\n    },\n\n    /**\n     * get the auth session ID\n     *\n     * @return {string} session id\n     */\n    getSessionId: function() {\n        return this._data ? this._data.session : undefined;\n    },\n\n    /**\n     * get the client secret used for validation sessions\n     * with the ID server.\n     *\n     * @return {string} client secret\n     */\n    getClientSecret: function() {\n        return this._clientSecret;\n    },\n\n    /**\n     * get the server params for a given stage\n     *\n     * @param {string} loginType login type for the stage\n     * @return {object?} any parameters from the server for this stage\n     */\n    getStageParams: function(loginType) {\n        let params = {};\n        if (this._data && this._data.params) {\n            params = this._data.params;\n        }\n        return params[loginType];\n    },\n\n    /**\n     * submit a new auth dict and fire off the request. This will either\n     * make attemptAuth resolve/reject, or cause the startAuthStage callback\n     * to be called for a new stage.\n     *\n     * @param {object} authData new auth dict to send to the server. Should\n     *    include a `type` propterty denoting the login type, as well as any\n     *    other params for that stage.\n     * @param {bool} background If true, this request failing will not result\n     *    in the attemptAuth promise being rejected. This can be set to true\n     *    for requests that just poll to see if auth has been completed elsewhere.\n     */\n    submitAuthDict: function(authData, background) {\n        if (!this._completionDeferred) {\n            throw new Error(\"submitAuthDict() called before attemptAuth()\");\n        }\n\n        // use the sessionid from the last request.\n        const auth = {\n            session: this._data.session,\n        };\n        utils.extend(auth, authData);\n\n        this._doRequest(auth, background);\n    },\n\n    /**\n     * Gets the sid for the email validation session\n     * Specific to m.login.email.identity\n     *\n     * @returns {string} The sid of the email auth session\n     */\n    getEmailSid: function() {\n        return this._emailSid;\n    },\n\n    /**\n     * Sets the sid for the email validation session\n     * This must be set in order to successfully poll for completion\n     * of the email validation.\n     * Specific to m.login.email.identity\n     *\n     * @param {string} sid The sid for the email validation session\n     */\n    setEmailSid: function(sid) {\n        this._emailSid = sid;\n    },\n\n    /**\n     * Fire off a request, and either resolve the promise, or call\n     * startAuthStage.\n     *\n     * @private\n     * @param {object?} auth new auth dict, including session id\n     * @param {bool?} background If true, this request is a background poll, so it\n     *    failing will not result in the attemptAuth promise being rejected.\n     *    This can be set to true for requests that just poll to see if auth has\n     *    been completed elsewhere.\n     */\n    _doRequest: function(auth, background) {\n        const self = this;\n\n        // hackery to make sure that synchronous exceptions end up in the catch\n        // handler (without the additional event loop entailed by q.fcall or an\n        // extra Promise.resolve().then)\n        let prom;\n        try {\n            prom = this._requestCallback(auth, background);\n        } catch (e) {\n            prom = Promise.reject(e);\n        }\n\n        prom = prom.then(\n            function(result) {\n                console.log(\"result from request: \", result);\n                self._completionDeferred.resolve(result);\n            }, function(error) {\n                // sometimes UI auth errors don't come with flows\n                const errorFlows = error.data ? error.data.flows : null;\n                const haveFlows = Boolean(self._data.flows) || Boolean(errorFlows);\n                if (error.httpStatus !== 401 || !error.data || !haveFlows) {\n                    // doesn't look like an interactive-auth failure. fail the whole lot.\n                    throw error;\n                }\n                // if the error didn't come with flows, completed flows or session ID,\n                // copy over the ones we have. Synapse sometimes sends responses without\n                // any UI auth data (eg. when polling for email validation, if the email\n                // has not yet been validated). This appears to be a Synapse bug, which\n                // we workaround here.\n                if (!error.data.flows && !error.data.completed && !error.data.session) {\n                    error.data.flows = self._data.flows;\n                    error.data.completed = self._data.completed;\n                    error.data.session = self._data.session;\n                }\n                self._data = error.data;\n                self._startNextAuthStage();\n            },\n        );\n        if (!background) {\n            prom = prom.catch((e) => {\n                this._completionDeferred.reject(e);\n            });\n        } else {\n            // We ignore all failures here (even non-UI auth related ones)\n            // since we don't want to suddenly fail if the internet connection\n            // had a blip whilst we were polling\n            prom = prom.catch((error) => {\n                console.log(\"Ignoring error from UI auth: \" + error);\n            });\n        }\n        prom.done();\n    },\n\n    /**\n     * Pick the next stage and call the callback\n     *\n     * @private\n     * @throws {NoAuthFlowFoundError} If no suitable authentication flow can be found\n     */\n    _startNextAuthStage: function() {\n        const nextStage = this._chooseStage();\n        if (!nextStage) {\n            throw new Error(\"No incomplete flows from the server\");\n        }\n        this._currentStage = nextStage;\n\n        if (nextStage == 'm.login.dummy') {\n            this.submitAuthDict({\n                type: 'm.login.dummy',\n            });\n            return;\n        }\n\n        if (this._data.errcode || this._data.error) {\n            this._stateUpdatedCallback(nextStage, {\n                errcode: this._data.errcode || \"\",\n                error: this._data.error || \"\",\n            });\n            return;\n        }\n\n        const stageStatus = {};\n        if (nextStage == EMAIL_STAGE_TYPE) {\n            stageStatus.emailSid = this._emailSid;\n        }\n        this._stateUpdatedCallback(nextStage, stageStatus);\n    },\n\n    /**\n     * Pick the next auth stage\n     *\n     * @private\n     * @return {string?} login type\n     * @throws {NoAuthFlowFoundError} If no suitable authentication flow can be found\n     */\n    _chooseStage: function() {\n        const flow = this._chooseFlow();\n        console.log(\"Active flow => %s\", JSON.stringify(flow));\n        const nextStage = this._firstUncompletedStage(flow);\n        console.log(\"Next stage: %s\", nextStage);\n        return nextStage;\n    },\n\n    /**\n     * Pick one of the flows from the returned list\n     * If a flow using all of the inputs is found, it will\n     * be returned, otherwise, null will be returned.\n     *\n     * Only flows using all given inputs are chosen because it\n     * is likley to be surprising if the user provides a\n     * credential and it is not used. For example, for registration,\n     * this could result in the email not being used which would leave\n     * the account with no means to reset a password.\n     *\n     * @private\n     * @return {object} flow\n     * @throws {NoAuthFlowFoundError} If no suitable authentication flow can be found\n     */\n    _chooseFlow: function() {\n        const flows = this._data.flows || [];\n\n        // we've been given an email or we've already done an email part\n        const haveEmail = Boolean(this._inputs.emailAddress) || Boolean(this._emailSid);\n        const haveMsisdn = (\n            Boolean(this._inputs.phoneCountry) &&\n            Boolean(this._inputs.phoneNumber)\n        );\n\n        for (const flow of flows) {\n            let flowHasEmail = false;\n            let flowHasMsisdn = false;\n            for (const stage of flow.stages) {\n                if (stage === EMAIL_STAGE_TYPE) {\n                    flowHasEmail = true;\n                } else if (stage == MSISDN_STAGE_TYPE) {\n                    flowHasMsisdn = true;\n                }\n            }\n\n            if (flowHasEmail == haveEmail && flowHasMsisdn == haveMsisdn) {\n                return flow;\n            }\n        }\n        // Throw an error with a fairly generic description, but with more\n        // information such that the app can give a better one if so desired.\n        const err = new Error(\"No appropriate authentication flow found\");\n        err.name = 'NoAuthFlowFoundError';\n        err.required_stages = [];\n        if (haveEmail) err.required_stages.push(EMAIL_STAGE_TYPE);\n        if (haveMsisdn) err.required_stages.push(MSISDN_STAGE_TYPE);\n        err.available_flows = flows;\n        throw err;\n    },\n\n    /**\n     * Get the first uncompleted stage in the given flow\n     *\n     * @private\n     * @param {object} flow\n     * @return {string} login type\n     */\n    _firstUncompletedStage: function(flow) {\n        const completed = (this._data || {}).completed || [];\n        for (let i = 0; i < flow.stages.length; ++i) {\n            const stageType = flow.stages[i];\n            if (completed.indexOf(stageType) === -1) {\n                return stageType;\n            }\n        }\n    },\n};\n\n\n/** */\nmodule.exports = InteractiveAuth;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/** The {@link module:models/event.MatrixEvent|MatrixEvent} class. */\nmodule.exports.MatrixEvent = require(\"./models/event\").MatrixEvent;\n/** The {@link module:models/event.EventStatus|EventStatus} enum. */\nmodule.exports.EventStatus = require(\"./models/event\").EventStatus;\n/** The {@link module:store/memory.MatrixInMemoryStore|MatrixInMemoryStore} class. */\nmodule.exports.MatrixInMemoryStore = require(\"./store/memory\").MatrixInMemoryStore;\n/** The {@link module:store/indexeddb.IndexedDBStore|IndexedDBStore} class. */\nmodule.exports.IndexedDBStore = require(\"./store/indexeddb\").IndexedDBStore;\n/** The {@link module:store/indexeddb.IndexedDBStoreBackend|IndexedDBStoreBackend} class. */\nmodule.exports.IndexedDBStoreBackend = require(\"./store/indexeddb\").IndexedDBStoreBackend;\n/** The {@link module:sync-accumulator.SyncAccumulator|SyncAccumulator} class. */\nmodule.exports.SyncAccumulator = require(\"./sync-accumulator\");\n/** The {@link module:http-api.MatrixHttpApi|MatrixHttpApi} class. */\nmodule.exports.MatrixHttpApi = require(\"./http-api\").MatrixHttpApi;\n/** The {@link module:http-api.MatrixError|MatrixError} class. */\nmodule.exports.MatrixError = require(\"./http-api\").MatrixError;\n/** The {@link module:client.MatrixClient|MatrixClient} class. */\nmodule.exports.MatrixClient = require(\"./client\").MatrixClient;\n/** The {@link module:models/room|Room} class. */\nmodule.exports.Room = require(\"./models/room\");\n/** The {@link module:models/event-timeline~EventTimeline} class. */\nmodule.exports.EventTimeline = require(\"./models/event-timeline\");\n/** The {@link module:models/event-timeline-set~EventTimelineSet} class. */\nmodule.exports.EventTimelineSet = require(\"./models/event-timeline-set\");\n/** The {@link module:models/room-member|RoomMember} class. */\nmodule.exports.RoomMember = require(\"./models/room-member\");\n/** The {@link module:models/room-state~RoomState|RoomState} class. */\nmodule.exports.RoomState = require(\"./models/room-state\");\n/** The {@link module:models/user~User|User} class. */\nmodule.exports.User = require(\"./models/user\");\n/** The {@link module:scheduler~MatrixScheduler|MatrixScheduler} class. */\nmodule.exports.MatrixScheduler = require(\"./scheduler\");\n/** The {@link module:store/session/webstorage~WebStorageSessionStore|\n * WebStorageSessionStore} class. <strong>Work in progress; unstable.</strong> */\nmodule.exports.WebStorageSessionStore = require(\"./store/session/webstorage\");\n/** True if crypto libraries are being used on this client. */\nmodule.exports.CRYPTO_ENABLED = require(\"./client\").CRYPTO_ENABLED;\n/** {@link module:content-repo|ContentRepo} utility functions. */\nmodule.exports.ContentRepo = require(\"./content-repo\");\n/** The {@link module:filter~Filter|Filter} class. */\nmodule.exports.Filter = require(\"./filter\");\n/** The {@link module:timeline-window~TimelineWindow} class. */\nmodule.exports.TimelineWindow = require(\"./timeline-window\").TimelineWindow;\n/** The {@link module:interactive-auth} class. */\nmodule.exports.InteractiveAuth = require(\"./interactive-auth\");\n\n\nmodule.exports.MemoryCryptoStore =\n    require(\"./crypto/store/memory-crypto-store\").default;\nmodule.exports.IndexedDBCryptoStore =\n    require(\"./crypto/store/indexeddb-crypto-store\").default;\n\n/**\n * Create a new Matrix Call.\n * @function\n * @param {module:client.MatrixClient} client The MatrixClient instance to use.\n * @param {string} roomId The room the call is in.\n * @return {module:webrtc/call~MatrixCall} The Matrix call or null if the browser\n * does not support WebRTC.\n */\nmodule.exports.createNewMatrixCall = require(\"./webrtc/call\").createNewMatrixCall;\n\n\n/**\n * Set an audio input device to use for MatrixCalls\n * @function\n * @param {string=} deviceId the identifier for the device\n * undefined treated as unset\n */\nmodule.exports.setMatrixCallAudioInput = require('./webrtc/call').setAudioInput;\n/**\n * Set a video input device to use for MatrixCalls\n * @function\n * @param {string=} deviceId the identifier for the device\n * undefined treated as unset\n */\nmodule.exports.setMatrixCallVideoInput = require('./webrtc/call').setVideoInput;\n\n\n// expose the underlying request object so different environments can use\n// different request libs (e.g. request or browser-request)\nlet request;\n/**\n * The function used to perform HTTP requests. Only use this if you want to\n * use a different HTTP library, e.g. Angular's <code>$http</code>. This should\n * be set prior to calling {@link createClient}.\n * @param {requestFunction} r The request function to use.\n */\nmodule.exports.request = function(r) {\n    request = r;\n};\n\n/**\n * Return the currently-set request function.\n * @return {requestFunction} The current request function.\n */\nmodule.exports.getRequest = function() {\n    return request;\n};\n\n/**\n * Apply wrapping code around the request function. The wrapper function is\n * installed as the new request handler, and when invoked it is passed the\n * previous value, along with the options and callback arguments.\n * @param {requestWrapperFunction} wrapper The wrapping function.\n */\nmodule.exports.wrapRequest = function(wrapper) {\n    const origRequest = request;\n    request = function(options, callback) {\n        return wrapper(origRequest, options, callback);\n    };\n};\n\n\nlet cryptoStoreFactory = () => new module.exports.MemoryCryptoStore;\n\n/**\n * Configure a different factory to be used for creating crypto stores\n *\n * @param {Function} fac  a function which will return a new\n *    {@link module:crypto.store.base~CryptoStore}.\n */\nmodule.exports.setCryptoStoreFactory = function(fac) {\n    cryptoStoreFactory = fac;\n};\n\n/**\n * Construct a Matrix Client. Similar to {@link module:client~MatrixClient}\n * except that the 'request', 'store' and 'scheduler' dependencies are satisfied.\n * @param {(Object|string)} opts The configuration options for this client. If\n * this is a string, it is assumed to be the base URL. These configuration\n * options will be passed directly to {@link module:client~MatrixClient}.\n * @param {Object} opts.store If not set, defaults to\n * {@link module:store/memory.MatrixInMemoryStore}.\n * @param {Object} opts.scheduler If not set, defaults to\n * {@link module:scheduler~MatrixScheduler}.\n * @param {requestFunction} opts.request If not set, defaults to the function\n * supplied to {@link request} which defaults to the request module from NPM.\n *\n * @param {module:crypto.store.base~CryptoStore=} opts.cryptoStore\n *    crypto store implementation. Calls the factory supplied to\n *    {@link setCryptoStoreFactory} if unspecified; or if no factory has been\n *    specified, uses a default implementation (indexeddb in the browser,\n *    in-memory otherwise).\n *\n * @return {MatrixClient} A new matrix client.\n * @see {@link module:client~MatrixClient} for the full list of options for\n * <code>opts</code>.\n */\nmodule.exports.createClient = function(opts) {\n    if (typeof opts === \"string\") {\n        opts = {\n            \"baseUrl\": opts,\n        };\n    }\n    opts.request = opts.request || request;\n    opts.store = opts.store || new module.exports.MatrixInMemoryStore({\n      localStorage: global.localStorage,\n    });\n    opts.scheduler = opts.scheduler || new module.exports.MatrixScheduler();\n    opts.cryptoStore = opts.cryptoStore || cryptoStoreFactory();\n    return new module.exports.MatrixClient(opts);\n};\n\n/**\n * The request function interface for performing HTTP requests. This matches the\n * API for the {@link https://github.com/request/request#requestoptions-callback|\n * request NPM module}. The SDK will attempt to call this function in order to\n * perform an HTTP request.\n * @callback requestFunction\n * @param {Object} opts The options for this HTTP request.\n * @param {string} opts.uri The complete URI.\n * @param {string} opts.method The HTTP method.\n * @param {Object} opts.qs The query parameters to append to the URI.\n * @param {Object} opts.body The JSON-serializable object.\n * @param {boolean} opts.json True if this is a JSON request.\n * @param {Object} opts._matrix_opts The underlying options set for\n * {@link MatrixHttpApi}.\n * @param {requestCallback} callback The request callback.\n */\n\n/**\n * A wrapper for the request function interface.\n * @callback requestWrapperFunction\n * @param {requestFunction} origRequest The underlying request function being\n * wrapped\n * @param {Object} opts The options for this HTTP request, given in the same\n * form as {@link requestFunction}.\n * @param {requestCallback} callback The request callback.\n */\n\n /**\n  * The request callback interface for performing HTTP requests. This matches the\n  * API for the {@link https://github.com/request/request#requestoptions-callback|\n  * request NPM module}. The SDK will implement a callback which meets this\n  * interface in order to handle the HTTP response.\n  * @callback requestCallback\n  * @param {Error} err The error if one occurred, else falsey.\n  * @param {Object} response The HTTP response which consists of\n  * <code>{statusCode: {Number}, headers: {Object}}</code>\n  * @param {Object} body The parsed HTTP response body.\n  */\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/**\n * @module models/event-context\n */\n\n/**\n * Construct a new EventContext\n *\n * An eventcontext is used for circumstances such as search results, when we\n * have a particular event of interest, and a bunch of events before and after\n * it.\n *\n * It also stores pagination tokens for going backwards and forwards in the\n * timeline.\n *\n * @param {MatrixEvent} ourEvent  the event at the centre of this context\n *\n * @constructor\n */\nfunction EventContext(ourEvent) {\n    this._timeline = [ourEvent];\n    this._ourEventIndex = 0;\n    this._paginateTokens = {b: null, f: null};\n\n    // this is used by MatrixClient to keep track of active requests\n    this._paginateRequests = {b: null, f: null};\n}\n\n/**\n * Get the main event of interest\n *\n * This is a convenience function for getTimeline()[getOurEventIndex()].\n *\n * @return {MatrixEvent} The event at the centre of this context.\n */\nEventContext.prototype.getEvent = function() {\n    return this._timeline[this._ourEventIndex];\n};\n\n/**\n * Get the list of events in this context\n *\n * @return {Array} An array of MatrixEvents\n */\nEventContext.prototype.getTimeline = function() {\n    return this._timeline;\n};\n\n/**\n * Get the index in the timeline of our event\n *\n * @return {Number}\n */\nEventContext.prototype.getOurEventIndex = function() {\n    return this._ourEventIndex;\n};\n\n/**\n * Get a pagination token.\n *\n * @param {boolean} backwards   true to get the pagination token for going\n *                                  backwards in time\n * @return {string}\n */\nEventContext.prototype.getPaginateToken = function(backwards) {\n    return this._paginateTokens[backwards ? 'b' : 'f'];\n};\n\n/**\n * Set a pagination token.\n *\n * Generally this will be used only by the matrix js sdk.\n *\n * @param {string} token        pagination token\n * @param {boolean} backwards   true to set the pagination token for going\n *                                   backwards in time\n */\nEventContext.prototype.setPaginateToken = function(token, backwards) {\n    this._paginateTokens[backwards ? 'b' : 'f'] = token;\n};\n\n/**\n * Add more events to the timeline\n *\n * @param {Array} events      new events, in timeline order\n * @param {boolean} atStart   true to insert new events at the start\n */\nEventContext.prototype.addEvents = function(events, atStart) {\n    // TODO: should we share logic with Room.addEventsToTimeline?\n    // Should Room even use EventContext?\n\n    if (atStart) {\n        this._timeline = events.concat(this._timeline);\n        this._ourEventIndex += events.length;\n    } else {\n        this._timeline = this._timeline.concat(events);\n    }\n};\n\n/**\n * The EventContext class\n */\nmodule.exports = EventContext;\n","/*\nCopyright 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * @module models/event-timeline-set\n */\nconst EventEmitter = require(\"events\").EventEmitter;\nconst utils = require(\"../utils\");\nconst EventTimeline = require(\"./event-timeline\");\n\n// var DEBUG = false;\nconst DEBUG = true;\n\nlet debuglog;\nif (DEBUG) {\n    // using bind means that we get to keep useful line numbers in the console\n    debuglog = console.log.bind(console);\n} else {\n    debuglog = function() {};\n}\n\n/**\n * Construct a set of EventTimeline objects, typically on behalf of a given\n * room.  A room may have multiple EventTimelineSets for different levels\n * of filtering.  The global notification list is also an EventTimelineSet, but\n * lacks a room.\n *\n * <p>This is an ordered sequence of timelines, which may or may not\n * be continuous. Each timeline lists a series of events, as well as tracking\n * the room state at the start and the end of the timeline (if appropriate).\n * It also tracks forward and backward pagination tokens, as well as containing\n * links to the next timeline in the sequence.\n *\n * <p>There is one special timeline - the 'live' timeline, which represents the\n * timeline to which events are being added in real-time as they are received\n * from the /sync API. Note that you should not retain references to this\n * timeline - even if it is the current timeline right now, it may not remain\n * so if the server gives us a timeline gap in /sync.\n *\n * <p>In order that we can find events from their ids later, we also maintain a\n * map from event_id to timeline and index.\n *\n * @constructor\n * @param {?Room} room      the optional room for this timelineSet\n * @param {Object} opts     hash of options inherited from Room.\n *      opts.timelineSupport gives whether timeline support is enabled\n *      opts.filter is the filter object, if any, for this timelineSet.\n */\nfunction EventTimelineSet(room, opts) {\n    this.room = room;\n\n    this._timelineSupport = Boolean(opts.timelineSupport);\n    this._liveTimeline = new EventTimeline(this);\n\n    // just a list - *not* ordered.\n    this._timelines = [this._liveTimeline];\n    this._eventIdToTimeline = {};\n\n    this._filter = opts.filter || null;\n}\nutils.inherits(EventTimelineSet, EventEmitter);\n\n/**\n * Get the filter object this timeline set is filtered on, if any\n * @return {?Filter} the optional filter for this timelineSet\n */\nEventTimelineSet.prototype.getFilter = function() {\n    return this._filter;\n};\n\n/**\n * Set the filter object this timeline set is filtered on\n * (passed to the server when paginating via /messages).\n * @param {Filter} filter the filter for this timelineSet\n */\nEventTimelineSet.prototype.setFilter = function(filter) {\n    this._filter = filter;\n};\n\n/**\n * Get the list of pending sent events for this timelineSet's room, filtered\n * by the timelineSet's filter if appropriate.\n *\n * @return {module:models/event.MatrixEvent[]} A list of the sent events\n * waiting for remote echo.\n *\n * @throws If <code>opts.pendingEventOrdering</code> was not 'detached'\n */\nEventTimelineSet.prototype.getPendingEvents = function() {\n    if (!this.room) {\n        return [];\n    }\n\n    if (this._filter) {\n        return this._filter.filterRoomTimeline(this.room.getPendingEvents());\n    } else {\n        return this.room.getPendingEvents();\n    }\n};\n\n/**\n * Get the live timeline for this room.\n *\n * @return {module:models/event-timeline~EventTimeline} live timeline\n */\nEventTimelineSet.prototype.getLiveTimeline = function() {\n    return this._liveTimeline;\n};\n\n/**\n * Return the timeline (if any) this event is in.\n * @param {String} eventId the eventId being sought\n * @return {module:models/event-timeline~EventTimeline} timeline\n */\nEventTimelineSet.prototype.eventIdToTimeline = function(eventId) {\n    return this._eventIdToTimeline[eventId];\n};\n\n/**\n * Track a new event as if it were in the same timeline as an old event,\n * replacing it.\n * @param {String} oldEventId  event ID of the original event\n * @param {String} newEventId  event ID of the replacement event\n */\nEventTimelineSet.prototype.replaceEventId = function(oldEventId, newEventId) {\n    const existingTimeline = this._eventIdToTimeline[oldEventId];\n    if (existingTimeline) {\n        delete this._eventIdToTimeline[oldEventId];\n        this._eventIdToTimeline[newEventId] = existingTimeline;\n    }\n};\n\n/**\n * Reset the live timeline, and start a new one.\n *\n * <p>This is used when /sync returns a 'limited' timeline.\n *\n * @param {string=} backPaginationToken   token for back-paginating the new timeline\n * @param {string=} forwardPaginationToken token for forward-paginating the old live timeline,\n * if absent or null, all timelines are reset.\n *\n * @fires module:client~MatrixClient#event:\"Room.timelineReset\"\n */\nEventTimelineSet.prototype.resetLiveTimeline = function(\n    backPaginationToken, forwardPaginationToken,\n) {\n    // Each EventTimeline has RoomState objects tracking the state at the start\n    // and end of that timeline. The copies at the end of the live timeline are\n    // special because they will have listeners attached to monitor changes to\n    // the current room state, so we move this RoomState from the end of the\n    // current live timeline to the end of the new one and, if necessary,\n    // replace it with a newly created one. We also make a copy for the start\n    // of the new timeline.\n\n    // if timeline support is disabled, forget about the old timelines\n    const resetAllTimelines = !this._timelineSupport || !forwardPaginationToken;\n\n    let newTimeline;\n    if (resetAllTimelines) {\n        newTimeline = new EventTimeline(this);\n        this._timelines = [newTimeline];\n        this._eventIdToTimeline = {};\n    } else {\n        newTimeline = this.addTimeline();\n    }\n\n    const oldTimeline = this._liveTimeline;\n\n    // Collect the state events from the old timeline\n    const evMap = oldTimeline.getState(EventTimeline.FORWARDS).events;\n    const events = [];\n    for (const evtype in evMap) {\n        if (!evMap.hasOwnProperty(evtype)) {\n            continue;\n        }\n        for (const stateKey in evMap[evtype]) {\n            if (!evMap[evtype].hasOwnProperty(stateKey)) {\n                continue;\n            }\n            events.push(evMap[evtype][stateKey]);\n        }\n    }\n\n    // Use those events to initialise the state of the new live timeline\n    newTimeline.initialiseState(events);\n\n    const freshEndState = newTimeline._endState;\n    // Now clobber the end state of the new live timeline with that from the\n    // previous live timeline. It will be identical except that we'll keep\n    // using the same RoomMember objects for the 'live' set of members with any\n    // listeners still attached\n    newTimeline._endState = oldTimeline._endState;\n\n    // If we're not resetting all timelines, we need to fix up the old live timeline\n    if (!resetAllTimelines) {\n        // Firstly, we just stole the old timeline's end state, so it needs a new one.\n        // Just swap them around and give it the one we just generated for the\n        // new live timeline.\n        oldTimeline._endState = freshEndState;\n\n        // Now set the forward pagination token on the old live timeline\n        // so it can be forward-paginated.\n        oldTimeline.setPaginationToken(\n            forwardPaginationToken, EventTimeline.FORWARDS,\n        );\n    }\n\n    // make sure we set the pagination token before firing timelineReset,\n    // otherwise clients which start back-paginating will fail, and then get\n    // stuck without realising that they *can* back-paginate.\n    newTimeline.setPaginationToken(backPaginationToken, EventTimeline.BACKWARDS);\n\n    // Now we can swap the live timeline to the new one.\n    this._liveTimeline = newTimeline;\n    this.emit(\"Room.timelineReset\", this.room, this, resetAllTimelines);\n};\n\n/**\n * Get the timeline which contains the given event, if any\n *\n * @param {string} eventId  event ID to look for\n * @return {?module:models/event-timeline~EventTimeline} timeline containing\n * the given event, or null if unknown\n */\nEventTimelineSet.prototype.getTimelineForEvent = function(eventId) {\n    const res = this._eventIdToTimeline[eventId];\n    return (res === undefined) ? null : res;\n};\n\n/**\n * Get an event which is stored in our timelines\n *\n * @param {string} eventId  event ID to look for\n * @return {?module:models/event~MatrixEvent} the given event, or undefined if unknown\n */\nEventTimelineSet.prototype.findEventById = function(eventId) {\n    const tl = this.getTimelineForEvent(eventId);\n    if (!tl) {\n        return undefined;\n    }\n    return utils.findElement(tl.getEvents(), function(ev) {\n        return ev.getId() == eventId;\n    });\n};\n\n/**\n * Add a new timeline to this timeline list\n *\n * @return {module:models/event-timeline~EventTimeline} newly-created timeline\n */\nEventTimelineSet.prototype.addTimeline = function() {\n    if (!this._timelineSupport) {\n        throw new Error(\"timeline support is disabled. Set the 'timelineSupport'\" +\n                        \" parameter to true when creating MatrixClient to enable\" +\n                        \" it.\");\n    }\n\n    const timeline = new EventTimeline(this);\n    this._timelines.push(timeline);\n    return timeline;\n};\n\n\n/**\n * Add events to a timeline\n *\n * <p>Will fire \"Room.timeline\" for each event added.\n *\n * @param {MatrixEvent[]} events A list of events to add.\n *\n * @param {boolean} toStartOfTimeline   True to add these events to the start\n * (oldest) instead of the end (newest) of the timeline. If true, the oldest\n * event will be the <b>last</b> element of 'events'.\n *\n * @param {module:models/event-timeline~EventTimeline} timeline   timeline to\n *    add events to.\n *\n * @param {string=} paginationToken   token for the next batch of events\n *\n * @fires module:client~MatrixClient#event:\"Room.timeline\"\n *\n */\nEventTimelineSet.prototype.addEventsToTimeline = function(events, toStartOfTimeline,\n                                              timeline, paginationToken) {\n    if (!timeline) {\n        throw new Error(\n            \"'timeline' not specified for EventTimelineSet.addEventsToTimeline\",\n        );\n    }\n\n    if (!toStartOfTimeline && timeline == this._liveTimeline) {\n        throw new Error(\n            \"EventTimelineSet.addEventsToTimeline cannot be used for adding events to \" +\n            \"the live timeline - use Room.addLiveEvents instead\",\n        );\n    }\n\n    if (this._filter) {\n        events = this._filter.filterRoomTimeline(events);\n        if (!events.length) {\n            return;\n        }\n    }\n\n    const direction = toStartOfTimeline ? EventTimeline.BACKWARDS :\n        EventTimeline.FORWARDS;\n    const inverseDirection = toStartOfTimeline ? EventTimeline.FORWARDS :\n        EventTimeline.BACKWARDS;\n\n    // Adding events to timelines can be quite complicated. The following\n    // illustrates some of the corner-cases.\n    //\n    // Let's say we start by knowing about four timelines. timeline3 and\n    // timeline4 are neighbours:\n    //\n    //    timeline1    timeline2    timeline3    timeline4\n    //      [M]          [P]          [S] <------> [T]\n    //\n    // Now we paginate timeline1, and get the following events from the server:\n    // [M, N, P, R, S, T, U].\n    //\n    // 1. First, we ignore event M, since we already know about it.\n    //\n    // 2. Next, we append N to timeline 1.\n    //\n    // 3. Next, we don't add event P, since we already know about it,\n    //    but we do link together the timelines. We now have:\n    //\n    //    timeline1    timeline2    timeline3    timeline4\n    //      [M, N] <---> [P]          [S] <------> [T]\n    //\n    // 4. Now we add event R to timeline2:\n    //\n    //    timeline1    timeline2    timeline3    timeline4\n    //      [M, N] <---> [P, R]       [S] <------> [T]\n    //\n    //    Note that we have switched the timeline we are working on from\n    //    timeline1 to timeline2.\n    //\n    // 5. We ignore event S, but again join the timelines:\n    //\n    //    timeline1    timeline2    timeline3    timeline4\n    //      [M, N] <---> [P, R] <---> [S] <------> [T]\n    //\n    // 6. We ignore event T, and the timelines are already joined, so there\n    //    is nothing to do.\n    //\n    // 7. Finally, we add event U to timeline4:\n    //\n    //    timeline1    timeline2    timeline3    timeline4\n    //      [M, N] <---> [P, R] <---> [S] <------> [T, U]\n    //\n    // The important thing to note in the above is what happened when we\n    // already knew about a given event:\n    //\n    //   - if it was appropriate, we joined up the timelines (steps 3, 5).\n    //   - in any case, we started adding further events to the timeline which\n    //       contained the event we knew about (steps 3, 5, 6).\n    //\n    //\n    // So much for adding events to the timeline. But what do we want to do\n    // with the pagination token?\n    //\n    // In the case above, we will be given a pagination token which tells us how to\n    // get events beyond 'U' - in this case, it makes sense to store this\n    // against timeline4. But what if timeline4 already had 'U' and beyond? in\n    // that case, our best bet is to throw away the pagination token we were\n    // given and stick with whatever token timeline4 had previously. In short,\n    // we want to only store the pagination token if the last event we receive\n    // is one we didn't previously know about.\n    //\n    // We make an exception for this if it turns out that we already knew about\n    // *all* of the events, and we weren't able to join up any timelines. When\n    // that happens, it means our existing pagination token is faulty, since it\n    // is only telling us what we already know. Rather than repeatedly\n    // paginating with the same token, we might as well use the new pagination\n    // token in the hope that we eventually work our way out of the mess.\n\n    let didUpdate = false;\n    let lastEventWasNew = false;\n    for (let i = 0; i < events.length; i++) {\n        const event = events[i];\n        const eventId = event.getId();\n\n        const existingTimeline = this._eventIdToTimeline[eventId];\n\n        if (!existingTimeline) {\n            // we don't know about this event yet. Just add it to the timeline.\n            this.addEventToTimeline(event, timeline, toStartOfTimeline);\n            lastEventWasNew = true;\n            didUpdate = true;\n            continue;\n        }\n\n        lastEventWasNew = false;\n\n        if (existingTimeline == timeline) {\n            debuglog(\"Event \" + eventId + \" already in timeline \" + timeline);\n            continue;\n        }\n\n        const neighbour = timeline.getNeighbouringTimeline(direction);\n        if (neighbour) {\n            // this timeline already has a neighbour in the relevant direction;\n            // let's assume the timelines are already correctly linked up, and\n            // skip over to it.\n            //\n            // there's probably some edge-case here where we end up with an\n            // event which is in a timeline a way down the chain, and there is\n            // a break in the chain somewhere. But I can't really imagine how\n            // that would happen, so I'm going to ignore it for now.\n            //\n            if (existingTimeline == neighbour) {\n                debuglog(\"Event \" + eventId + \" in neighbouring timeline - \" +\n                            \"switching to \" + existingTimeline);\n            } else {\n                debuglog(\"Event \" + eventId + \" already in a different \" +\n                            \"timeline \" + existingTimeline);\n            }\n            timeline = existingTimeline;\n            continue;\n        }\n\n        // time to join the timelines.\n        console.info(\"Already have timeline for \" + eventId +\n                     \" - joining timeline \" + timeline + \" to \" +\n                     existingTimeline);\n        timeline.setNeighbouringTimeline(existingTimeline, direction);\n        existingTimeline.setNeighbouringTimeline(timeline, inverseDirection);\n        timeline = existingTimeline;\n        didUpdate = true;\n    }\n\n    // see above - if the last event was new to us, or if we didn't find any\n    // new information, we update the pagination token for whatever\n    // timeline we ended up on.\n    if (lastEventWasNew || !didUpdate) {\n        timeline.setPaginationToken(paginationToken, direction);\n    }\n};\n\n/**\n * Add an event to the end of this live timeline.\n *\n * @param {MatrixEvent} event Event to be added\n * @param {string?} duplicateStrategy 'ignore' or 'replace'\n */\nEventTimelineSet.prototype.addLiveEvent = function(event, duplicateStrategy) {\n    if (this._filter) {\n        const events = this._filter.filterRoomTimeline([event]);\n        if (!events.length) {\n            return;\n        }\n    }\n\n    const timeline = this._eventIdToTimeline[event.getId()];\n    if (timeline) {\n        if (duplicateStrategy === \"replace\") {\n            debuglog(\"EventTimelineSet.addLiveEvent: replacing duplicate event \" +\n                     event.getId());\n            const tlEvents = timeline.getEvents();\n            for (let j = 0; j < tlEvents.length; j++) {\n                if (tlEvents[j].getId() === event.getId()) {\n                    // still need to set the right metadata on this event\n                    EventTimeline.setEventMetadata(\n                        event,\n                        timeline.getState(EventTimeline.FORWARDS),\n                        false,\n                    );\n\n                    if (!tlEvents[j].encryptedType) {\n                        tlEvents[j] = event;\n                    }\n\n                    // XXX: we need to fire an event when this happens.\n                    break;\n                }\n            }\n        } else {\n            debuglog(\"EventTimelineSet.addLiveEvent: ignoring duplicate event \" +\n                     event.getId());\n        }\n        return;\n    }\n\n    this.addEventToTimeline(event, this._liveTimeline, false);\n};\n\n/**\n * Add event to the given timeline, and emit Room.timeline. Assumes\n * we have already checked we don't know about this event.\n *\n * Will fire \"Room.timeline\" for each event added.\n *\n * @param {MatrixEvent} event\n * @param {EventTimeline} timeline\n * @param {boolean} toStartOfTimeline\n *\n * @fires module:client~MatrixClient#event:\"Room.timeline\"\n */\nEventTimelineSet.prototype.addEventToTimeline = function(event, timeline,\n                                                         toStartOfTimeline) {\n    const eventId = event.getId();\n    timeline.addEvent(event, toStartOfTimeline);\n    this._eventIdToTimeline[eventId] = timeline;\n\n    const data = {\n        timeline: timeline,\n        liveEvent: !toStartOfTimeline && timeline == this._liveTimeline,\n    };\n    this.emit(\"Room.timeline\", event, this.room,\n              Boolean(toStartOfTimeline), false, data);\n};\n\n/**\n * Replaces event with ID oldEventId with one with newEventId, if oldEventId is\n * recognised.  Otherwise, add to the live timeline.  Used to handle remote echos.\n *\n * @param {MatrixEvent} localEvent     the new event to be added to the timeline\n * @param {String} oldEventId          the ID of the original event\n * @param {boolean} newEventId         the ID of the replacement event\n *\n * @fires module:client~MatrixClient#event:\"Room.timeline\"\n */\nEventTimelineSet.prototype.handleRemoteEcho = function(localEvent, oldEventId,\n                                                        newEventId) {\n    // XXX: why don't we infer newEventId from localEvent?\n    const existingTimeline = this._eventIdToTimeline[oldEventId];\n    if (existingTimeline) {\n        delete this._eventIdToTimeline[oldEventId];\n        this._eventIdToTimeline[newEventId] = existingTimeline;\n    } else {\n        if (this._filter) {\n            if (this._filter.filterRoomTimeline([localEvent]).length) {\n                this.addEventToTimeline(localEvent, this._liveTimeline, false);\n            }\n        } else {\n            this.addEventToTimeline(localEvent, this._liveTimeline, false);\n        }\n    }\n};\n\n/**\n * Removes a single event from this room.\n *\n * @param {String} eventId  The id of the event to remove\n *\n * @return {?MatrixEvent} the removed event, or null if the event was not found\n * in this room.\n */\nEventTimelineSet.prototype.removeEvent = function(eventId) {\n    const timeline = this._eventIdToTimeline[eventId];\n    if (!timeline) {\n        return null;\n    }\n\n    const removed = timeline.removeEvent(eventId);\n    if (removed) {\n        delete this._eventIdToTimeline[eventId];\n        const data = {\n            timeline: timeline,\n        };\n        this.emit(\"Room.timeline\", removed, this.room, undefined, true, data);\n    }\n    return removed;\n};\n\n/**\n * Determine where two events appear in the timeline relative to one another\n *\n * @param {string} eventId1   The id of the first event\n * @param {string} eventId2   The id of the second event\n\n * @return {?number} a number less than zero if eventId1 precedes eventId2, and\n *    greater than zero if eventId1 succeeds eventId2. zero if they are the\n *    same event; null if we can't tell (either because we don't know about one\n *    of the events, or because they are in separate timelines which don't join\n *    up).\n */\nEventTimelineSet.prototype.compareEventOrdering = function(eventId1, eventId2) {\n    if (eventId1 == eventId2) {\n        // optimise this case\n        return 0;\n    }\n\n    const timeline1 = this._eventIdToTimeline[eventId1];\n    const timeline2 = this._eventIdToTimeline[eventId2];\n\n    if (timeline1 === undefined) {\n        return null;\n    }\n    if (timeline2 === undefined) {\n        return null;\n    }\n\n    if (timeline1 === timeline2) {\n        // both events are in the same timeline - figure out their\n        // relative indices\n        let idx1, idx2;\n        const events = timeline1.getEvents();\n        for (let idx = 0; idx < events.length &&\n             (idx1 === undefined || idx2 === undefined); idx++) {\n            const evId = events[idx].getId();\n            if (evId == eventId1) {\n                idx1 = idx;\n            }\n            if (evId == eventId2) {\n                idx2 = idx;\n            }\n        }\n        return idx1 - idx2;\n    }\n\n    // the events are in different timelines. Iterate through the\n    // linkedlist to see which comes first.\n\n    // first work forwards from timeline1\n    let tl = timeline1;\n    while (tl) {\n        if (tl === timeline2) {\n            // timeline1 is before timeline2\n            return -1;\n        }\n        tl = tl.getNeighbouringTimeline(EventTimeline.FORWARDS);\n    }\n\n    // now try backwards from timeline1\n    tl = timeline1;\n    while (tl) {\n        if (tl === timeline2) {\n            // timeline2 is before timeline1\n            return 1;\n        }\n        tl = tl.getNeighbouringTimeline(EventTimeline.BACKWARDS);\n    }\n\n    // the timelines are not contiguous.\n    return null;\n};\n\n/**\n * The EventTimelineSet class.\n */\nmodule.exports = EventTimelineSet;\n\n/**\n * Fires whenever the timeline in a room is updated.\n * @event module:client~MatrixClient#\"Room.timeline\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {?Room} room The room, if any, whose timeline was updated.\n * @param {boolean} toStartOfTimeline True if this event was added to the start\n * @param {boolean} removed True if this event has just been removed from the timeline\n * (beginning; oldest) of the timeline e.g. due to pagination.\n *\n * @param {object} data  more data about the event\n *\n * @param {module:event-timeline.EventTimeline} data.timeline the timeline the\n * event was added to/removed from\n *\n * @param {boolean} data.liveEvent true if the event was a real-time event\n * added to the end of the live timeline\n *\n * @example\n * matrixClient.on(\"Room.timeline\",\n *                 function(event, room, toStartOfTimeline, removed, data) {\n *   if (!toStartOfTimeline && data.liveEvent) {\n *     var messageToAppend = room.timeline.[room.timeline.length - 1];\n *   }\n * });\n */\n\n/**\n * Fires whenever the live timeline in a room is reset.\n *\n * When we get a 'limited' sync (for example, after a network outage), we reset\n * the live timeline to be empty before adding the recent events to the new\n * timeline. This event is fired after the timeline is reset, and before the\n * new events are added.\n *\n * @event module:client~MatrixClient#\"Room.timelineReset\"\n * @param {Room} room The room whose live timeline was reset, if any\n * @param {EventTimelineSet} timelineSet timelineSet room whose live timeline was reset\n * @param {boolean} resetAllTimelines True if all timelines were reset.\n */\n","/*\nCopyright 2016, 2017 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/**\n * @module models/event-timeline\n */\n\nconst RoomState = require(\"./room-state\");\nconst utils = require(\"../utils\");\nconst MatrixEvent = require(\"./event\").MatrixEvent;\n\n/**\n * Construct a new EventTimeline\n *\n * <p>An EventTimeline represents a contiguous sequence of events in a room.\n *\n * <p>As well as keeping track of the events themselves, it stores the state of\n * the room at the beginning and end of the timeline, and pagination tokens for\n * going backwards and forwards in the timeline.\n *\n * <p>In order that clients can meaningfully maintain an index into a timeline,\n * the EventTimeline object tracks a 'baseIndex'. This starts at zero, but is\n * incremented when events are prepended to the timeline. The index of an event\n * relative to baseIndex therefore remains constant.\n *\n * <p>Once a timeline joins up with its neighbour, they are linked together into a\n * doubly-linked list.\n *\n * @param {EventTimelineSet} eventTimelineSet the set of timelines this is part of\n * @constructor\n */\nfunction EventTimeline(eventTimelineSet) {\n    this._eventTimelineSet = eventTimelineSet;\n    this._roomId = eventTimelineSet.room ? eventTimelineSet.room.roomId : null;\n    this._events = [];\n    this._baseIndex = 0;\n    this._startState = new RoomState(this._roomId);\n    this._startState.paginationToken = null;\n    this._endState = new RoomState(this._roomId);\n    this._endState.paginationToken = null;\n\n    this._prevTimeline = null;\n    this._nextTimeline = null;\n\n    // this is used by client.js\n    this._paginationRequests = {'b': null, 'f': null};\n\n    this._name = this._roomId + \":\" + new Date().toISOString();\n}\n\n/**\n * Symbolic constant for methods which take a 'direction' argument:\n * refers to the start of the timeline, or backwards in time.\n */\nEventTimeline.BACKWARDS = \"b\";\n\n/**\n * Symbolic constant for methods which take a 'direction' argument:\n * refers to the end of the timeline, or forwards in time.\n */\nEventTimeline.FORWARDS = \"f\";\n\n/**\n * Initialise the start and end state with the given events\n *\n * <p>This can only be called before any events are added.\n *\n * @param {MatrixEvent[]} stateEvents list of state events to initialise the\n * state with.\n * @throws {Error} if an attempt is made to call this after addEvent is called.\n */\nEventTimeline.prototype.initialiseState = function(stateEvents) {\n    if (this._events.length > 0) {\n        throw new Error(\"Cannot initialise state after events are added\");\n    }\n\n    // we deep-copy the events here, in case they get changed later - we don't\n    // want changes to the start state leaking through to the end state.\n    const oldStateEvents = utils.map(\n        utils.deepCopy(\n            stateEvents.map(function(mxEvent) {\n                return mxEvent.event;\n            }),\n        ),\n    function(ev) {\n        return new MatrixEvent(ev);\n    });\n\n    this._startState.setStateEvents(oldStateEvents);\n    this._endState.setStateEvents(stateEvents);\n};\n\n/**\n * Get the ID of the room for this timeline\n * @return {string} room ID\n */\nEventTimeline.prototype.getRoomId = function() {\n    return this._roomId;\n};\n\n/**\n * Get the filter for this timeline's timelineSet (if any)\n * @return {Filter} filter\n */\nEventTimeline.prototype.getFilter = function() {\n    return this._eventTimelineSet.getFilter();\n};\n\n/**\n * Get the timelineSet for this timeline\n * @return {EventTimelineSet} timelineSet\n */\nEventTimeline.prototype.getTimelineSet = function() {\n    return this._eventTimelineSet;\n};\n\n/**\n * Get the base index.\n *\n * <p>This is an index which is incremented when events are prepended to the\n * timeline. An individual event therefore stays at the same index in the array\n * relative to the base index (although note that a given event's index may\n * well be less than the base index, thus giving that event a negative relative\n * index).\n *\n * @return {number}\n */\nEventTimeline.prototype.getBaseIndex = function() {\n    return this._baseIndex;\n};\n\n/**\n * Get the list of events in this context\n *\n * @return {MatrixEvent[]} An array of MatrixEvents\n */\nEventTimeline.prototype.getEvents = function() {\n    return this._events;\n};\n\n/**\n * Get the room state at the start/end of the timeline\n *\n * @param {string} direction   EventTimeline.BACKWARDS to get the state at the\n *   start of the timeline; EventTimeline.FORWARDS to get the state at the end\n *   of the timeline.\n *\n * @return {RoomState} state at the start/end of the timeline\n */\nEventTimeline.prototype.getState = function(direction) {\n    if (direction == EventTimeline.BACKWARDS) {\n        return this._startState;\n    } else if (direction == EventTimeline.FORWARDS) {\n        return this._endState;\n    } else {\n        throw new Error(\"Invalid direction '\" + direction + \"'\");\n    }\n};\n\n/**\n * Get a pagination token\n *\n * @param {string} direction   EventTimeline.BACKWARDS to get the pagination\n *   token for going backwards in time; EventTimeline.FORWARDS to get the\n *   pagination token for going forwards in time.\n *\n * @return {?string} pagination token\n */\nEventTimeline.prototype.getPaginationToken = function(direction) {\n    return this.getState(direction).paginationToken;\n};\n\n/**\n * Set a pagination token\n *\n * @param {?string} token       pagination token\n *\n * @param {string} direction    EventTimeline.BACKWARDS to set the pagination\n *   token for going backwards in time; EventTimeline.FORWARDS to set the\n *   pagination token for going forwards in time.\n */\nEventTimeline.prototype.setPaginationToken = function(token, direction) {\n    this.getState(direction).paginationToken = token;\n};\n\n/**\n * Get the next timeline in the series\n *\n * @param {string} direction EventTimeline.BACKWARDS to get the previous\n *   timeline; EventTimeline.FORWARDS to get the next timeline.\n *\n * @return {?EventTimeline} previous or following timeline, if they have been\n * joined up.\n */\nEventTimeline.prototype.getNeighbouringTimeline = function(direction) {\n    if (direction == EventTimeline.BACKWARDS) {\n        return this._prevTimeline;\n    } else if (direction == EventTimeline.FORWARDS) {\n        return this._nextTimeline;\n    } else {\n        throw new Error(\"Invalid direction '\" + direction + \"'\");\n    }\n};\n\n/**\n * Set the next timeline in the series\n *\n * @param {EventTimeline} neighbour previous/following timeline\n *\n * @param {string} direction EventTimeline.BACKWARDS to set the previous\n *   timeline; EventTimeline.FORWARDS to set the next timeline.\n *\n * @throws {Error} if an attempt is made to set the neighbouring timeline when\n * it is already set.\n */\nEventTimeline.prototype.setNeighbouringTimeline = function(neighbour, direction) {\n    if (this.getNeighbouringTimeline(direction)) {\n        throw new Error(\"timeline already has a neighbouring timeline - \" +\n                        \"cannot reset neighbour\");\n    }\n\n    if (direction == EventTimeline.BACKWARDS) {\n        this._prevTimeline = neighbour;\n    } else if (direction == EventTimeline.FORWARDS) {\n        this._nextTimeline = neighbour;\n    } else {\n        throw new Error(\"Invalid direction '\" + direction + \"'\");\n    }\n\n    // make sure we don't try to paginate this timeline\n    this.setPaginationToken(null, direction);\n};\n\n/**\n * Add a new event to the timeline, and update the state\n *\n * @param {MatrixEvent} event   new event\n * @param {boolean}  atStart     true to insert new event at the start\n */\nEventTimeline.prototype.addEvent = function(event, atStart) {\n    const stateContext = atStart ? this._startState : this._endState;\n\n    // only call setEventMetadata on the unfiltered timelineSets\n    const timelineSet = this.getTimelineSet();\n    if (timelineSet.room &&\n        timelineSet.room.getUnfilteredTimelineSet() === timelineSet) {\n        EventTimeline.setEventMetadata(event, stateContext, atStart);\n\n        // modify state\n        if (event.isState()) {\n            stateContext.setStateEvents([event]);\n            // it is possible that the act of setting the state event means we\n            // can set more metadata (specifically sender/target props), so try\n            // it again if the prop wasn't previously set. It may also mean that\n            // the sender/target is updated (if the event set was a room member event)\n            // so we want to use the *updated* member (new avatar/name) instead.\n            //\n            // However, we do NOT want to do this on member events if we're going\n            // back in time, else we'll set the .sender value for BEFORE the given\n            // member event, whereas we want to set the .sender value for the ACTUAL\n            // member event itself.\n            if (!event.sender || (event.getType() === \"m.room.member\" && !atStart)) {\n                EventTimeline.setEventMetadata(event, stateContext, atStart);\n            }\n        }\n    }\n\n    let insertIndex;\n\n    if (atStart) {\n        insertIndex = 0;\n    } else {\n        insertIndex = this._events.length;\n    }\n\n    this._events.splice(insertIndex, 0, event); // insert element\n    if (atStart) {\n        this._baseIndex++;\n    }\n};\n\n/**\n * Static helper method to set sender and target properties\n *\n * @param {MatrixEvent} event   the event whose metadata is to be set\n * @param {RoomState} stateContext  the room state to be queried\n * @param {bool} toStartOfTimeline  if true the event's forwardLooking flag is set false\n */\nEventTimeline.setEventMetadata = function(event, stateContext, toStartOfTimeline) {\n    // set sender and target properties\n    event.sender = stateContext.getSentinelMember(\n        event.getSender(),\n    );\n    if (event.getType() === \"m.room.member\") {\n        event.target = stateContext.getSentinelMember(\n            event.getStateKey(),\n        );\n    }\n    if (event.isState()) {\n        // room state has no concept of 'old' or 'current', but we want the\n        // room state to regress back to previous values if toStartOfTimeline\n        // is set, which means inspecting prev_content if it exists. This\n        // is done by toggling the forwardLooking flag.\n        if (toStartOfTimeline) {\n            event.forwardLooking = false;\n        }\n    }\n};\n\n/**\n * Remove an event from the timeline\n *\n * @param {string} eventId  ID of event to be removed\n * @return {?MatrixEvent} removed event, or null if not found\n */\nEventTimeline.prototype.removeEvent = function(eventId) {\n    for (let i = this._events.length - 1; i >= 0; i--) {\n        const ev = this._events[i];\n        if (ev.getId() == eventId) {\n            this._events.splice(i, 1);\n            if (i < this._baseIndex) {\n                this._baseIndex--;\n            }\n            return ev;\n        }\n    }\n    return null;\n};\n\n/**\n * Return a string to identify this timeline, for debugging\n *\n * @return {string} name for this timeline\n */\nEventTimeline.prototype.toString = function() {\n    return this._name;\n};\n\n\n/**\n * The EventTimeline class\n */\nmodule.exports = EventTimeline;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/**\n * This is an internal module. See {@link MatrixEvent} and {@link RoomEvent} for\n * the public classes.\n * @module models/event\n */\n\nimport Promise from 'bluebird';\nimport {EventEmitter} from 'events';\nimport utils from '../utils.js';\n\n/**\n * Enum for event statuses.\n * @readonly\n * @enum {string}\n */\nmodule.exports.EventStatus = {\n    /** The event was not sent and will no longer be retried. */\n    NOT_SENT: \"not_sent\",\n\n    /** The message is being encrypted */\n    ENCRYPTING: \"encrypting\",\n\n    /** The event is in the process of being sent. */\n    SENDING: \"sending\",\n    /** The event is in a queue waiting to be sent. */\n    QUEUED: \"queued\",\n    /** The event has been sent to the server, but we have not yet received the\n     * echo. */\n    SENT: \"sent\",\n\n    /** The event was cancelled before it was successfully sent. */\n    CANCELLED: \"cancelled\",\n};\n\nconst interns = {};\n\n/**\n * Construct a Matrix Event object\n * @constructor\n *\n * @param {Object} event The raw event to be wrapped in this DAO\n *\n * @prop {Object} event The raw (possibly encrypted) event. <b>Do not access\n * this property</b> directly unless you absolutely have to. Prefer the getter\n * methods defined on this class. Using the getter methods shields your app\n * from changes to event JSON between Matrix versions.\n *\n * @prop {RoomMember} sender The room member who sent this event, or null e.g.\n * this is a presence event. This is only guaranteed to be set for events that\n * appear in a timeline, ie. do not guarantee that it will be set on state\n * events.\n * @prop {RoomMember} target The room member who is the target of this event, e.g.\n * the invitee, the person being banned, etc.\n * @prop {EventStatus} status The sending status of the event.\n * @prop {Error} error most recent error associated with sending the event, if any\n * @prop {boolean} forwardLooking True if this event is 'forward looking', meaning\n * that getDirectionalContent() will return event.content and not event.prev_content.\n * Default: true. <strong>This property is experimental and may change.</strong>\n */\nmodule.exports.MatrixEvent = function MatrixEvent(\n    event,\n) {\n    // intern the values of matrix events to force share strings and reduce the\n    // amount of needless string duplication. This can save moderate amounts of\n    // memory (~10% on a 350MB heap).\n    [\"state_key\", \"type\", \"sender\", \"room_id\"].forEach((prop) => {\n        if (!event[prop]) {\n            return;\n        }\n        if (!interns[event[prop]]) {\n            interns[event[prop]] = event[prop];\n        }\n        event[prop] = interns[event[prop]];\n    });\n\n    [\"membership\", \"avatar_url\", \"displayname\"].forEach((prop) => {\n        if (!event.content || !event.content[prop]) {\n            return;\n        }\n        if (!interns[event.content[prop]]) {\n            interns[event.content[prop]] = event.content[prop];\n        }\n        event.content[prop] = interns[event.content[prop]];\n    });\n\n    this.event = event || {};\n\n    this.sender = null;\n    this.target = null;\n    this.status = null;\n    this.error = null;\n    this.forwardLooking = true;\n    this._pushActions = null;\n    this._date = this.event.origin_server_ts ?\n        new Date(this.event.origin_server_ts) : null;\n\n    this._clearEvent = {};\n\n    /* curve25519 key which we believe belongs to the sender of the event. See\n     * getSenderKey()\n     */\n    this._senderCurve25519Key = null;\n\n    /* ed25519 key which the sender of this event (for olm) or the creator of\n     * the megolm session (for megolm) claims to own. See getClaimedEd25519Key()\n     */\n    this._claimedEd25519Key = null;\n\n    /* curve25519 keys of devices involved in telling us about the\n     * _senderCurve25519Key and _claimedEd25519Key.\n     * See getForwardingCurve25519KeyChain().\n     */\n    this._forwardingCurve25519KeyChain = [];\n\n    /* if we have a process decrypting this event, a Promise which resolves\n     * when it is finished. Normally null.\n     */\n    this._decryptionPromise = null;\n\n    /* flag to indicate if we should retry decrypting this event after the\n     * first attempt (eg, we have received new data which means that a second\n     * attempt may succeed)\n     */\n    this._retryDecryption = false;\n};\nutils.inherits(module.exports.MatrixEvent, EventEmitter);\n\n\nutils.extend(module.exports.MatrixEvent.prototype, {\n\n    /**\n     * Get the event_id for this event.\n     * @return {string} The event ID, e.g. <code>$143350589368169JsLZx:localhost\n     * </code>\n     */\n    getId: function() {\n        return this.event.event_id;\n    },\n\n    /**\n     * Get the user_id for this event.\n     * @return {string} The user ID, e.g. <code>@alice:matrix.org</code>\n     */\n    getSender: function() {\n        return this.event.sender || this.event.user_id; // v2 / v1\n    },\n\n    /**\n     * Get the (decrypted, if necessary) type of event.\n     *\n     * @return {string} The event type, e.g. <code>m.room.message</code>\n     */\n    getType: function() {\n        return this._clearEvent.type || this.event.type;\n    },\n\n    /**\n     * Get the (possibly encrypted) type of the event that will be sent to the\n     * homeserver.\n     *\n     * @return {string} The event type.\n     */\n    getWireType: function() {\n        return this.event.type;\n    },\n\n    /**\n     * Get the room_id for this event. This will return <code>undefined</code>\n     * for <code>m.presence</code> events.\n     * @return {string} The room ID, e.g. <code>!cURbafjkfsMDVwdRDQ:matrix.org\n     * </code>\n     */\n    getRoomId: function() {\n        return this.event.room_id;\n    },\n\n    /**\n     * Get the timestamp of this event.\n     * @return {Number} The event timestamp, e.g. <code>1433502692297</code>\n     */\n    getTs: function() {\n        return this.event.origin_server_ts;\n    },\n\n    /**\n     * Get the timestamp of this event, as a Date object.\n     * @return {Date} The event date, e.g. <code>new Date(1433502692297)</code>\n     */\n    getDate: function() {\n        return this._date;\n    },\n\n    /**\n     * Get the (decrypted, if necessary) event content JSON.\n     *\n     * @return {Object} The event content JSON, or an empty object.\n     */\n    getContent: function() {\n        return this._clearEvent.content || this.event.content || {};\n    },\n\n    /**\n     * Get the (possibly encrypted) event content JSON that will be sent to the\n     * homeserver.\n     *\n     * @return {Object} The event content JSON, or an empty object.\n     */\n    getWireContent: function() {\n        return this.event.content || {};\n    },\n\n    /**\n     * Get the previous event content JSON. This will only return something for\n     * state events which exist in the timeline.\n     * @return {Object} The previous event content JSON, or an empty object.\n     */\n    getPrevContent: function() {\n        // v2 then v1 then default\n        return this.getUnsigned().prev_content || this.event.prev_content || {};\n    },\n\n    /**\n     * Get either 'content' or 'prev_content' depending on if this event is\n     * 'forward-looking' or not. This can be modified via event.forwardLooking.\n     * In practice, this means we get the chronologically earlier content value\n     * for this event (this method should surely be called getEarlierContent)\n     * <strong>This method is experimental and may change.</strong>\n     * @return {Object} event.content if this event is forward-looking, else\n     * event.prev_content.\n     */\n    getDirectionalContent: function() {\n        return this.forwardLooking ? this.getContent() : this.getPrevContent();\n    },\n\n    /**\n     * Get the age of this event. This represents the age of the event when the\n     * event arrived at the device, and not the age of the event when this\n     * function was called.\n     * @return {Number} The age of this event in milliseconds.\n     */\n    getAge: function() {\n        return this.getUnsigned().age || this.event.age; // v2 / v1\n    },\n\n    /**\n     * Get the event state_key if it has one. This will return <code>undefined\n     * </code> for message events.\n     * @return {string} The event's <code>state_key</code>.\n     */\n    getStateKey: function() {\n        return this.event.state_key;\n    },\n\n    /**\n     * Check if this event is a state event.\n     * @return {boolean} True if this is a state event.\n     */\n    isState: function() {\n        return this.event.state_key !== undefined;\n    },\n\n    /**\n     * Replace the content of this event with encrypted versions.\n     * (This is used when sending an event; it should not be used by applications).\n     *\n     * @internal\n     *\n     * @param {string} crypto_type type of the encrypted event - typically\n     * <tt>\"m.room.encrypted\"</tt>\n     *\n     * @param {object} crypto_content raw 'content' for the encrypted event.\n     *\n     * @param {string} senderCurve25519Key curve25519 key to record for the\n     *   sender of this event.\n     *   See {@link module:models/event.MatrixEvent#getSenderKey}.\n     *\n     * @param {string} claimedEd25519Key claimed ed25519 key to record for the\n     *   sender if this event.\n     *   See {@link module:models/event.MatrixEvent#getClaimedEd25519Key}\n     */\n    makeEncrypted: function(\n        crypto_type, crypto_content, senderCurve25519Key, claimedEd25519Key,\n    ) {\n        // keep the plain-text data for 'view source'\n        this._clearEvent = {\n            type: this.event.type,\n            content: this.event.content,\n        };\n        this.event.type = crypto_type;\n        this.event.content = crypto_content;\n        this._senderCurve25519Key = senderCurve25519Key;\n        this._claimedEd25519Key = claimedEd25519Key;\n    },\n\n    /**\n     * Check if this event is currently being decrypted.\n     *\n     * @return {boolean} True if this event is currently being decrypted, else false.\n     */\n    isBeingDecrypted: function() {\n        return this._decryptionPromise != null;\n    },\n\n    /**\n     * Check if this event is an encrypted event which we failed to decrypt\n     *\n     * (This implies that we might retry decryption at some point in the future)\n     *\n     * @return {boolean} True if this event is an encrypted event which we\n     *     couldn't decrypt.\n     */\n    isDecryptionFailure: function() {\n        return this._clearEvent && this._clearEvent.content &&\n            this._clearEvent.content.msgtype === \"m.bad.encrypted\";\n    },\n\n    /**\n     * Start the process of trying to decrypt this event.\n     *\n     * (This is used within the SDK: it isn't intended for use by applications)\n     *\n     * @internal\n     *\n     * @param {module:crypto} crypto crypto module\n     *\n     * @returns {Promise} promise which resolves (to undefined) when the decryption\n     * attempt is completed.\n     */\n    attemptDecryption: async function(crypto) {\n        // start with a couple of sanity checks.\n        if (!this.isEncrypted()) {\n            throw new Error(\"Attempt to decrypt event which isn't encrypted\");\n        }\n\n        if (\n            this._clearEvent && this._clearEvent.content &&\n                this._clearEvent.content.msgtype !== \"m.bad.encrypted\"\n        ) {\n            // we may want to just ignore this? let's start with rejecting it.\n            throw new Error(\n                \"Attempt to decrypt event which has already been encrypted\",\n            );\n        }\n\n        // if we already have a decryption attempt in progress, then it may\n        // fail because it was using outdated info. We now have reason to\n        // succeed where it failed before, but we don't want to have multiple\n        // attempts going at the same time, so just set a flag that says we have\n        // new info.\n        //\n        if (this._decryptionPromise) {\n            console.log(\n                `Event ${this.getId()} already being decrypted; queueing a retry`,\n            );\n            this._retryDecryption = true;\n            return this._decryptionPromise;\n        }\n\n        this._decryptionPromise = this._decryptionLoop(crypto);\n        return this._decryptionPromise;\n    },\n\n    _decryptionLoop: async function(crypto) {\n        // make sure that this method never runs completely synchronously.\n        // (doing so would mean that we would clear _decryptionPromise *before*\n        // it is set in attemptDecryption - and hence end up with a stuck\n        // `_decryptionPromise`).\n        await Promise.resolve();\n\n        while (true) {\n            this._retryDecryption = false;\n\n            let res;\n            try {\n                if (!crypto) {\n                    res = this._badEncryptedMessage(\"Encryption not enabled\");\n                } else {\n                    res = await crypto.decryptEvent(this);\n                }\n            } catch (e) {\n                if (e.name !== \"DecryptionError\") {\n                    // not a decryption error: log the whole exception as an error\n                    // (and don't bother with a retry)\n                    console.error(\n                        `Error decrypting event (id=${this.getId()}): ${e.stack || e}`,\n                    );\n                    this._decryptionPromise = null;\n                    this._retryDecryption = false;\n                    return;\n                }\n\n                // see if we have a retry queued.\n                //\n                // NB: make sure to keep this check in the same tick of the\n                //   event loop as `_decryptionPromise = null` below - otherwise we\n                //   risk a race:\n                //\n                //   * A: we check _retryDecryption here and see that it is\n                //        false\n                //   * B: we get a second call to attemptDecryption, which sees\n                //        that _decryptionPromise is set so sets\n                //        _retryDecryption\n                //   * A: we continue below, clear _decryptionPromise, and\n                //        never do the retry.\n                //\n                if (this._retryDecryption) {\n                    // decryption error, but we have a retry queued.\n                    console.log(\n                        `Got error decrypting event (id=${this.getId()}: ` +\n                        `${e.message}), but retrying`,\n                    );\n                    continue;\n                }\n\n                // decryption error, no retries queued. Warn about the error and\n                // set it to m.bad.encrypted.\n                console.warn(\n                    `Error decrypting event (id=${this.getId()}): ${e}`,\n                );\n\n                res = this._badEncryptedMessage(e.message);\n            }\n\n            // at this point, we've either successfully decrypted the event, or have given up\n            // (and set res to a 'badEncryptedMessage'). Either way, we can now set the\n            // cleartext of the event and raise Event.decrypted.\n            //\n            // make sure we clear '_decryptionPromise' before sending the 'Event.decrypted' event,\n            // otherwise the app will be confused to see `isBeingDecrypted` still set when\n            // there isn't an `Event.decrypted` on the way.\n            //\n            // see also notes on _retryDecryption above.\n            //\n            this._decryptionPromise = null;\n            this._retryDecryption = false;\n            this._setClearData(res);\n            return;\n        }\n    },\n\n    _badEncryptedMessage: function(reason) {\n        return {\n            clearEvent: {\n                type: \"m.room.message\",\n                content: {\n                    msgtype: \"m.bad.encrypted\",\n                    body: \"** Unable to decrypt: \" + reason + \" **\",\n                },\n            },\n        };\n    },\n\n    /**\n     * Update the cleartext data on this event.\n     *\n     * (This is used after decrypting an event; it should not be used by applications).\n     *\n     * @internal\n     *\n     * @fires module:models/event.MatrixEvent#\"Event.decrypted\"\n     *\n     * @param {module:crypto~EventDecryptionResult} decryptionResult\n     *     the decryption result, including the plaintext and some key info\n     */\n    _setClearData: function(decryptionResult) {\n        this._clearEvent = decryptionResult.clearEvent;\n        this._senderCurve25519Key =\n            decryptionResult.senderCurve25519Key || null;\n        this._claimedEd25519Key =\n            decryptionResult.claimedEd25519Key || null;\n        this._forwardingCurve25519KeyChain =\n            decryptionResult.forwardingCurve25519KeyChain || [];\n        this.emit(\"Event.decrypted\", this);\n    },\n\n    /**\n     * Check if the event is encrypted.\n     * @return {boolean} True if this event is encrypted.\n     */\n    isEncrypted: function() {\n        return this.event.type === \"m.room.encrypted\";\n    },\n\n    /**\n     * The curve25519 key for the device that we think sent this event\n     *\n     * For an Olm-encrypted event, this is inferred directly from the DH\n     * exchange at the start of the session: the curve25519 key is involved in\n     * the DH exchange, so only a device which holds the private part of that\n     * key can establish such a session.\n     *\n     * For a megolm-encrypted event, it is inferred from the Olm message which\n     * established the megolm session\n     *\n     * @return {string}\n     */\n    getSenderKey: function() {\n        return this._senderCurve25519Key;\n    },\n\n    /**\n     * The additional keys the sender of this encrypted event claims to possess.\n     *\n     * Just a wrapper for #getClaimedEd25519Key (q.v.)\n     *\n     * @return {Object<string, string>}\n     */\n    getKeysClaimed: function() {\n        return {\n            ed25519: this._claimedEd25519Key,\n        };\n    },\n\n    /**\n     * Get the ed25519 the sender of this event claims to own.\n     *\n     * For Olm messages, this claim is encoded directly in the plaintext of the\n     * event itself. For megolm messages, it is implied by the m.room_key event\n     * which established the megolm session.\n     *\n     * Until we download the device list of the sender, it's just a claim: the\n     * device list gives a proof that the owner of the curve25519 key used for\n     * this event (and returned by #getSenderKey) also owns the ed25519 key by\n     * signing the public curve25519 key with the ed25519 key.\n     *\n     * In general, applications should not use this method directly, but should\n     * instead use MatrixClient.getEventSenderDeviceInfo.\n     *\n     * @return {string}\n     */\n    getClaimedEd25519Key: function() {\n        return this._claimedEd25519Key;\n    },\n\n    /**\n     * Get the curve25519 keys of the devices which were involved in telling us\n     * about the claimedEd25519Key and sender curve25519 key.\n     *\n     * Normally this will be empty, but in the case of a forwarded megolm\n     * session, the sender keys are sent to us by another device (the forwarding\n     * device), which we need to trust to do this. In that case, the result will\n     * be a list consisting of one entry.\n     *\n     * If the device that sent us the key (A) got it from another device which\n     * it wasn't prepared to vouch for (B), the result will be [A, B]. And so on.\n     *\n     * @return {string[]} base64-encoded curve25519 keys, from oldest to newest.\n     */\n    getForwardingCurve25519KeyChain: function() {\n        return this._forwardingCurve25519KeyChain;\n    },\n\n    getUnsigned: function() {\n        return this.event.unsigned || {};\n    },\n\n    /**\n     * Update the content of an event in the same way it would be by the server\n     * if it were redacted before it was sent to us\n     *\n     * @param {module:models/event.MatrixEvent} redaction_event\n     *     event causing the redaction\n     */\n    makeRedacted: function(redaction_event) {\n        // quick sanity-check\n        if (!redaction_event.event) {\n            throw new Error(\"invalid redaction_event in makeRedacted\");\n        }\n\n        // we attempt to replicate what we would see from the server if\n        // the event had been redacted before we saw it.\n        //\n        // The server removes (most of) the content of the event, and adds a\n        // \"redacted_because\" key to the unsigned section containing the\n        // redacted event.\n        if (!this.event.unsigned) {\n            this.event.unsigned = {};\n        }\n        this.event.unsigned.redacted_because = redaction_event.event;\n\n        let key;\n        for (key in this.event) {\n            if (!this.event.hasOwnProperty(key)) {\n                continue;\n            }\n            if (!_REDACT_KEEP_KEY_MAP[key]) {\n                delete this.event[key];\n            }\n        }\n\n        const keeps = _REDACT_KEEP_CONTENT_MAP[this.getType()] || {};\n        const content = this.getContent();\n        for (key in content) {\n            if (!content.hasOwnProperty(key)) {\n                continue;\n            }\n            if (!keeps[key]) {\n                delete content[key];\n            }\n        }\n    },\n\n    /**\n     * Check if this event has been redacted\n     *\n     * @return {boolean} True if this event has been redacted\n     */\n    isRedacted: function() {\n        return Boolean(this.getUnsigned().redacted_because);\n    },\n\n    /**\n     * Get the push actions, if known, for this event\n     *\n     * @return {?Object} push actions\n     */\n     getPushActions: function() {\n        return this._pushActions;\n     },\n\n    /**\n     * Set the push actions for this event.\n     *\n     * @param {Object} pushActions push actions\n     */\n     setPushActions: function(pushActions) {\n        this._pushActions = pushActions;\n     },\n\n     /**\n      * Replace the `event` property and recalculate any properties based on it.\n      * @param {Object} event the object to assign to the `event` property\n      */\n     handleRemoteEcho: function(event) {\n        this.event = event;\n        // successfully sent.\n        this.status = null;\n        this._date = new Date(this.event.origin_server_ts);\n     },\n});\n\n\n/* _REDACT_KEEP_KEY_MAP gives the keys we keep when an event is redacted\n *\n * This is specified here:\n *  http://matrix.org/speculator/spec/HEAD/client_server/unstable.html#redactions\n *\n * Also:\n *  - We keep 'unsigned' since that is created by the local server\n *  - We keep user_id for backwards-compat with v1\n */\nconst _REDACT_KEEP_KEY_MAP = [\n    'event_id', 'type', 'room_id', 'user_id', 'sender', 'state_key', 'prev_state',\n    'content', 'unsigned', 'origin_server_ts',\n].reduce(function(ret, val) {\n    ret[val] = 1; return ret;\n}, {});\n\n// a map from event type to the .content keys we keep when an event is redacted\nconst _REDACT_KEEP_CONTENT_MAP = {\n    'm.room.member': {'membership': 1},\n    'm.room.create': {'creator': 1},\n    'm.room.join_rules': {'join_rule': 1},\n    'm.room.power_levels': {'ban': 1, 'events': 1, 'events_default': 1,\n                            'kick': 1, 'redact': 1, 'state_default': 1,\n                            'users': 1, 'users_default': 1,\n                           },\n    'm.room.aliases': {'aliases': 1},\n};\n\n\n/**\n * Fires when an event is decrypted\n *\n * @event module:models/event.MatrixEvent#\"Event.decrypted\"\n *\n * @param {module:models/event.MatrixEvent} event\n *    The matrix event which has been decrypted\n */\n","/*\nCopyright 2017 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * @module models/group\n */\nconst EventEmitter = require(\"events\").EventEmitter;\n\nconst utils = require(\"../utils\");\n\n/**\n * Construct a new Group.\n *\n * @param {string} groupId The ID of this group.\n *\n * @prop {string} groupId The ID of this group.\n * @prop {string} name The human-readable display name for this group.\n * @prop {string} avatarUrl The mxc URL for this group's avatar.\n * @prop {string} myMembership The logged in user's membership of this group\n * @prop {Object} inviter Infomation about the user who invited the logged in user\n *       to the group, if myMembership is 'invite'.\n * @prop {string} inviter.userId The user ID of the inviter\n */\nfunction Group(groupId) {\n    this.groupId = groupId;\n    this.name = null;\n    this.avatarUrl = null;\n    this.myMembership = null;\n    this.inviter = null;\n}\nutils.inherits(Group, EventEmitter);\n\nGroup.prototype.setProfile = function(name, avatarUrl) {\n    if (this.name === name && this.avatarUrl === avatarUrl) return;\n\n    this.name = name || this.groupId;\n    this.avatarUrl = avatarUrl;\n\n    this.emit(\"Group.profile\", this);\n};\n\nGroup.prototype.setMyMembership = function(membership) {\n    if (this.myMembership === membership) return;\n\n    this.myMembership = membership;\n\n    this.emit(\"Group.myMembership\", this);\n};\n\n/**\n * Sets the 'inviter' property. This does not emit an event (the inviter\n * will only change when the user is revited / reinvited to a room),\n * so set this before setting myMembership.\n * @param {Object} inviter Infomation about who invited us to the room\n */\nGroup.prototype.setInviter = function(inviter) {\n    this.inviter = inviter;\n};\n\nmodule.exports = Group;\n\n/**\n * Fires whenever a group's profile information is updated.\n * This means the 'name' and 'avatarUrl' properties.\n * @event module:client~MatrixClient#\"Group.profile\"\n * @param {Group} group The group whose profile was updated.\n * @example\n * matrixClient.on(\"Group.profile\", function(group){\n *   var name = group.name;\n * });\n */\n\n/**\n * Fires whenever the logged in user's membership status of\n * the group is updated.\n * @event module:client~MatrixClient#\"Group.myMembership\"\n * @param {Group} group The group in which the user's membership changed\n * @example\n * matrixClient.on(\"Group.myMembership\", function(group){\n *   var myMembership = group.myMembership;\n * });\n */\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * @module models/room-member\n */\nconst EventEmitter = require(\"events\").EventEmitter;\nconst ContentRepo = require(\"../content-repo\");\n\nconst utils = require(\"../utils\");\n\n/**\n * Construct a new room member.\n *\n * @constructor\n * @alias module:models/room-member\n *\n * @param {string} roomId The room ID of the member.\n * @param {string} userId The user ID of the member.\n * @prop {string} roomId The room ID for this member.\n * @prop {string} userId The user ID of this member.\n * @prop {boolean} typing True if the room member is currently typing.\n * @prop {string} name The human-readable name for this room member. This will be\n * disambiguated with a suffix of \" (@user_id:matrix.org)\" if another member shares the\n * same displayname.\n * @prop {string} rawDisplayName The ambiguous displayname of this room member.\n * @prop {Number} powerLevel The power level for this room member.\n * @prop {Number} powerLevelNorm The normalised power level (0-100) for this\n * room member.\n * @prop {User} user The User object for this room member, if one exists.\n * @prop {string} membership The membership state for this room member e.g. 'join'.\n * @prop {Object} events The events describing this RoomMember.\n * @prop {MatrixEvent} events.member The m.room.member event for this RoomMember.\n */\nfunction RoomMember(roomId, userId) {\n    this.roomId = roomId;\n    this.userId = userId;\n    this.typing = false;\n    this.name = userId;\n    this.rawDisplayName = userId;\n    this.powerLevel = 0;\n    this.powerLevelNorm = 0;\n    this.user = null;\n    this.membership = null;\n    this.events = {\n        member: null,\n    };\n    this._updateModifiedTime();\n}\nutils.inherits(RoomMember, EventEmitter);\n\n/**\n * Update this room member's membership event. May fire \"RoomMember.name\" if\n * this event updates this member's name.\n * @param {MatrixEvent} event The <code>m.room.member</code> event\n * @param {RoomState} roomState Optional. The room state to take into account\n * when calculating (e.g. for disambiguating users with the same name).\n * @fires module:client~MatrixClient#event:\"RoomMember.name\"\n * @fires module:client~MatrixClient#event:\"RoomMember.membership\"\n */\nRoomMember.prototype.setMembershipEvent = function(event, roomState) {\n    if (event.getType() !== \"m.room.member\") {\n        return;\n    }\n    this.events.member = event;\n\n    const oldMembership = this.membership;\n    this.membership = event.getDirectionalContent().membership;\n\n    const oldName = this.name;\n    this.name = calculateDisplayName(this, event, roomState);\n    this.rawDisplayName = event.getDirectionalContent().displayname || this.userId;\n    if (oldMembership !== this.membership) {\n        this._updateModifiedTime();\n        this.emit(\"RoomMember.membership\", event, this, oldMembership);\n    }\n    if (oldName !== this.name) {\n        this._updateModifiedTime();\n        this.emit(\"RoomMember.name\", event, this, oldName);\n    }\n};\n\n/**\n * Update this room member's power level event. May fire\n * \"RoomMember.powerLevel\" if this event updates this member's power levels.\n * @param {MatrixEvent} powerLevelEvent The <code>m.room.power_levels</code>\n * event\n * @fires module:client~MatrixClient#event:\"RoomMember.powerLevel\"\n */\nRoomMember.prototype.setPowerLevelEvent = function(powerLevelEvent) {\n    if (powerLevelEvent.getType() !== \"m.room.power_levels\") {\n        return;\n    }\n    let maxLevel = powerLevelEvent.getContent().users_default || 0;\n    utils.forEach(utils.values(powerLevelEvent.getContent().users), function(lvl) {\n        maxLevel = Math.max(maxLevel, lvl);\n    });\n    const oldPowerLevel = this.powerLevel;\n    const oldPowerLevelNorm = this.powerLevelNorm;\n\n    if (powerLevelEvent.getContent().users[this.userId] !== undefined) {\n        this.powerLevel = powerLevelEvent.getContent().users[this.userId];\n    } else if (powerLevelEvent.getContent().users_default !== undefined) {\n        this.powerLevel = powerLevelEvent.getContent().users_default;\n    } else {\n        this.powerLevel = 0;\n    }\n    this.powerLevelNorm = 0;\n    if (maxLevel > 0) {\n        this.powerLevelNorm = (this.powerLevel * 100) / maxLevel;\n    }\n\n    // emit for changes in powerLevelNorm as well (since the app will need to\n    // redraw everyone's level if the max has changed)\n    if (oldPowerLevel !== this.powerLevel || oldPowerLevelNorm !== this.powerLevelNorm) {\n        this._updateModifiedTime();\n        this.emit(\"RoomMember.powerLevel\", powerLevelEvent, this);\n    }\n};\n\n/**\n * Update this room member's typing event. May fire \"RoomMember.typing\" if\n * this event changes this member's typing state.\n * @param {MatrixEvent} event The typing event\n * @fires module:client~MatrixClient#event:\"RoomMember.typing\"\n */\nRoomMember.prototype.setTypingEvent = function(event) {\n    if (event.getType() !== \"m.typing\") {\n        return;\n    }\n    const oldTyping = this.typing;\n    this.typing = false;\n    const typingList = event.getContent().user_ids;\n    if (!utils.isArray(typingList)) {\n        // malformed event :/ bail early. TODO: whine?\n        return;\n    }\n    if (typingList.indexOf(this.userId) !== -1) {\n        this.typing = true;\n    }\n    if (oldTyping !== this.typing) {\n        this._updateModifiedTime();\n        this.emit(\"RoomMember.typing\", event, this);\n    }\n};\n\n/**\n * Update the last modified time to the current time.\n */\nRoomMember.prototype._updateModifiedTime = function() {\n    this._modified = Date.now();\n};\n\n/**\n * Get the timestamp when this RoomMember was last updated. This timestamp is\n * updated when properties on this RoomMember are updated.\n * It is updated <i>before</i> firing events.\n * @return {number} The timestamp\n */\nRoomMember.prototype.getLastModifiedTime = function() {\n    return this._modified;\n};\n\n/**\n * Get the avatar URL for a room member.\n * @param {string} baseUrl The base homeserver URL See\n * {@link module:client~MatrixClient#getHomeserverUrl}.\n * @param {Number} width The desired width of the thumbnail.\n * @param {Number} height The desired height of the thumbnail.\n * @param {string} resizeMethod The thumbnail resize method to use, either\n * \"crop\" or \"scale\".\n * @param {Boolean} allowDefault (optional) Passing false causes this method to\n * return null if the user has no avatar image. Otherwise, a default image URL\n * will be returned. Default: true.\n * @param {Boolean} allowDirectLinks (optional) If true, the avatar URL will be\n * returned even if it is a direct hyperlink rather than a matrix content URL.\n * If false, any non-matrix content URLs will be ignored. Setting this option to\n * true will expose URLs that, if fetched, will leak information about the user\n * to anyone who they share a room with.\n * @return {?string} the avatar URL or null.\n */\nRoomMember.prototype.getAvatarUrl =\n        function(baseUrl, width, height, resizeMethod, allowDefault, allowDirectLinks) {\n    if (allowDefault === undefined) {\n        allowDefault = true;\n    }\n    if (!this.events.member && !allowDefault) {\n        return null;\n    }\n    const rawUrl = this.events.member ? this.events.member.getContent().avatar_url : null;\n    const httpUrl = ContentRepo.getHttpUriForMxc(\n        baseUrl, rawUrl, width, height, resizeMethod, allowDirectLinks,\n    );\n    if (httpUrl) {\n        return httpUrl;\n    } else if (allowDefault) {\n        return ContentRepo.getIdenticonUri(\n            baseUrl, this.userId, width, height,\n        );\n    }\n    return null;\n};\n\nfunction calculateDisplayName(member, event, roomState) {\n    const displayName = event.getDirectionalContent().displayname;\n    const selfUserId = member.userId;\n\n    if (!displayName) {\n        return selfUserId;\n    }\n\n    if (!roomState) {\n        return displayName;\n    }\n\n    const userIds = roomState.getUserIdsWithDisplayName(displayName);\n    const otherUsers = userIds.filter(function(u) {\n        return u !== selfUserId;\n    });\n    if (otherUsers.length > 0) {\n        return displayName + \" (\" + selfUserId + \")\";\n    }\n    return displayName;\n}\n\n/**\n * The RoomMember class.\n */\nmodule.exports = RoomMember;\n\n/**\n * Fires whenever any room member's name changes.\n * @event module:client~MatrixClient#\"RoomMember.name\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {RoomMember} member The member whose RoomMember.name changed.\n * @param {string?} oldName The previous name. Null if the member didn't have a\n *    name previously.\n * @example\n * matrixClient.on(\"RoomMember.name\", function(event, member){\n *   var newName = member.name;\n * });\n */\n\n/**\n * Fires whenever any room member's membership state changes.\n * @event module:client~MatrixClient#\"RoomMember.membership\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {RoomMember} member The member whose RoomMember.membership changed.\n * @param {string?} oldMembership The previous membership state. Null if it's a\n *    new member.\n * @example\n * matrixClient.on(\"RoomMember.membership\", function(event, member, oldMembership){\n *   var newState = member.membership;\n * });\n */\n\n/**\n * Fires whenever any room member's typing state changes.\n * @event module:client~MatrixClient#\"RoomMember.typing\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {RoomMember} member The member whose RoomMember.typing changed.\n * @example\n * matrixClient.on(\"RoomMember.typing\", function(event, member){\n *   var isTyping = member.typing;\n * });\n */\n\n/**\n * Fires whenever any room member's power level changes.\n * @event module:client~MatrixClient#\"RoomMember.powerLevel\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {RoomMember} member The member whose RoomMember.powerLevel changed.\n * @example\n * matrixClient.on(\"RoomMember.powerLevel\", function(event, member){\n *   var newPowerLevel = member.powerLevel;\n *   var newNormPowerLevel = member.powerLevelNorm;\n * });\n */\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * @module models/room-state\n */\nconst EventEmitter = require(\"events\").EventEmitter;\n\nconst utils = require(\"../utils\");\nconst RoomMember = require(\"./room-member\");\n\n/**\n * Construct room state.\n * @constructor\n * @param {?string} roomId Optional. The ID of the room which has this state.\n * If none is specified it just tracks paginationTokens, useful for notifTimelineSet\n * @prop {Object.<string, RoomMember>} members The room member dictionary, keyed\n * on the user's ID.\n * @prop {Object.<string, Object.<string, MatrixEvent>>} events The state\n * events dictionary, keyed on the event type and then the state_key value.\n * @prop {string} paginationToken The pagination token for this state.\n */\nfunction RoomState(roomId) {\n    this.roomId = roomId;\n    this.members = {\n        // userId: RoomMember\n    };\n    this.events = {\n        // eventType: { stateKey: MatrixEvent }\n    };\n    this.paginationToken = null;\n\n    this._sentinels = {\n        // userId: RoomMember\n    };\n    this._updateModifiedTime();\n    this._displayNameToUserIds = {};\n    this._userIdsToDisplayNames = {};\n    this._tokenToInvite = {}; // 3pid invite state_key to m.room.member invite\n}\nutils.inherits(RoomState, EventEmitter);\n\n/**\n * Get all RoomMembers in this room.\n * @return {Array<RoomMember>} A list of RoomMembers.\n */\nRoomState.prototype.getMembers = function() {\n    return utils.values(this.members);\n};\n\n/**\n * Get a room member by their user ID.\n * @param {string} userId The room member's user ID.\n * @return {RoomMember} The member or null if they do not exist.\n */\nRoomState.prototype.getMember = function(userId) {\n    return this.members[userId] || null;\n};\n\n/**\n * Get a room member whose properties will not change with this room state. You\n * typically want this if you want to attach a RoomMember to a MatrixEvent which\n * may no longer be represented correctly by Room.currentState or Room.oldState.\n * The term 'sentinel' refers to the fact that this RoomMember is an unchanging\n * guardian for state at this particular point in time.\n * @param {string} userId The room member's user ID.\n * @return {RoomMember} The member or null if they do not exist.\n */\nRoomState.prototype.getSentinelMember = function(userId) {\n    return this._sentinels[userId] || null;\n};\n\n/**\n * Get state events from the state of the room.\n * @param {string} eventType The event type of the state event.\n * @param {string} stateKey Optional. The state_key of the state event. If\n * this is <code>undefined</code> then all matching state events will be\n * returned.\n * @return {MatrixEvent[]|MatrixEvent} A list of events if state_key was\n * <code>undefined</code>, else a single event (or null if no match found).\n */\nRoomState.prototype.getStateEvents = function(eventType, stateKey) {\n    if (!this.events[eventType]) {\n        // no match\n        return stateKey === undefined ? [] : null;\n    }\n    if (stateKey === undefined) { // return all values\n        return utils.values(this.events[eventType]);\n    }\n    const event = this.events[eventType][stateKey];\n    return event ? event : null;\n};\n\n/**\n * Add an array of one or more state MatrixEvents, overwriting\n * any existing state with the same {type, stateKey} tuple. Will fire\n * \"RoomState.events\" for every event added. May fire \"RoomState.members\"\n * if there are <code>m.room.member</code> events.\n * @param {MatrixEvent[]} stateEvents a list of state events for this room.\n * @fires module:client~MatrixClient#event:\"RoomState.members\"\n * @fires module:client~MatrixClient#event:\"RoomState.newMember\"\n * @fires module:client~MatrixClient#event:\"RoomState.events\"\n */\nRoomState.prototype.setStateEvents = function(stateEvents) {\n    const self = this;\n    this._updateModifiedTime();\n\n    // update the core event dict\n    utils.forEach(stateEvents, function(event) {\n        if (event.getRoomId() !== self.roomId) {\n            return;\n        }\n        if (!event.isState()) {\n            return;\n        }\n\n        if (self.events[event.getType()] === undefined) {\n            self.events[event.getType()] = {};\n        }\n        self.events[event.getType()][event.getStateKey()] = event;\n        if (event.getType() === \"m.room.member\") {\n            _updateDisplayNameCache(\n                self, event.getStateKey(), event.getContent().displayname,\n            );\n            _updateThirdPartyTokenCache(self, event);\n        }\n        self.emit(\"RoomState.events\", event, self);\n    });\n\n    // update higher level data structures. This needs to be done AFTER the\n    // core event dict as these structures may depend on other state events in\n    // the given array (e.g. disambiguating display names in one go to do both\n    // clashing names rather than progressively which only catches 1 of them).\n    utils.forEach(stateEvents, function(event) {\n        if (event.getRoomId() !== self.roomId) {\n            return;\n        }\n        if (!event.isState()) {\n            return;\n        }\n\n        if (event.getType() === \"m.room.member\") {\n            const userId = event.getStateKey();\n\n            // leave events apparently elide the displayname or avatar_url,\n            // so let's fake one up so that we don't leak user ids\n            // into the timeline\n            if (event.getContent().membership === \"leave\" ||\n                event.getContent().membership === \"ban\") {\n                event.getContent().avatar_url =\n                    event.getContent().avatar_url ||\n                    event.getPrevContent().avatar_url;\n                event.getContent().displayname =\n                    event.getContent().displayname ||\n                    event.getPrevContent().displayname;\n            }\n\n            let member = self.members[userId];\n            if (!member) {\n                member = new RoomMember(event.getRoomId(), userId);\n                self.emit(\"RoomState.newMember\", event, self, member);\n            }\n            // Add a new sentinel for this change. We apply the same\n            // operations to both sentinel and member rather than deep copying\n            // so we don't make assumptions about the properties of RoomMember\n            // (e.g. and manage to break it because deep copying doesn't do\n            // everything).\n            const sentinel = new RoomMember(event.getRoomId(), userId);\n            utils.forEach([member, sentinel], function(roomMember) {\n                roomMember.setMembershipEvent(event, self);\n                // this member may have a power level already, so set it.\n                const pwrLvlEvent = self.getStateEvents(\"m.room.power_levels\", \"\");\n                if (pwrLvlEvent) {\n                    roomMember.setPowerLevelEvent(pwrLvlEvent);\n                }\n            });\n\n            self._sentinels[userId] = sentinel;\n            self.members[userId] = member;\n            self.emit(\"RoomState.members\", event, self, member);\n        } else if (event.getType() === \"m.room.power_levels\") {\n            const members = utils.values(self.members);\n            utils.forEach(members, function(member) {\n                member.setPowerLevelEvent(event);\n                self.emit(\"RoomState.members\", event, self, member);\n            });\n        }\n    });\n};\n\n/**\n * Set the current typing event for this room.\n * @param {MatrixEvent} event The typing event\n */\nRoomState.prototype.setTypingEvent = function(event) {\n    utils.forEach(utils.values(this.members), function(member) {\n        member.setTypingEvent(event);\n    });\n};\n\n/**\n * Get the m.room.member event which has the given third party invite token.\n *\n * @param {string} token The token\n * @return {?MatrixEvent} The m.room.member event or null\n */\nRoomState.prototype.getInviteForThreePidToken = function(token) {\n    return this._tokenToInvite[token] || null;\n};\n\n/**\n * Update the last modified time to the current time.\n */\nRoomState.prototype._updateModifiedTime = function() {\n    this._modified = Date.now();\n};\n\n/**\n * Get the timestamp when this room state was last updated. This timestamp is\n * updated when this object has received new state events.\n * @return {number} The timestamp\n */\nRoomState.prototype.getLastModifiedTime = function() {\n    return this._modified;\n};\n\n/**\n * Get user IDs with the specified display name.\n * @param {string} displayName The display name to get user IDs from.\n * @return {string[]} An array of user IDs or an empty array.\n */\nRoomState.prototype.getUserIdsWithDisplayName = function(displayName) {\n    return this._displayNameToUserIds[displayName] || [];\n};\n\n/**\n * Returns true if userId is in room, event is not redacted and either sender of\n * mxEvent or has power level sufficient to redact events other than their own.\n * @param {MatrixEvent} mxEvent The event to test permission for\n * @param {string} userId The user ID of the user to test permission for\n * @return {boolean} true if the given used ID can redact given event\n */\nRoomState.prototype.maySendRedactionForEvent = function(mxEvent, userId) {\n    const member = this.getMember(userId);\n    if (!member || member.membership === 'leave') return false;\n\n    if (mxEvent.status || mxEvent.isRedacted()) return false;\n    if (mxEvent.getSender() === userId) return true;\n\n    return this._hasSufficientPowerLevelFor('redact', member.powerLevel);\n};\n\n/**\n * Returns true if the given power level is sufficient for action\n * @param {string} action The type of power level to check\n * @param {number} powerLevel The power level of the member\n * @return {boolean} true if the given power level is sufficient\n */\nRoomState.prototype._hasSufficientPowerLevelFor = function(action, powerLevel) {\n    const powerLevelsEvent = this.getStateEvents('m.room.power_levels', '');\n\n    let powerLevels = {};\n    if (powerLevelsEvent) {\n        powerLevels = powerLevelsEvent.getContent();\n    }\n\n    let requiredLevel = 50;\n    if (powerLevels[action] !== undefined) {\n        requiredLevel = powerLevels[action];\n    }\n\n    return powerLevel >= requiredLevel;\n};\n\n/**\n * Short-form for maySendEvent('m.room.message', userId)\n * @param {string} userId The user ID of the user to test permission for\n * @return {boolean} true if the given user ID should be permitted to send\n *                   message events into the given room.\n */\nRoomState.prototype.maySendMessage = function(userId) {\n    return this._maySendEventOfType('m.room.message', userId, false);\n};\n\n/**\n * Returns true if the given user ID has permission to send a normal\n * event of type `eventType` into this room.\n * @param {string} eventType The type of event to test\n * @param {string} userId The user ID of the user to test permission for\n * @return {boolean} true if the given user ID should be permitted to send\n *                        the given type of event into this room,\n *                        according to the room's state.\n */\nRoomState.prototype.maySendEvent = function(eventType, userId) {\n    return this._maySendEventOfType(eventType, userId, false);\n};\n\n/**\n * Returns true if the given MatrixClient has permission to send a state\n * event of type `stateEventType` into this room.\n * @param {string} stateEventType The type of state events to test\n * @param {MatrixClient} cli The client to test permission for\n * @return {boolean} true if the given client should be permitted to send\n *                        the given type of state event into this room,\n *                        according to the room's state.\n */\nRoomState.prototype.mayClientSendStateEvent = function(stateEventType, cli) {\n    if (cli.isGuest()) {\n        return false;\n    }\n    return this.maySendStateEvent(stateEventType, cli.credentials.userId);\n};\n\n/**\n * Returns true if the given user ID has permission to send a state\n * event of type `stateEventType` into this room.\n * @param {string} stateEventType The type of state events to test\n * @param {string} userId The user ID of the user to test permission for\n * @return {boolean} true if the given user ID should be permitted to send\n *                        the given type of state event into this room,\n *                        according to the room's state.\n */\nRoomState.prototype.maySendStateEvent = function(stateEventType, userId) {\n    return this._maySendEventOfType(stateEventType, userId, true);\n};\n\n/**\n * Returns true if the given user ID has permission to send a normal or state\n * event of type `eventType` into this room.\n * @param {string} eventType The type of event to test\n * @param {string} userId The user ID of the user to test permission for\n * @param {boolean} state If true, tests if the user may send a state\n                          event of this type. Otherwise tests whether\n                          they may send a regular event.\n * @return {boolean} true if the given user ID should be permitted to send\n *                        the given type of event into this room,\n *                        according to the room's state.\n */\nRoomState.prototype._maySendEventOfType = function(eventType, userId, state) {\n    const member = this.getMember(userId);\n    if (!member || member.membership == 'leave') {\n        return false;\n    }\n\n    const power_levels_event = this.getStateEvents('m.room.power_levels', '');\n\n    let power_levels;\n    let events_levels = {};\n\n    let state_default = 0;\n    let events_default = 0;\n    if (power_levels_event) {\n        power_levels = power_levels_event.getContent();\n        events_levels = power_levels.events || {};\n\n        if (power_levels.state_default !== undefined) {\n            state_default = power_levels.state_default;\n        } else {\n            state_default = 50;\n        }\n        if (power_levels.events_default !== undefined) {\n            events_default = power_levels.events_default;\n        }\n    }\n\n    let required_level = state ? state_default : events_default;\n    if (events_levels[eventType] !== undefined) {\n        required_level = events_levels[eventType];\n    }\n    return member.powerLevel >= required_level;\n};\n\n/**\n * The RoomState class.\n */\nmodule.exports = RoomState;\n\n\nfunction _updateThirdPartyTokenCache(roomState, memberEvent) {\n    if (!memberEvent.getContent().third_party_invite) {\n        return;\n    }\n    const token = (memberEvent.getContent().third_party_invite.signed || {}).token;\n    if (!token) {\n        return;\n    }\n    const threePidInvite = roomState.getStateEvents(\n        \"m.room.third_party_invite\", token,\n    );\n    if (!threePidInvite) {\n        return;\n    }\n    roomState._tokenToInvite[token] = memberEvent;\n}\n\nfunction _updateDisplayNameCache(roomState, userId, displayName) {\n    const oldName = roomState._userIdsToDisplayNames[userId];\n    delete roomState._userIdsToDisplayNames[userId];\n    if (oldName) {\n        // Remove the old name from the cache.\n        // We clobber the user_id > name lookup but the name -> [user_id] lookup\n        // means we need to remove that user ID from that array rather than nuking\n        // the lot.\n        const existingUserIds = roomState._displayNameToUserIds[oldName] || [];\n        for (let i = 0; i < existingUserIds.length; i++) {\n            if (existingUserIds[i] === userId) {\n                // remove this user ID from this array\n                existingUserIds.splice(i, 1);\n                i--;\n            }\n        }\n        roomState._displayNameToUserIds[oldName] = existingUserIds;\n    }\n\n    roomState._userIdsToDisplayNames[userId] = displayName;\n    if (!roomState._displayNameToUserIds[displayName]) {\n        roomState._displayNameToUserIds[displayName] = [];\n    }\n    roomState._displayNameToUserIds[displayName].push(userId);\n}\n\n/**\n * Fires whenever the event dictionary in room state is updated.\n * @event module:client~MatrixClient#\"RoomState.events\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {RoomState} state The room state whose RoomState.events dictionary\n * was updated.\n * @example\n * matrixClient.on(\"RoomState.events\", function(event, state){\n *   var newStateEvent = event;\n * });\n */\n\n/**\n * Fires whenever a member in the members dictionary is updated in any way.\n * @event module:client~MatrixClient#\"RoomState.members\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {RoomState} state The room state whose RoomState.members dictionary\n * was updated.\n * @param {RoomMember} member The room member that was updated.\n * @example\n * matrixClient.on(\"RoomState.members\", function(event, state, member){\n *   var newMembershipState = member.membership;\n * });\n */\n\n /**\n * Fires whenever a member is added to the members dictionary. The RoomMember\n * will not be fully populated yet (e.g. no membership state).\n * @event module:client~MatrixClient#\"RoomState.newMember\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {RoomState} state The room state whose RoomState.members dictionary\n * was updated with a new entry.\n * @param {RoomMember} member The room member that was added.\n * @example\n * matrixClient.on(\"RoomState.newMember\", function(event, state, member){\n *   // add event listeners on 'member'\n * });\n */\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * @module models/room-summary\n */\n\n/**\n * Construct a new Room Summary. A summary can be used for display on a recent\n * list, without having to load the entire room list into memory.\n * @constructor\n * @param {string} roomId Required. The ID of this room.\n * @param {Object} info Optional. The summary info. Additional keys are supported.\n * @param {string} info.title The title of the room (e.g. <code>m.room.name</code>)\n * @param {string} info.desc The description of the room (e.g.\n * <code>m.room.topic</code>)\n * @param {Number} info.numMembers The number of joined users.\n * @param {string[]} info.aliases The list of aliases for this room.\n * @param {Number} info.timestamp The timestamp for this room.\n */\nfunction RoomSummary(roomId, info) {\n    this.roomId = roomId;\n    this.info = info;\n}\n\n/**\n * The RoomSummary class.\n */\nmodule.exports = RoomSummary;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * @module models/room\n */\nconst EventEmitter = require(\"events\").EventEmitter;\n\nconst EventStatus = require(\"./event\").EventStatus;\nconst RoomSummary = require(\"./room-summary\");\nconst MatrixEvent = require(\"./event\").MatrixEvent;\nconst utils = require(\"../utils\");\nconst ContentRepo = require(\"../content-repo\");\nconst EventTimeline = require(\"./event-timeline\");\nconst EventTimelineSet = require(\"./event-timeline-set\");\n\nimport ReEmitter from '../ReEmitter';\n\nfunction synthesizeReceipt(userId, event, receiptType) {\n    // console.log(\"synthesizing receipt for \"+event.getId());\n    // This is really ugly because JS has no way to express an object literal\n    // where the name of a key comes from an expression\n    const fakeReceipt = {\n        content: {},\n        type: \"m.receipt\",\n        room_id: event.getRoomId(),\n    };\n    fakeReceipt.content[event.getId()] = {};\n    fakeReceipt.content[event.getId()][receiptType] = {};\n    fakeReceipt.content[event.getId()][receiptType][userId] = {\n        ts: event.getTs(),\n    };\n    return new MatrixEvent(fakeReceipt);\n}\n\n\n/**\n * Construct a new Room.\n *\n * <p>For a room, we store an ordered sequence of timelines, which may or may not\n * be continuous. Each timeline lists a series of events, as well as tracking\n * the room state at the start and the end of the timeline. It also tracks\n * forward and backward pagination tokens, as well as containing links to the\n * next timeline in the sequence.\n *\n * <p>There is one special timeline - the 'live' timeline, which represents the\n * timeline to which events are being added in real-time as they are received\n * from the /sync API. Note that you should not retain references to this\n * timeline - even if it is the current timeline right now, it may not remain\n * so if the server gives us a timeline gap in /sync.\n *\n * <p>In order that we can find events from their ids later, we also maintain a\n * map from event_id to timeline and index.\n *\n * @constructor\n * @alias module:models/room\n * @param {string} roomId Required. The ID of this room.\n * @param {Object=} opts Configuration options\n * @param {*} opts.storageToken Optional. The token which a data store can use\n * to remember the state of the room. What this means is dependent on the store\n * implementation.\n *\n * @param {String=} opts.pendingEventOrdering Controls where pending messages\n * appear in a room's timeline. If \"<b>chronological</b>\", messages will appear\n * in the timeline when the call to <code>sendEvent</code> was made. If\n * \"<b>detached</b>\", pending messages will appear in a separate list,\n * accessbile via {@link module:models/room#getPendingEvents}. Default:\n * \"chronological\".\n *\n * @param {boolean} [opts.timelineSupport = false] Set to true to enable improved\n * timeline support.\n *\n * @prop {string} roomId The ID of this room.\n * @prop {string} name The human-readable display name for this room.\n * @prop {Array<MatrixEvent>} timeline The live event timeline for this room,\n * with the oldest event at index 0. Present for backwards compatibility -\n * prefer getLiveTimeline().getEvents().\n * @prop {object} tags Dict of room tags; the keys are the tag name and the values\n * are any metadata associated with the tag - e.g. { \"fav\" : { order: 1 } }\n * @prop {object} accountData Dict of per-room account_data events; the keys are the\n * event type and the values are the events.\n * @prop {RoomState} oldState The state of the room at the time of the oldest\n * event in the live timeline. Present for backwards compatibility -\n * prefer getLiveTimeline().getState(true).\n * @prop {RoomState} currentState The state of the room at the time of the\n * newest event in the timeline. Present for backwards compatibility -\n * prefer getLiveTimeline().getState(false).\n * @prop {RoomSummary} summary The room summary.\n * @prop {*} storageToken A token which a data store can use to remember\n * the state of the room.\n */\nfunction Room(roomId, opts) {\n    opts = opts || {};\n    opts.pendingEventOrdering = opts.pendingEventOrdering || \"chronological\";\n\n    this.reEmitter = new ReEmitter(this);\n\n    if ([\"chronological\", \"detached\"].indexOf(opts.pendingEventOrdering) === -1) {\n        throw new Error(\n            \"opts.pendingEventOrdering MUST be either 'chronological' or \" +\n            \"'detached'. Got: '\" + opts.pendingEventOrdering + \"'\",\n        );\n    }\n\n    this.roomId = roomId;\n    this.name = roomId;\n    this.tags = {\n        // $tagName: { $metadata: $value },\n        // $tagName: { $metadata: $value },\n    };\n    this.accountData = {\n        // $eventType: $event\n    };\n    this.summary = null;\n    this.storageToken = opts.storageToken;\n    this._opts = opts;\n    this._txnToEvent = {}; // Pending in-flight requests { string: MatrixEvent }\n    // receipts should clobber based on receipt_type and user_id pairs hence\n    // the form of this structure. This is sub-optimal for the exposed APIs\n    // which pass in an event ID and get back some receipts, so we also store\n    // a pre-cached list for this purpose.\n    this._receipts = {\n        // receipt_type: {\n        //   user_id: {\n        //     eventId: <event_id>,\n        //     data: <receipt_data>\n        //   }\n        // }\n    };\n    this._receiptCacheByEventId = {\n        // $event_id: [{\n        //   type: $type,\n        //   userId: $user_id,\n        //   data: <receipt data>\n        // }]\n    };\n    // only receipts that came from the server, not synthesized ones\n    this._realReceipts = {};\n\n    this._notificationCounts = {};\n\n    // all our per-room timeline sets. the first one is the unfiltered ones;\n    // the subsequent ones are the filtered ones in no particular order.\n    this._timelineSets = [new EventTimelineSet(this, opts)];\n    this.reEmitter.reEmit(this.getUnfilteredTimelineSet(),\n           [\"Room.timeline\", \"Room.timelineReset\"]);\n\n    this._fixUpLegacyTimelineFields();\n\n    // any filtered timeline sets we're maintaining for this room\n    this._filteredTimelineSets = {\n        // filter_id: timelineSet\n    };\n\n    if (this._opts.pendingEventOrdering == \"detached\") {\n        this._pendingEventList = [];\n    }\n\n    this._blacklistUnverifiedDevices = false; // read by megolm\n}\nutils.inherits(Room, EventEmitter);\n\n/**\n * Get the list of pending sent events for this room\n *\n * @return {module:models/event.MatrixEvent[]} A list of the sent events\n * waiting for remote echo.\n *\n * @throws If <code>opts.pendingEventOrdering</code> was not 'detached'\n */\nRoom.prototype.getPendingEvents = function() {\n    if (this._opts.pendingEventOrdering !== \"detached\") {\n        throw new Error(\n            \"Cannot call getPendingEventList with pendingEventOrdering == \" +\n                this._opts.pendingEventOrdering);\n    }\n\n    return this._pendingEventList;\n};\n\n/**\n * Get the live unfiltered timeline for this room.\n *\n * @return {module:models/event-timeline~EventTimeline} live timeline\n */\nRoom.prototype.getLiveTimeline = function() {\n    return this.getUnfilteredTimelineSet().getLiveTimeline();\n};\n\n\n/**\n * Reset the live timeline of all timelineSets, and start new ones.\n *\n * <p>This is used when /sync returns a 'limited' timeline.\n *\n * @param {string=} backPaginationToken   token for back-paginating the new timeline\n * @param {string=} forwardPaginationToken token for forward-paginating the old live timeline,\n * if absent or null, all timelines are reset, removing old ones (including the previous live\n * timeline which would otherwise be unable to paginate forwards without this token).\n * Removing just the old live timeline whilst preserving previous ones is not supported.\n */\nRoom.prototype.resetLiveTimeline = function(backPaginationToken, forwardPaginationToken) {\n    for (let i = 0; i < this._timelineSets.length; i++) {\n        this._timelineSets[i].resetLiveTimeline(\n            backPaginationToken, forwardPaginationToken,\n        );\n    }\n\n    this._fixUpLegacyTimelineFields();\n};\n\n/**\n * Fix up this.timeline, this.oldState and this.currentState\n *\n * @private\n */\nRoom.prototype._fixUpLegacyTimelineFields = function() {\n    // maintain this.timeline as a reference to the live timeline,\n    // and this.oldState and this.currentState as references to the\n    // state at the start and end of that timeline. These are more\n    // for backwards-compatibility than anything else.\n    this.timeline = this.getLiveTimeline().getEvents();\n    this.oldState = this.getLiveTimeline()\n                        .getState(EventTimeline.BACKWARDS);\n    this.currentState = this.getLiveTimeline()\n                            .getState(EventTimeline.FORWARDS);\n};\n\n/**\n * Return the timeline sets for this room.\n * @return {EventTimelineSet[]} array of timeline sets for this room\n */\nRoom.prototype.getTimelineSets = function() {\n    return this._timelineSets;\n};\n\n/**\n * Helper to return the main unfiltered timeline set for this room\n * @return {EventTimelineSet} room's unfiltered timeline set\n */\nRoom.prototype.getUnfilteredTimelineSet = function() {\n    return this._timelineSets[0];\n};\n\n/**\n * Get the timeline which contains the given event from the unfiltered set, if any\n *\n * @param {string} eventId  event ID to look for\n * @return {?module:models/event-timeline~EventTimeline} timeline containing\n * the given event, or null if unknown\n */\nRoom.prototype.getTimelineForEvent = function(eventId) {\n    return this.getUnfilteredTimelineSet().getTimelineForEvent(eventId);\n};\n\n/**\n * Add a new timeline to this room's unfiltered timeline set\n *\n * @return {module:models/event-timeline~EventTimeline} newly-created timeline\n */\nRoom.prototype.addTimeline = function() {\n    return this.getUnfilteredTimelineSet().addTimeline();\n};\n\n/**\n * Get an event which is stored in our unfiltered timeline set\n *\n * @param {string} eventId  event ID to look for\n * @return {?module:models/event.MatrixEvent} the given event, or undefined if unknown\n */\nRoom.prototype.findEventById = function(eventId) {\n    return this.getUnfilteredTimelineSet().findEventById(eventId);\n};\n\n/**\n * Get one of the notification counts for this room\n * @param {String} type The type of notification count to get. default: 'total'\n * @return {Number} The notification count, or undefined if there is no count\n *                  for this type.\n */\nRoom.prototype.getUnreadNotificationCount = function(type) {\n    type = type || 'total';\n    return this._notificationCounts[type];\n};\n\n/**\n * Set one of the notification counts for this room\n * @param {String} type The type of notification count to set.\n * @param {Number} count The new count\n */\nRoom.prototype.setUnreadNotificationCount = function(type, count) {\n    this._notificationCounts[type] = count;\n};\n\n/**\n * Whether to send encrypted messages to devices within this room.\n * Will be ignored if MatrixClient's blacklistUnverifiedDevices setting is true.\n * @param {boolean} value if true, blacklist unverified devices.\n */\nRoom.prototype.setBlacklistUnverifiedDevices = function(value) {\n    this._blacklistUnverifiedDevices = value;\n};\n\n/**\n * Whether to send encrypted messages to devices within this room.\n * Will be ignored if MatrixClient's blacklistUnverifiedDevices setting is true.\n * @return {boolean} true if blacklisting unverified devices.\n */\nRoom.prototype.getBlacklistUnverifiedDevices = function() {\n    return this._blacklistUnverifiedDevices;\n};\n\n/**\n * Get the avatar URL for a room if one was set.\n * @param {String} baseUrl The homeserver base URL. See\n * {@link module:client~MatrixClient#getHomeserverUrl}.\n * @param {Number} width The desired width of the thumbnail.\n * @param {Number} height The desired height of the thumbnail.\n * @param {string} resizeMethod The thumbnail resize method to use, either\n * \"crop\" or \"scale\".\n * @param {boolean} allowDefault True to allow an identicon for this room if an\n * avatar URL wasn't explicitly set. Default: true.\n * @return {?string} the avatar URL or null.\n */\nRoom.prototype.getAvatarUrl = function(baseUrl, width, height, resizeMethod,\n                                       allowDefault) {\n    const roomAvatarEvent = this.currentState.getStateEvents(\"m.room.avatar\", \"\");\n    if (allowDefault === undefined) {\n        allowDefault = true;\n    }\n    if (!roomAvatarEvent && !allowDefault) {\n        return null;\n    }\n\n    const mainUrl = roomAvatarEvent ? roomAvatarEvent.getContent().url : null;\n    if (mainUrl) {\n        return ContentRepo.getHttpUriForMxc(\n            baseUrl, mainUrl, width, height, resizeMethod,\n        );\n    } else if (allowDefault) {\n        return ContentRepo.getIdenticonUri(\n            baseUrl, this.roomId, width, height,\n        );\n    }\n\n    return null;\n};\n\n/**\n * Get the aliases this room has according to the room's state\n * The aliases returned by this function may not necessarily\n * still point to this room.\n * @return {array} The room's alias as an array of strings\n */\nRoom.prototype.getAliases = function() {\n    const alias_strings = [];\n\n    const alias_events = this.currentState.getStateEvents(\"m.room.aliases\");\n    if (alias_events) {\n        for (let i = 0; i < alias_events.length; ++i) {\n            const alias_event = alias_events[i];\n            if (utils.isArray(alias_event.getContent().aliases)) {\n                Array.prototype.push.apply(\n                    alias_strings, alias_event.getContent().aliases,\n                );\n            }\n        }\n    }\n    return alias_strings;\n};\n\n/**\n * Get this room's canonical alias\n * The alias returned by this function may not necessarily\n * still point to this room.\n * @return {?string} The room's canonical alias, or null if there is none\n */\nRoom.prototype.getCanonicalAlias = function() {\n    const canonicalAlias = this.currentState.getStateEvents(\"m.room.canonical_alias\", \"\");\n    if (canonicalAlias) {\n        return canonicalAlias.getContent().alias;\n    }\n    return null;\n};\n\n/**\n * Add events to a timeline\n *\n * <p>Will fire \"Room.timeline\" for each event added.\n *\n * @param {MatrixEvent[]} events A list of events to add.\n *\n * @param {boolean} toStartOfTimeline   True to add these events to the start\n * (oldest) instead of the end (newest) of the timeline. If true, the oldest\n * event will be the <b>last</b> element of 'events'.\n *\n * @param {module:models/event-timeline~EventTimeline} timeline   timeline to\n *    add events to.\n *\n * @param {string=} paginationToken   token for the next batch of events\n *\n * @fires module:client~MatrixClient#event:\"Room.timeline\"\n *\n */\nRoom.prototype.addEventsToTimeline = function(events, toStartOfTimeline,\n                                              timeline, paginationToken) {\n    timeline.getTimelineSet().addEventsToTimeline(\n        events, toStartOfTimeline,\n        timeline, paginationToken,\n    );\n};\n\n/**\n * Get a member from the current room state.\n * @param {string} userId The user ID of the member.\n * @return {RoomMember} The member or <code>null</code>.\n */\n Room.prototype.getMember = function(userId) {\n    const member = this.currentState.members[userId];\n    if (!member) {\n        return null;\n    }\n    return member;\n };\n\n/**\n * Get a list of members whose membership state is \"join\".\n * @return {RoomMember[]} A list of currently joined members.\n */\n Room.prototype.getJoinedMembers = function() {\n    return this.getMembersWithMembership(\"join\");\n };\n\n/**\n * Get a list of members with given membership state.\n * @param {string} membership The membership state.\n * @return {RoomMember[]} A list of members with the given membership state.\n */\n Room.prototype.getMembersWithMembership = function(membership) {\n    return utils.filter(this.currentState.getMembers(), function(m) {\n        return m.membership === membership;\n    });\n };\n\n /**\n  * Get the default room name (i.e. what a given user would see if the\n  * room had no m.room.name)\n  * @param {string} userId The userId from whose perspective we want\n  * to calculate the default name\n  * @return {string} The default room name\n  */\n Room.prototype.getDefaultRoomName = function(userId) {\n    return calculateRoomName(this, userId, true);\n };\n\n\n /**\n * Check if the given user_id has the given membership state.\n * @param {string} userId The user ID to check.\n * @param {string} membership The membership e.g. <code>'join'</code>\n * @return {boolean} True if this user_id has the given membership state.\n */\n Room.prototype.hasMembershipState = function(userId, membership) {\n    const member = this.getMember(userId);\n    if (!member) {\n        return false;\n    }\n    return member.membership === membership;\n };\n\n/**\n * Add a timelineSet for this room with the given filter\n * @param {Filter} filter  The filter to be applied to this timelineSet\n * @return {EventTimelineSet}  The timelineSet\n */\nRoom.prototype.getOrCreateFilteredTimelineSet = function(filter) {\n    if (this._filteredTimelineSets[filter.filterId]) {\n        return this._filteredTimelineSets[filter.filterId];\n    }\n    const opts = Object.assign({ filter: filter }, this._opts);\n    const timelineSet = new EventTimelineSet(this, opts);\n    this.reEmitter.reEmit(timelineSet, [\"Room.timeline\", \"Room.timelineReset\"]);\n    this._filteredTimelineSets[filter.filterId] = timelineSet;\n    this._timelineSets.push(timelineSet);\n\n    // populate up the new timelineSet with filtered events from our live\n    // unfiltered timeline.\n    //\n    // XXX: This is risky as our timeline\n    // may have grown huge and so take a long time to filter.\n    // see https://github.com/vector-im/vector-web/issues/2109\n\n    const unfilteredLiveTimeline = this.getLiveTimeline();\n\n    unfilteredLiveTimeline.getEvents().forEach(function(event) {\n        timelineSet.addLiveEvent(event);\n    });\n\n    // find the earliest unfiltered timeline\n    let timeline = unfilteredLiveTimeline;\n    while (timeline.getNeighbouringTimeline(EventTimeline.BACKWARDS)) {\n        timeline = timeline.getNeighbouringTimeline(EventTimeline.BACKWARDS);\n    }\n\n    timelineSet.getLiveTimeline().setPaginationToken(\n        timeline.getPaginationToken(EventTimeline.BACKWARDS),\n        EventTimeline.BACKWARDS,\n    );\n\n    // alternatively, we could try to do something like this to try and re-paginate\n    // in the filtered events from nothing, but Mark says it's an abuse of the API\n    // to do so:\n    //\n    // timelineSet.resetLiveTimeline(\n    //      unfilteredLiveTimeline.getPaginationToken(EventTimeline.FORWARDS)\n    // );\n\n    return timelineSet;\n};\n\n/**\n * Forget the timelineSet for this room with the given filter\n *\n * @param {Filter} filter  the filter whose timelineSet is to be forgotten\n */\nRoom.prototype.removeFilteredTimelineSet = function(filter) {\n    const timelineSet = this._filteredTimelineSets[filter.filterId];\n    delete this._filteredTimelineSets[filter.filterId];\n    const i = this._timelineSets.indexOf(timelineSet);\n    if (i > -1) {\n        this._timelineSets.splice(i, 1);\n    }\n};\n\n/**\n * Add an event to the end of this room's live timelines. Will fire\n * \"Room.timeline\".\n *\n * @param {MatrixEvent} event Event to be added\n * @param {string?} duplicateStrategy 'ignore' or 'replace'\n * @fires module:client~MatrixClient#event:\"Room.timeline\"\n * @private\n */\nRoom.prototype._addLiveEvent = function(event, duplicateStrategy) {\n    let i;\n    if (event.getType() === \"m.room.redaction\") {\n        const redactId = event.event.redacts;\n\n        // if we know about this event, redact its contents now.\n        const redactedEvent = this.getUnfilteredTimelineSet().findEventById(redactId);\n        if (redactedEvent) {\n            redactedEvent.makeRedacted(event);\n            this.emit(\"Room.redaction\", event, this);\n\n            // TODO: we stash user displaynames (among other things) in\n            // RoomMember objects which are then attached to other events\n            // (in the sender and target fields). We should get those\n            // RoomMember objects to update themselves when the events that\n            // they are based on are changed.\n        }\n\n        // FIXME: apply redactions to notification list\n\n        // NB: We continue to add the redaction event to the timeline so\n        // clients can say \"so and so redacted an event\" if they wish to. Also\n        // this may be needed to trigger an update.\n    }\n\n    if (event.getUnsigned().transaction_id) {\n        const existingEvent = this._txnToEvent[event.getUnsigned().transaction_id];\n        if (existingEvent) {\n            // remote echo of an event we sent earlier\n            this._handleRemoteEcho(event, existingEvent);\n            return;\n        }\n    }\n\n    // add to our timeline sets\n    for (i = 0; i < this._timelineSets.length; i++) {\n        this._timelineSets[i].addLiveEvent(event, duplicateStrategy);\n    }\n\n    // synthesize and inject implicit read receipts\n    // Done after adding the event because otherwise the app would get a read receipt\n    // pointing to an event that wasn't yet in the timeline\n    if (event.sender) {\n        this.addReceipt(synthesizeReceipt(\n            event.sender.userId, event, \"m.read\",\n        ), true);\n\n        // Any live events from a user could be taken as implicit\n        // presence information: evidence that they are currently active.\n        // ...except in a world where we use 'user.currentlyActive' to reduce\n        // presence spam, this isn't very useful - we'll get a transition when\n        // they are no longer currently active anyway. So don't bother to\n        // reset the lastActiveAgo and lastPresenceTs from the RoomState's user.\n    }\n};\n\n\n/**\n * Add a pending outgoing event to this room.\n *\n * <p>The event is added to either the pendingEventList, or the live timeline,\n * depending on the setting of opts.pendingEventOrdering.\n *\n * <p>This is an internal method, intended for use by MatrixClient.\n *\n * @param {module:models/event.MatrixEvent} event The event to add.\n *\n * @param {string} txnId   Transaction id for this outgoing event\n *\n * @fires module:client~MatrixClient#event:\"Room.localEchoUpdated\"\n *\n * @throws if the event doesn't have status SENDING, or we aren't given a\n * unique transaction id.\n */\nRoom.prototype.addPendingEvent = function(event, txnId) {\n    if (event.status !== EventStatus.SENDING) {\n        throw new Error(\"addPendingEvent called on an event with status \" +\n                        event.status);\n    }\n\n    if (this._txnToEvent[txnId]) {\n        throw new Error(\"addPendingEvent called on an event with known txnId \" +\n                        txnId);\n    }\n\n    // call setEventMetadata to set up event.sender etc\n    // as event is shared over all timelineSets, we set up its metadata based\n    // on the unfiltered timelineSet.\n    EventTimeline.setEventMetadata(\n        event,\n        this.getLiveTimeline().getState(EventTimeline.FORWARDS),\n        false,\n    );\n\n    this._txnToEvent[txnId] = event;\n\n    if (this._opts.pendingEventOrdering == \"detached\") {\n        this._pendingEventList.push(event);\n    } else {\n        for (let i = 0; i < this._timelineSets.length; i++) {\n            const timelineSet = this._timelineSets[i];\n            if (timelineSet.getFilter()) {\n                if (this._filter.filterRoomTimeline([event]).length) {\n                    timelineSet.addEventToTimeline(event,\n                        timelineSet.getLiveTimeline(), false);\n                }\n            } else {\n                timelineSet.addEventToTimeline(event,\n                    timelineSet.getLiveTimeline(), false);\n            }\n        }\n    }\n\n    this.emit(\"Room.localEchoUpdated\", event, this, null, null);\n};\n\n/**\n * Deal with the echo of a message we sent.\n *\n * <p>We move the event to the live timeline if it isn't there already, and\n * update it.\n *\n * @param {module:models/event.MatrixEvent} remoteEvent   The event received from\n *    /sync\n * @param {module:models/event.MatrixEvent} localEvent    The local echo, which\n *    should be either in the _pendingEventList or the timeline.\n *\n * @fires module:client~MatrixClient#event:\"Room.localEchoUpdated\"\n * @private\n */\nRoom.prototype._handleRemoteEcho = function(remoteEvent, localEvent) {\n    const oldEventId = localEvent.getId();\n    const newEventId = remoteEvent.getId();\n    const oldStatus = localEvent.status;\n\n    // no longer pending\n    delete this._txnToEvent[remoteEvent.transaction_id];\n\n    // if it's in the pending list, remove it\n    if (this._pendingEventList) {\n        utils.removeElement(\n            this._pendingEventList,\n            function(ev) {\n                return ev.getId() == oldEventId;\n            }, false,\n        );\n    }\n\n    // replace the event source (this will preserve the plaintext payload if\n    // any, which is good, because we don't want to try decoding it again).\n    localEvent.handleRemoteEcho(remoteEvent.event);\n\n    for (let i = 0; i < this._timelineSets.length; i++) {\n        const timelineSet = this._timelineSets[i];\n\n        // if it's already in the timeline, update the timeline map. If it's not, add it.\n        timelineSet.handleRemoteEcho(localEvent, oldEventId, newEventId);\n    }\n\n    this.emit(\"Room.localEchoUpdated\", localEvent, this,\n              oldEventId, oldStatus);\n};\n\n/* a map from current event status to a list of allowed next statuses\n */\nconst ALLOWED_TRANSITIONS = {};\n\nALLOWED_TRANSITIONS[EventStatus.ENCRYPTING] = [\n    EventStatus.SENDING,\n    EventStatus.NOT_SENT,\n];\n\nALLOWED_TRANSITIONS[EventStatus.SENDING] = [\n    EventStatus.ENCRYPTING,\n    EventStatus.QUEUED,\n    EventStatus.NOT_SENT,\n    EventStatus.SENT,\n];\n\nALLOWED_TRANSITIONS[EventStatus.QUEUED] =\n    [EventStatus.SENDING, EventStatus.CANCELLED];\n\nALLOWED_TRANSITIONS[EventStatus.SENT] =\n    [];\n\nALLOWED_TRANSITIONS[EventStatus.NOT_SENT] =\n    [EventStatus.SENDING, EventStatus.QUEUED, EventStatus.CANCELLED];\n\nALLOWED_TRANSITIONS[EventStatus.CANCELLED] =\n    [];\n\n/**\n * Update the status / event id on a pending event, to reflect its transmission\n * progress.\n *\n * <p>This is an internal method.\n *\n * @param {MatrixEvent} event      local echo event\n * @param {EventStatus} newStatus  status to assign\n * @param {string} newEventId      new event id to assign. Ignored unless\n *    newStatus == EventStatus.SENT.\n * @fires module:client~MatrixClient#event:\"Room.localEchoUpdated\"\n */\nRoom.prototype.updatePendingEvent = function(event, newStatus, newEventId) {\n    console.log(`setting pendingEvent status to ${newStatus} in ${event.getRoomId()}`);\n\n    // if the message was sent, we expect an event id\n    if (newStatus == EventStatus.SENT && !newEventId) {\n        throw new Error(\"updatePendingEvent called with status=SENT, \" +\n                        \"but no new event id\");\n    }\n\n    // SENT races against /sync, so we have to special-case it.\n    if (newStatus == EventStatus.SENT) {\n        const timeline = this.getUnfilteredTimelineSet().eventIdToTimeline(newEventId);\n        if (timeline) {\n            // we've already received the event via the event stream.\n            // nothing more to do here.\n            return;\n        }\n    }\n\n    const oldStatus = event.status;\n    const oldEventId = event.getId();\n\n    if (!oldStatus) {\n        throw new Error(\"updatePendingEventStatus called on an event which is \" +\n                        \"not a local echo.\");\n    }\n\n    const allowed = ALLOWED_TRANSITIONS[oldStatus];\n    if (!allowed || allowed.indexOf(newStatus) < 0) {\n        throw new Error(\"Invalid EventStatus transition \" + oldStatus + \"->\" +\n                        newStatus);\n    }\n\n    event.status = newStatus;\n\n    if (newStatus == EventStatus.SENT) {\n        // update the event id\n        event.event.event_id = newEventId;\n\n        // if the event was already in the timeline (which will be the case if\n        // opts.pendingEventOrdering==chronological), we need to update the\n        // timeline map.\n        for (let i = 0; i < this._timelineSets.length; i++) {\n            this._timelineSets[i].replaceEventId(oldEventId, newEventId);\n        }\n    } else if (newStatus == EventStatus.CANCELLED) {\n        // remove it from the pending event list, or the timeline.\n        if (this._pendingEventList) {\n            utils.removeElement(\n                this._pendingEventList,\n                function(ev) {\n                    return ev.getId() == oldEventId;\n                }, false,\n            );\n        }\n        this.removeEvent(oldEventId);\n    }\n\n    this.emit(\"Room.localEchoUpdated\", event, this, event.getId(), oldStatus);\n};\n\n\n/**\n * Add some events to this room. This can include state events, message\n * events and typing notifications. These events are treated as \"live\" so\n * they will go to the end of the timeline.\n *\n * @param {MatrixEvent[]} events A list of events to add.\n *\n * @param {string} duplicateStrategy Optional. Applies to events in the\n * timeline only. If this is 'replace' then if a duplicate is encountered, the\n * event passed to this function will replace the existing event in the\n * timeline. If this is not specified, or is 'ignore', then the event passed to\n * this function will be ignored entirely, preserving the existing event in the\n * timeline. Events are identical based on their event ID <b>only</b>.\n *\n * @throws If <code>duplicateStrategy</code> is not falsey, 'replace' or 'ignore'.\n */\nRoom.prototype.addLiveEvents = function(events, duplicateStrategy) {\n    let i;\n    if (duplicateStrategy && [\"replace\", \"ignore\"].indexOf(duplicateStrategy) === -1) {\n        throw new Error(\"duplicateStrategy MUST be either 'replace' or 'ignore'\");\n    }\n\n    // sanity check that the live timeline is still live\n    for (i = 0; i < this._timelineSets.length; i++) {\n        const liveTimeline = this._timelineSets[i].getLiveTimeline();\n        if (liveTimeline.getPaginationToken(EventTimeline.FORWARDS)) {\n            throw new Error(\n                \"live timeline \" + i + \" is no longer live - it has a pagination token \" +\n                \"(\" + liveTimeline.getPaginationToken(EventTimeline.FORWARDS) + \")\",\n            );\n        }\n        if (liveTimeline.getNeighbouringTimeline(EventTimeline.FORWARDS)) {\n            throw new Error(\n                \"live timeline \" + i + \" is no longer live - \" +\n                \"it has a neighbouring timeline\",\n            );\n        }\n    }\n\n    for (i = 0; i < events.length; i++) {\n        if (events[i].getType() === \"m.typing\") {\n            this.currentState.setTypingEvent(events[i]);\n        } else if (events[i].getType() === \"m.receipt\") {\n            this.addReceipt(events[i]);\n        }\n        // N.B. account_data is added directly by /sync to avoid\n        // having to maintain an event.isAccountData() here\n        else {\n            // TODO: We should have a filter to say \"only add state event\n            // types X Y Z to the timeline\".\n            this._addLiveEvent(events[i], duplicateStrategy);\n        }\n    }\n};\n\n/**\n * Removes events from this room.\n * @param {String[]} event_ids A list of event_ids to remove.\n */\nRoom.prototype.removeEvents = function(event_ids) {\n    for (let i = 0; i < event_ids.length; ++i) {\n        this.removeEvent(event_ids[i]);\n    }\n};\n\n/**\n * Removes a single event from this room.\n *\n * @param {String} eventId  The id of the event to remove\n *\n * @return {bool} true if the event was removed from any of the room's timeline sets\n */\nRoom.prototype.removeEvent = function(eventId) {\n    let removedAny = false;\n    for (let i = 0; i < this._timelineSets.length; i++) {\n        const removed = this._timelineSets[i].removeEvent(eventId);\n        if (removed) {\n            removedAny = true;\n        }\n    }\n    return removedAny;\n};\n\n\n/**\n * Recalculate various aspects of the room, including the room name and\n * room summary. Call this any time the room's current state is modified.\n * May fire \"Room.name\" if the room name is updated.\n * @param {string} userId The client's user ID.\n * @fires module:client~MatrixClient#event:\"Room.name\"\n */\nRoom.prototype.recalculate = function(userId) {\n    // set fake stripped state events if this is an invite room so logic remains\n    // consistent elsewhere.\n    const self = this;\n    const membershipEvent = this.currentState.getStateEvents(\n        \"m.room.member\", userId,\n    );\n    if (membershipEvent && membershipEvent.getContent().membership === \"invite\") {\n        const strippedStateEvents = membershipEvent.event.invite_room_state || [];\n        utils.forEach(strippedStateEvents, function(strippedEvent) {\n            const existingEvent = self.currentState.getStateEvents(\n                strippedEvent.type, strippedEvent.state_key,\n            );\n            if (!existingEvent) {\n                // set the fake stripped event instead\n                self.currentState.setStateEvents([new MatrixEvent({\n                    type: strippedEvent.type,\n                    state_key: strippedEvent.state_key,\n                    content: strippedEvent.content,\n                    event_id: \"$fake\" + Date.now(),\n                    room_id: self.roomId,\n                    user_id: userId, // technically a lie\n                })]);\n            }\n        });\n    }\n\n    const oldName = this.name;\n    this.name = calculateRoomName(this, userId);\n    this.summary = new RoomSummary(this.roomId, {\n        title: this.name,\n    });\n\n    if (oldName !== this.name) {\n        this.emit(\"Room.name\", this);\n    }\n};\n\n\n/**\n * Get a list of user IDs who have <b>read up to</b> the given event.\n * @param {MatrixEvent} event the event to get read receipts for.\n * @return {String[]} A list of user IDs.\n */\nRoom.prototype.getUsersReadUpTo = function(event) {\n    return this.getReceiptsForEvent(event).filter(function(receipt) {\n        return receipt.type === \"m.read\";\n    }).map(function(receipt) {\n        return receipt.userId;\n    });\n};\n\n/**\n * Get the ID of the event that a given user has read up to, or null if we\n * have received no read receipts from them.\n * @param {String} userId The user ID to get read receipt event ID for\n * @param {Boolean} ignoreSynthesized If true, return only receipts that have been\n *                                    sent by the server, not implicit ones generated\n *                                    by the JS SDK.\n * @return {String} ID of the latest event that the given user has read, or null.\n */\nRoom.prototype.getEventReadUpTo = function(userId, ignoreSynthesized) {\n    let receipts = this._receipts;\n    if (ignoreSynthesized) {\n        receipts = this._realReceipts;\n    }\n\n    if (\n        receipts[\"m.read\"] === undefined ||\n        receipts[\"m.read\"][userId] === undefined\n    ) {\n        return null;\n    }\n\n    return receipts[\"m.read\"][userId].eventId;\n};\n\n/**\n * Get a list of receipts for the given event.\n * @param {MatrixEvent} event the event to get receipts for\n * @return {Object[]} A list of receipts with a userId, type and data keys or\n * an empty list.\n */\nRoom.prototype.getReceiptsForEvent = function(event) {\n    return this._receiptCacheByEventId[event.getId()] || [];\n};\n\n/**\n * Add a receipt event to the room.\n * @param {MatrixEvent} event The m.receipt event.\n * @param {Boolean} fake True if this event is implicit\n */\nRoom.prototype.addReceipt = function(event, fake) {\n    // event content looks like:\n    // content: {\n    //   $event_id: {\n    //     $receipt_type: {\n    //       $user_id: {\n    //         ts: $timestamp\n    //       }\n    //     }\n    //   }\n    // }\n    if (fake === undefined) {\n        fake = false;\n    }\n    if (!fake) {\n        this._addReceiptsToStructure(event, this._realReceipts);\n        // we don't bother caching real receipts by event ID\n        // as there's nothing that would read it.\n    }\n    this._addReceiptsToStructure(event, this._receipts);\n    this._receiptCacheByEventId = this._buildReceiptCache(this._receipts);\n\n    // send events after we've regenerated the cache, otherwise things that\n    // listened for the event would read from a stale cache\n    this.emit(\"Room.receipt\", event, this);\n};\n\n/**\n * Add a receipt event to the room.\n * @param {MatrixEvent} event The m.receipt event.\n * @param {Object} receipts The object to add receipts to\n */\nRoom.prototype._addReceiptsToStructure = function(event, receipts) {\n    const self = this;\n    utils.keys(event.getContent()).forEach(function(eventId) {\n        utils.keys(event.getContent()[eventId]).forEach(function(receiptType) {\n            utils.keys(event.getContent()[eventId][receiptType]).forEach(\n            function(userId) {\n                const receipt = event.getContent()[eventId][receiptType][userId];\n\n                if (!receipts[receiptType]) {\n                    receipts[receiptType] = {};\n                }\n\n                const existingReceipt = receipts[receiptType][userId];\n\n                if (!existingReceipt) {\n                    receipts[receiptType][userId] = {};\n                } else {\n                    // we only want to add this receipt if we think it is later\n                    // than the one we already have. (This is managed\n                    // server-side, but because we synthesize RRs locally we\n                    // have to do it here too.)\n                    const ordering = self.getUnfilteredTimelineSet().compareEventOrdering(\n                        existingReceipt.eventId, eventId);\n                    if (ordering !== null && ordering >= 0) {\n                        return;\n                    }\n                }\n\n                receipts[receiptType][userId] = {\n                    eventId: eventId,\n                    data: receipt,\n                };\n            });\n        });\n    });\n};\n\n/**\n * Build and return a map of receipts by event ID\n * @param {Object} receipts A map of receipts\n * @return {Object} Map of receipts by event ID\n */\nRoom.prototype._buildReceiptCache = function(receipts) {\n    const receiptCacheByEventId = {};\n    utils.keys(receipts).forEach(function(receiptType) {\n        utils.keys(receipts[receiptType]).forEach(function(userId) {\n            const receipt = receipts[receiptType][userId];\n            if (!receiptCacheByEventId[receipt.eventId]) {\n                receiptCacheByEventId[receipt.eventId] = [];\n            }\n            receiptCacheByEventId[receipt.eventId].push({\n                userId: userId,\n                type: receiptType,\n                data: receipt.data,\n            });\n        });\n    });\n    return receiptCacheByEventId;\n};\n\n\n/**\n * Add a temporary local-echo receipt to the room to reflect in the\n * client the fact that we've sent one.\n * @param {string} userId The user ID if the receipt sender\n * @param {MatrixEvent} e The event that is to be acknowledged\n * @param {string} receiptType The type of receipt\n */\nRoom.prototype._addLocalEchoReceipt = function(userId, e, receiptType) {\n    this.addReceipt(synthesizeReceipt(userId, e, receiptType), true);\n};\n\n/**\n * Update the room-tag event for the room.  The previous one is overwritten.\n * @param {MatrixEvent} event the m.tag event\n */\nRoom.prototype.addTags = function(event) {\n    // event content looks like:\n    // content: {\n    //    tags: {\n    //       $tagName: { $metadata: $value },\n    //       $tagName: { $metadata: $value },\n    //    }\n    // }\n\n    // XXX: do we need to deep copy here?\n    this.tags = event.getContent().tags;\n\n    // XXX: we could do a deep-comparison to see if the tags have really\n    // changed - but do we want to bother?\n    this.emit(\"Room.tags\", event, this);\n};\n\n/**\n * Update the account_data events for this room, overwriting events of the same type.\n * @param {Array<MatrixEvent>} events an array of account_data events to add\n */\nRoom.prototype.addAccountData = function(events) {\n    for (let i = 0; i < events.length; i++) {\n        const event = events[i];\n        if (event.getType() === \"m.tag\") {\n            this.addTags(event);\n        }\n        this.accountData[event.getType()] = event;\n        this.emit(\"Room.accountData\", event, this);\n    }\n};\n\n/**\n * Access account_data event of given event type for this room\n * @param {string} type the type of account_data event to be accessed\n * @return {?MatrixEvent} the account_data event in question\n */\nRoom.prototype.getAccountData = function(type) {\n    return this.accountData[type];\n};\n\n/**\n * This is an internal method. Calculates the name of the room from the current\n * room state.\n * @param {Room} room The matrix room.\n * @param {string} userId The client's user ID. Used to filter room members\n * correctly.\n * @param {bool} ignoreRoomNameEvent Return the implicit room name that we'd see if there\n * was no m.room.name event.\n * @return {string} The calculated room name.\n */\nfunction calculateRoomName(room, userId, ignoreRoomNameEvent) {\n    if (!ignoreRoomNameEvent) {\n        // check for an alias, if any. for now, assume first alias is the\n        // official one.\n        const mRoomName = room.currentState.getStateEvents(\"m.room.name\", \"\");\n        if (mRoomName && mRoomName.getContent() && mRoomName.getContent().name) {\n            return mRoomName.getContent().name;\n        }\n    }\n\n    let alias = room.getCanonicalAlias();\n\n    if (!alias) {\n        const aliases = room.getAliases();\n\n        if (aliases.length) {\n            alias = aliases[0];\n        }\n    }\n    if (alias) {\n        return alias;\n    }\n\n    // get members that are NOT ourselves and are actually in the room.\n    const otherMembers = utils.filter(room.currentState.getMembers(), function(m) {\n        return (\n            m.userId !== userId && m.membership !== \"leave\" && m.membership !== \"ban\"\n        );\n    });\n    const allMembers = utils.filter(room.currentState.getMembers(), function(m) {\n        return (m.membership !== \"leave\");\n    });\n    const myMemberEventArray = utils.filter(room.currentState.getMembers(), function(m) {\n        return (m.userId == userId);\n    });\n    const myMemberEvent = (\n        (myMemberEventArray.length && myMemberEventArray[0].events) ?\n            myMemberEventArray[0].events.member.event : undefined\n    );\n\n    // TODO: Localisation\n    if (myMemberEvent && myMemberEvent.content.membership == \"invite\") {\n        if (room.currentState.getMember(myMemberEvent.sender)) {\n            // extract who invited us to the room\n            return \"Invite from \" + room.currentState.getMember(\n                myMemberEvent.sender,\n            ).name;\n        } else if (allMembers[0].events.member) {\n            // use the sender field from the invite event, although this only\n            // gets us the mxid\n            return \"Invite from \" + myMemberEvent.sender;\n        } else {\n            return \"Room Invite\";\n        }\n    }\n\n\n    if (otherMembers.length === 0) {\n        if (allMembers.length === 1) {\n            // self-chat, peeked room with 1 participant,\n            // or inbound invite, or outbound 3PID invite.\n            if (allMembers[0].userId === userId) {\n                const thirdPartyInvites =\n                    room.currentState.getStateEvents(\"m.room.third_party_invite\");\n                if (thirdPartyInvites && thirdPartyInvites.length > 0) {\n                    let name = \"Inviting \" +\n                               thirdPartyInvites[0].getContent().display_name;\n                    if (thirdPartyInvites.length > 1) {\n                        if (thirdPartyInvites.length == 2) {\n                            name += \" and \" +\n                                    thirdPartyInvites[1].getContent().display_name;\n                        } else {\n                            name += \" and \" +\n                                    thirdPartyInvites.length + \" others\";\n                        }\n                    }\n                    return name;\n                } else {\n                    return \"Empty room\";\n                }\n            } else {\n                return allMembers[0].name;\n            }\n        } else {\n            // there really isn't anyone in this room...\n            return \"Empty room\";\n        }\n    } else if (otherMembers.length === 1) {\n        return otherMembers[0].name;\n    } else if (otherMembers.length === 2) {\n        return (\n            otherMembers[0].name + \" and \" + otherMembers[1].name\n        );\n    } else {\n        return (\n            otherMembers[0].name + \" and \" + (otherMembers.length - 1) + \" others\"\n        );\n    }\n}\n\n/**\n * The Room class.\n */\nmodule.exports = Room;\n\n/**\n * Fires when an event we had previously received is redacted.\n *\n * (Note this is *not* fired when the redaction happens before we receive the\n * event).\n *\n * @event module:client~MatrixClient#\"Room.redaction\"\n * @param {MatrixEvent} event The matrix event which was redacted\n * @param {Room} room The room containing the redacted event\n */\n\n/**\n * Fires whenever the name of a room is updated.\n * @event module:client~MatrixClient#\"Room.name\"\n * @param {Room} room The room whose Room.name was updated.\n * @example\n * matrixClient.on(\"Room.name\", function(room){\n *   var newName = room.name;\n * });\n */\n\n/**\n * Fires whenever a receipt is received for a room\n * @event module:client~MatrixClient#\"Room.receipt\"\n * @param {event} event The receipt event\n * @param {Room} room The room whose receipts was updated.\n * @example\n * matrixClient.on(\"Room.receipt\", function(event, room){\n *   var receiptContent = event.getContent();\n * });\n */\n\n/**\n * Fires whenever a room's tags are updated.\n * @event module:client~MatrixClient#\"Room.tags\"\n * @param {event} event The tags event\n * @param {Room} room The room whose Room.tags was updated.\n * @example\n * matrixClient.on(\"Room.tags\", function(event, room){\n *   var newTags = event.getContent().tags;\n *   if (newTags[\"favourite\"]) showStar(room);\n * });\n */\n\n/**\n * Fires whenever a room's account_data is updated.\n * @event module:client~MatrixClient#\"Room.accountData\"\n * @param {event} event The account_data event\n * @param {Room} room The room whose account_data was updated.\n * @example\n * matrixClient.on(\"Room.accountData\", function(event, room){\n *   if (event.getType() === \"m.room.colorscheme\") {\n *       applyColorScheme(event.getContents());\n *   }\n * });\n */\n\n/**\n * Fires when the status of a transmitted event is updated.\n *\n * <p>When an event is first transmitted, a temporary copy of the event is\n * inserted into the timeline, with a temporary event id, and a status of\n * 'SENDING'.\n *\n * <p>Once the echo comes back from the server, the content of the event\n * (MatrixEvent.event) is replaced by the complete event from the homeserver,\n * thus updating its event id, as well as server-generated fields such as the\n * timestamp. Its status is set to null.\n *\n * <p>Once the /send request completes, if the remote echo has not already\n * arrived, the event is updated with a new event id and the status is set to\n * 'SENT'. The server-generated fields are of course not updated yet.\n *\n * <p>If the /send fails, In this case, the event's status is set to\n * 'NOT_SENT'. If it is later resent, the process starts again, setting the\n * status to 'SENDING'. Alternatively, the message may be cancelled, which\n * removes the event from the room, and sets the status to 'CANCELLED'.\n *\n * <p>This event is raised to reflect each of the transitions above.\n *\n * @event module:client~MatrixClient#\"Room.localEchoUpdated\"\n *\n * @param {MatrixEvent} event The matrix event which has been updated\n *\n * @param {Room} room The room containing the redacted event\n *\n * @param {string} oldEventId The previous event id (the temporary event id,\n *    except when updating a successfully-sent event when its echo arrives)\n *\n * @param {EventStatus} oldStatus The previous event status.\n */\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/**\n * @module models/search-result\n */\n\nconst EventContext = require(\"./event-context\");\nconst utils = require(\"../utils\");\n\n/**\n * Construct a new SearchResult\n *\n * @param {number} rank   where this SearchResult ranks in the results\n * @param {event-context.EventContext} eventContext  the matching event and its\n *    context\n *\n * @constructor\n */\nfunction SearchResult(rank, eventContext) {\n    this.rank = rank;\n    this.context = eventContext;\n}\n\n/**\n * Create a SearchResponse from the response to /search\n * @static\n * @param {Object} jsonObj\n * @param {function} eventMapper\n * @return {SearchResult}\n */\n\nSearchResult.fromJson = function(jsonObj, eventMapper) {\n    const jsonContext = jsonObj.context || {};\n    const events_before = jsonContext.events_before || [];\n    const events_after = jsonContext.events_after || [];\n\n    const context = new EventContext(eventMapper(jsonObj.result));\n\n    context.setPaginateToken(jsonContext.start, true);\n    context.addEvents(utils.map(events_before, eventMapper), true);\n    context.addEvents(utils.map(events_after, eventMapper), false);\n    context.setPaginateToken(jsonContext.end, false);\n\n    return new SearchResult(jsonObj.rank, context);\n};\n\n\n/**\n * The SearchResult class\n */\nmodule.exports = SearchResult;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * @module models/user\n */\n const EventEmitter = require(\"events\").EventEmitter;\n const utils = require(\"../utils\");\n\n/**\n * Construct a new User. A User must have an ID and can optionally have extra\n * information associated with it.\n * @constructor\n * @param {string} userId Required. The ID of this user.\n * @prop {string} userId The ID of the user.\n * @prop {Object} info The info object supplied in the constructor.\n * @prop {string} displayName The 'displayname' of the user if known.\n * @prop {string} avatarUrl The 'avatar_url' of the user if known.\n * @prop {string} presence The presence enum if known.\n * @prop {string} presenceStatusMsg The presence status message if known.\n * @prop {Number} lastActiveAgo The time elapsed in ms since the user interacted\n *                proactively with the server, or we saw a message from the user\n * @prop {Number} lastPresenceTs Timestamp (ms since the epoch) for when we last\n *                received presence data for this user.  We can subtract\n *                lastActiveAgo from this to approximate an absolute value for\n *                when a user was last active.\n * @prop {Boolean} currentlyActive Whether we should consider lastActiveAgo to be\n *               an approximation and that the user should be seen as active 'now'\n * @prop {Object} events The events describing this user.\n * @prop {MatrixEvent} events.presence The m.presence event for this user.\n */\nfunction User(userId) {\n    this.userId = userId;\n    this.presence = \"offline\";\n    this.presenceStatusMsg = null;\n    this.displayName = userId;\n    this.rawDisplayName = userId;\n    this.avatarUrl = null;\n    this.lastActiveAgo = 0;\n    this.lastPresenceTs = 0;\n    this.currentlyActive = false;\n    this.events = {\n        presence: null,\n        profile: null,\n    };\n    this._updateModifiedTime();\n}\nutils.inherits(User, EventEmitter);\n\n/**\n * Update this User with the given presence event. May fire \"User.presence\",\n * \"User.avatarUrl\" and/or \"User.displayName\" if this event updates this user's\n * properties.\n * @param {MatrixEvent} event The <code>m.presence</code> event.\n * @fires module:client~MatrixClient#event:\"User.presence\"\n * @fires module:client~MatrixClient#event:\"User.displayName\"\n * @fires module:client~MatrixClient#event:\"User.avatarUrl\"\n */\nUser.prototype.setPresenceEvent = function(event) {\n    if (event.getType() !== \"m.presence\") {\n        return;\n    }\n    const firstFire = this.events.presence === null;\n    this.events.presence = event;\n\n    const eventsToFire = [];\n    if (event.getContent().presence !== this.presence || firstFire) {\n        eventsToFire.push(\"User.presence\");\n    }\n    if (event.getContent().avatar_url &&\n        event.getContent().avatar_url !== this.avatarUrl) {\n        eventsToFire.push(\"User.avatarUrl\");\n    }\n    if (event.getContent().displayname &&\n        event.getContent().displayname !== this.displayName) {\n        eventsToFire.push(\"User.displayName\");\n    }\n    if (event.getContent().currently_active !== undefined &&\n        event.getContent().currently_active !== this.currentlyActive) {\n        eventsToFire.push(\"User.currentlyActive\");\n    }\n\n    this.presence = event.getContent().presence;\n    eventsToFire.push(\"User.lastPresenceTs\");\n\n    if (event.getContent().status_msg) {\n      this.presenceStatusMsg = event.getContent().status_msg;\n    }\n    if (event.getContent().displayname) {\n        this.displayName = event.getContent().displayname;\n    }\n    if (event.getContent().avatar_url) {\n        this.avatarUrl = event.getContent().avatar_url;\n    }\n    this.lastActiveAgo = event.getContent().last_active_ago;\n    this.lastPresenceTs = Date.now();\n    this.currentlyActive = event.getContent().currently_active;\n\n    this._updateModifiedTime();\n\n    for (let i = 0; i < eventsToFire.length; i++) {\n        this.emit(eventsToFire[i], event, this);\n    }\n};\n\n/**\n * Manually set this user's display name. No event is emitted in response to this\n * as there is no underlying MatrixEvent to emit with.\n * @param {string} name The new display name.\n */\nUser.prototype.setDisplayName = function(name) {\n    const oldName = this.displayName;\n    this.displayName = name;\n    if (name !== oldName) {\n        this._updateModifiedTime();\n    }\n};\n\n\n/**\n * Manually set this user's non-disambiguated display name. No event is emitted\n * in response to this as there is no underlying MatrixEvent to emit with.\n * @param {string} name The new display name.\n */\nUser.prototype.setRawDisplayName = function(name) {\n    this.rawDisplayName = name;\n};\n\n\n/**\n * Manually set this user's avatar URL. No event is emitted in response to this\n * as there is no underlying MatrixEvent to emit with.\n * @param {string} url The new avatar URL.\n */\nUser.prototype.setAvatarUrl = function(url) {\n    const oldUrl = this.avatarUrl;\n    this.avatarUrl = url;\n    if (url !== oldUrl) {\n        this._updateModifiedTime();\n    }\n};\n\n/**\n * Update the last modified time to the current time.\n */\nUser.prototype._updateModifiedTime = function() {\n    this._modified = Date.now();\n};\n\n/**\n * Get the timestamp when this User was last updated. This timestamp is\n * updated when this User receives a new Presence event which has updated a\n * property on this object. It is updated <i>before</i> firing events.\n * @return {number} The timestamp\n */\nUser.prototype.getLastModifiedTime = function() {\n    return this._modified;\n};\n\n/**\n * Get the absolute timestamp when this User was last known active on the server.\n * It is *NOT* accurate if this.currentlyActive is true.\n * @return {number} The timestamp\n */\nUser.prototype.getLastActiveTs = function() {\n    return this.lastPresenceTs - this.lastActiveAgo;\n};\n\n/**\n * The User class.\n */\nmodule.exports = User;\n\n/**\n * Fires whenever any user's lastPresenceTs changes,\n * ie. whenever any presence event is received for a user.\n * @event module:client~MatrixClient#\"User.lastPresenceTs\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {User} user The user whose User.lastPresenceTs changed.\n * @example\n * matrixClient.on(\"User.lastPresenceTs\", function(event, user){\n *   var newlastPresenceTs = user.lastPresenceTs;\n * });\n */\n\n/**\n * Fires whenever any user's presence changes.\n * @event module:client~MatrixClient#\"User.presence\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {User} user The user whose User.presence changed.\n * @example\n * matrixClient.on(\"User.presence\", function(event, user){\n *   var newPresence = user.presence;\n * });\n */\n\n/**\n * Fires whenever any user's currentlyActive changes.\n * @event module:client~MatrixClient#\"User.currentlyActive\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {User} user The user whose User.currentlyActive changed.\n * @example\n * matrixClient.on(\"User.currentlyActive\", function(event, user){\n *   var newCurrentlyActive = user.currentlyActive;\n * });\n */\n\n/**\n * Fires whenever any user's display name changes.\n * @event module:client~MatrixClient#\"User.displayName\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {User} user The user whose User.displayName changed.\n * @example\n * matrixClient.on(\"User.displayName\", function(event, user){\n *   var newName = user.displayName;\n * });\n */\n\n/**\n * Fires whenever any user's avatar URL changes.\n * @event module:client~MatrixClient#\"User.avatarUrl\"\n * @param {MatrixEvent} event The matrix event which caused this event to fire.\n * @param {User} user The user whose User.avatarUrl changed.\n * @example\n * matrixClient.on(\"User.avatarUrl\", function(event, user){\n *   var newUrl = user.avatarUrl;\n * });\n */\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * @module pushprocessor\n */\n\n/**\n * Construct a Push Processor.\n * @constructor\n * @param {Object} client The Matrix client object to use\n */\nfunction PushProcessor(client) {\n    const escapeRegExp = function(string) {\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    };\n\n    const matchingRuleFromKindSet = function(ev, kindset, device) {\n        const rulekinds_in_order = ['override', 'content', 'room', 'sender', 'underride'];\n        for (let ruleKindIndex = 0;\n                ruleKindIndex < rulekinds_in_order.length;\n                ++ruleKindIndex) {\n            const kind = rulekinds_in_order[ruleKindIndex];\n            const ruleset = kindset[kind];\n\n            for (let ruleIndex = 0; ruleIndex < ruleset.length; ++ruleIndex) {\n                const rule = ruleset[ruleIndex];\n                if (!rule.enabled) {\n                    continue;\n                }\n\n                const rawrule = templateRuleToRaw(kind, rule, device);\n                if (!rawrule) {\n                    continue;\n                }\n\n                if (ruleMatchesEvent(rawrule, ev)) {\n                    rule.kind = kind;\n                    return rule;\n                }\n            }\n        }\n        return null;\n    };\n\n    const templateRuleToRaw = function(kind, tprule, device) {\n        const rawrule = {\n            'rule_id': tprule.rule_id,\n            'actions': tprule.actions,\n            'conditions': [],\n        };\n        switch (kind) {\n            case 'underride':\n            case 'override':\n                rawrule.conditions = tprule.conditions;\n                break;\n            case 'room':\n                if (!tprule.rule_id) {\n                    return null;\n                }\n                rawrule.conditions.push({\n                    'kind': 'event_match',\n                    'key': 'room_id',\n                    'pattern': tprule.rule_id,\n                });\n                break;\n            case 'sender':\n                if (!tprule.rule_id) {\n                    return null;\n                }\n                rawrule.conditions.push({\n                    'kind': 'event_match',\n                    'key': 'user_id',\n                    'pattern': tprule.rule_id,\n                });\n                break;\n            case 'content':\n                if (!tprule.pattern) {\n                    return null;\n                }\n                rawrule.conditions.push({\n                    'kind': 'event_match',\n                    'key': 'content.body',\n                    'pattern': tprule.pattern,\n                });\n                break;\n        }\n        if (device) {\n            rawrule.conditions.push({\n                'kind': 'device',\n                'profile_tag': device,\n            });\n        }\n        return rawrule;\n    };\n\n    const ruleMatchesEvent = function(rule, ev) {\n        let ret = true;\n        for (let i = 0; i < rule.conditions.length; ++i) {\n            const cond = rule.conditions[i];\n            ret &= eventFulfillsCondition(cond, ev);\n        }\n        //console.log(\"Rule \"+rule.rule_id+(ret ? \" matches\" : \" doesn't match\"));\n        return ret;\n    };\n\n    const eventFulfillsCondition = function(cond, ev) {\n        const condition_functions = {\n            \"event_match\": eventFulfillsEventMatchCondition,\n            \"device\": eventFulfillsDeviceCondition,\n            \"contains_display_name\": eventFulfillsDisplayNameCondition,\n            \"room_member_count\": eventFulfillsRoomMemberCountCondition,\n        };\n        if (condition_functions[cond.kind]) {\n            return condition_functions[cond.kind](cond, ev);\n        }\n        return true;\n    };\n\n    const eventFulfillsRoomMemberCountCondition = function(cond, ev) {\n        if (!cond.is) {\n            return false;\n        }\n\n        const room = client.getRoom(ev.getRoomId());\n        if (!room || !room.currentState || !room.currentState.members) {\n            return false;\n        }\n\n        const memberCount = Object.keys(room.currentState.members).filter(function(m) {\n            return room.currentState.members[m].membership == 'join';\n        }).length;\n\n        const m = cond.is.match(/^([=<>]*)([0-9]*)$/);\n        if (!m) {\n            return false;\n        }\n        const ineq = m[1];\n        const rhs = parseInt(m[2]);\n        if (isNaN(rhs)) {\n            return false;\n        }\n        switch (ineq) {\n            case '':\n            case '==':\n                return memberCount == rhs;\n            case '<':\n                return memberCount < rhs;\n            case '>':\n                return memberCount > rhs;\n            case '<=':\n                return memberCount <= rhs;\n            case '>=':\n                return memberCount >= rhs;\n            default:\n                return false;\n        }\n    };\n\n    const eventFulfillsDisplayNameCondition = function(cond, ev) {\n        const content = ev.getContent();\n        if (!content || !content.body || typeof content.body != 'string') {\n            return false;\n        }\n\n        const room = client.getRoom(ev.getRoomId());\n        if (!room || !room.currentState || !room.currentState.members ||\n            !room.currentState.getMember(client.credentials.userId)) {\n            return false;\n        }\n\n        const displayName = room.currentState.getMember(client.credentials.userId).name;\n\n        // N.B. we can't use \\b as it chokes on unicode. however \\W seems to be okay\n        // as shorthand for [^0-9A-Za-z_].\n        const pat = new RegExp(\"(^|\\\\W)\" + escapeRegExp(displayName) + \"(\\\\W|$)\", 'i');\n        return content.body.search(pat) > -1;\n    };\n\n    const eventFulfillsDeviceCondition = function(cond, ev) {\n        return false; // XXX: Allow a profile tag to be set for the web client instance\n    };\n\n    const eventFulfillsEventMatchCondition = function(cond, ev) {\n        const val = valueForDottedKey(cond.key, ev);\n        if (!val || typeof val != 'string') {\n            return false;\n        }\n\n        let pat;\n        if (cond.key == 'content.body') {\n            pat = '(^|\\\\W)' + globToRegexp(cond.pattern) + '(\\\\W|$)';\n        } else {\n            pat = '^' + globToRegexp(cond.pattern) + '$';\n        }\n        const regex = new RegExp(pat, 'i');\n        return !!val.match(regex);\n    };\n\n    const globToRegexp = function(glob) {\n        // From\n        // https://github.com/matrix-org/synapse/blob/abbee6b29be80a77e05730707602f3bbfc3f38cb/synapse/push/__init__.py#L132\n        // Because micromatch is about 130KB with dependencies,\n        // and minimatch is not much better.\n        let pat = escapeRegExp(glob);\n        pat = pat.replace(/\\\\\\*/, '.*');\n        pat = pat.replace(/\\?/, '.');\n        pat = pat.replace(/\\\\\\[(!|)(.*)\\\\]/, function(match, p1, p2, offset, string) {\n            const first = p1 && '^' || '';\n            const second = p2.replace(/\\\\\\-/, '-');\n            return '[' + first + second + ']';\n        });\n        return pat;\n    };\n\n    const valueForDottedKey = function(key, ev) {\n        const parts = key.split('.');\n        let val;\n\n        // special-case the first component to deal with encrypted messages\n        const firstPart = parts[0];\n        if (firstPart == 'content') {\n            val = ev.getContent();\n            parts.shift();\n        } else if (firstPart == 'type') {\n            val = ev.getType();\n            parts.shift();\n        } else {\n            // use the raw event for any other fields\n            val = ev.event;\n        }\n\n        while (parts.length > 0) {\n            const thispart = parts.shift();\n            if (!val[thispart]) {\n                return null;\n            }\n            val = val[thispart];\n        }\n        return val;\n    };\n\n    const matchingRuleForEventWithRulesets = function(ev, rulesets) {\n        if (!rulesets || !rulesets.device) {\n            return null;\n        }\n        if (ev.getSender() == client.credentials.userId) {\n            return null;\n        }\n\n        const allDevNames = Object.keys(rulesets.device);\n        for (let i = 0; i < allDevNames.length; ++i) {\n            const devname = allDevNames[i];\n            const devrules = rulesets.device[devname];\n\n            const matchingRule = matchingRuleFromKindSet(devrules, devname);\n            if (matchingRule) {\n                return matchingRule;\n            }\n        }\n        return matchingRuleFromKindSet(ev, rulesets.global);\n    };\n\n    const pushActionsForEventAndRulesets = function(ev, rulesets) {\n        const rule = matchingRuleForEventWithRulesets(ev, rulesets);\n        if (!rule) {\n            return {};\n        }\n\n        const actionObj = PushProcessor.actionListToActionsObject(rule.actions);\n\n        // Some actions are implicit in some situations: we add those here\n        if (actionObj.tweaks.highlight === undefined) {\n            // if it isn't specified, highlight if it's a content\n            // rule but otherwise not\n            actionObj.tweaks.highlight = (rule.kind == 'content');\n        }\n\n        return actionObj;\n    };\n\n    /**\n     * Get the user's push actions for the given event\n     *\n     * @param {module:models/event.MatrixEvent} ev\n     *\n     * @return {PushAction}\n     */\n    this.actionsForEvent = function(ev) {\n        return pushActionsForEventAndRulesets(ev, client.pushRules);\n    };\n}\n\n/**\n * Convert a list of actions into a object with the actions as keys and their values\n * eg. [ 'notify', { set_tweak: 'sound', value: 'default' } ]\n *     becomes { notify: true, tweaks: { sound: 'default' } }\n * @param {array} actionlist The actions list\n *\n * @return {object} A object with key 'notify' (true or false) and an object of actions\n */\nPushProcessor.actionListToActionsObject = function(actionlist) {\n    const actionobj = { 'notify': false, 'tweaks': {} };\n    for (let i = 0; i < actionlist.length; ++i) {\n        const action = actionlist[i];\n        if (action === 'notify') {\n            actionobj.notify = true;\n        } else if (typeof action === 'object') {\n            if (action.value === undefined) {\n                action.value = true;\n            }\n            actionobj.tweaks[action.set_tweak] = action.value;\n        }\n    }\n    return actionobj;\n};\n\n/**\n * @typedef {Object} PushAction\n * @type {Object}\n * @property {boolean} notify Whether this event should notify the user or not.\n * @property {Object} tweaks How this event should be notified.\n * @property {boolean} tweaks.highlight Whether this event should be highlighted\n * on the UI.\n * @property {boolean} tweaks.sound Whether this notification should produce a\n * noise.\n */\n\n/** The PushProcessor class. */\nmodule.exports = PushProcessor;\n\n","/*\nCopyright 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/* A re-implementation of the javascript callback functions (setTimeout,\n * clearTimeout; setInterval and clearInterval are not yet implemented) which\n * try to improve handling of large clock jumps (as seen when\n * suspending/resuming the system).\n *\n * In particular, if a timeout would have fired while the system was suspended,\n * it will instead fire as soon as possible after resume.\n */\n\n\"use strict\";\n\n// we schedule a callback at least this often, to check if we've missed out on\n// some wall-clock time due to being suspended.\nconst TIMER_CHECK_PERIOD_MS = 1000;\n\n// counter, for making up ids to return from setTimeout\nlet _count = 0;\n\n// the key for our callback with the real global.setTimeout\nlet _realCallbackKey;\n\n// a sorted list of the callbacks to be run.\n// each is an object with keys [runAt, func, params, key].\nconst _callbackList = [];\n\n// var debuglog = console.log.bind(console);\nconst debuglog = function() {};\n\n/**\n * Replace the function used by this module to get the current time.\n *\n * Intended for use by the unit tests.\n *\n * @param {function} f function which should return a millisecond counter\n *\n * @internal\n */\nmodule.exports.setNow = function(f) {\n    _now = f || Date.now;\n};\nlet _now = Date.now;\n\n/**\n * reimplementation of window.setTimeout, which will call the callback if\n * the wallclock time goes past the deadline.\n *\n * @param {function} func   callback to be called after a delay\n * @param {Number} delayMs  number of milliseconds to delay by\n *\n * @return {Number} an identifier for this callback, which may be passed into\n *                   clearTimeout later.\n */\nmodule.exports.setTimeout = function(func, delayMs) {\n    delayMs = delayMs || 0;\n    if (delayMs < 0) {\n        delayMs = 0;\n    }\n\n    const params = Array.prototype.slice.call(arguments, 2);\n    const runAt = _now() + delayMs;\n    const key = _count++;\n    debuglog(\"setTimeout: scheduling cb\", key, \"at\", runAt,\n             \"(delay\", delayMs, \")\");\n    const data = {\n        runAt: runAt,\n        func: func,\n        params: params,\n        key: key,\n    };\n\n    // figure out where it goes in the list\n    const idx = binarySearch(\n        _callbackList, function(el) {\n            return el.runAt - runAt;\n        },\n    );\n\n    _callbackList.splice(idx, 0, data);\n    _scheduleRealCallback();\n\n    return key;\n};\n\n/**\n * reimplementation of window.clearTimeout, which mirrors setTimeout\n *\n * @param {Number} key   result from an earlier setTimeout call\n */\nmodule.exports.clearTimeout = function(key) {\n    if (_callbackList.length === 0) {\n        return;\n    }\n\n    // remove the element from the list\n    let i;\n    for (i = 0; i < _callbackList.length; i++) {\n        const cb = _callbackList[i];\n        if (cb.key == key) {\n            _callbackList.splice(i, 1);\n            break;\n        }\n    }\n\n    // iff it was the first one in the list, reschedule our callback.\n    if (i === 0) {\n        _scheduleRealCallback();\n    }\n};\n\n// use the real global.setTimeout to schedule a callback to _runCallbacks.\nfunction _scheduleRealCallback() {\n    if (_realCallbackKey) {\n        global.clearTimeout(_realCallbackKey);\n    }\n\n    const first = _callbackList[0];\n\n    if (!first) {\n        debuglog(\"_scheduleRealCallback: no more callbacks, not rescheduling\");\n        return;\n    }\n\n    const now = _now();\n    const delayMs = Math.min(first.runAt - now, TIMER_CHECK_PERIOD_MS);\n\n    debuglog(\"_scheduleRealCallback: now:\", now, \"delay:\", delayMs);\n    _realCallbackKey = global.setTimeout(_runCallbacks, delayMs);\n}\n\nfunction _runCallbacks() {\n    let cb;\n    const now = _now();\n    debuglog(\"_runCallbacks: now:\", now);\n\n    // get the list of things to call\n    const callbacksToRun = [];\n    while (true) {\n        const first = _callbackList[0];\n        if (!first || first.runAt > now) {\n            break;\n        }\n        cb = _callbackList.shift();\n        debuglog(\"_runCallbacks: popping\", cb.key);\n        callbacksToRun.push(cb);\n    }\n\n    // reschedule the real callback before running our functions, to\n    // keep the codepaths the same whether or not our functions\n    // register their own setTimeouts.\n    _scheduleRealCallback();\n\n    for (let i = 0; i < callbacksToRun.length; i++) {\n        cb = callbacksToRun[i];\n        try {\n            cb.func.apply(global, cb.params);\n        } catch (e) {\n            console.error(\"Uncaught exception in callback function\",\n                          e.stack || e);\n        }\n    }\n}\n\n\n/* search in a sorted array.\n *\n * returns the index of the last element for which func returns\n * greater than zero, or array.length if no such element exists.\n */\nfunction binarySearch(array, func) {\n    // min is inclusive, max exclusive.\n    let min = 0,\n        max = array.length;\n\n    while (min < max) {\n        const mid = (min + max) >> 1;\n        const res = func(array[mid]);\n        if (res > 0) {\n            // the element at 'mid' is too big; set it as the new max.\n            max = mid;\n        } else {\n            // the element at 'mid' is too small. 'min' is inclusive, so +1.\n            min = mid + 1;\n        }\n    }\n    // presumably, min==max now.\n    return min;\n}\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * This is an internal module which manages queuing, scheduling and retrying\n * of requests.\n * @module scheduler\n */\nconst utils = require(\"./utils\");\nimport Promise from 'bluebird';\n\nconst DEBUG = false;  // set true to enable console logging.\n\n/**\n * Construct a scheduler for Matrix. Requires\n * {@link module:scheduler~MatrixScheduler#setProcessFunction} to be provided\n * with a way of processing events.\n * @constructor\n * @param {module:scheduler~retryAlgorithm} retryAlgorithm Optional. The retry\n * algorithm to apply when determining when to try to send an event again.\n * Defaults to {@link module:scheduler~MatrixScheduler.RETRY_BACKOFF_RATELIMIT}.\n * @param {module:scheduler~queueAlgorithm} queueAlgorithm Optional. The queuing\n * algorithm to apply when determining which events should be sent before the\n * given event. Defaults to {@link module:scheduler~MatrixScheduler.QUEUE_MESSAGES}.\n */\nfunction MatrixScheduler(retryAlgorithm, queueAlgorithm) {\n    this.retryAlgorithm = retryAlgorithm || MatrixScheduler.RETRY_BACKOFF_RATELIMIT;\n    this.queueAlgorithm = queueAlgorithm || MatrixScheduler.QUEUE_MESSAGES;\n    this._queues = {\n        // queueName: [{\n        //  event: MatrixEvent,  // event to send\n        //  defer: Deferred,  // defer to resolve/reject at the END of the retries\n        //  attempts: Number  // number of times we've called processFn\n        // }, ...]\n    };\n    this._activeQueues = [];\n    this._procFn = null;\n}\n\n/**\n * Retrieve a queue based on an event. The event provided does not need to be in\n * the queue.\n * @param {MatrixEvent} event An event to get the queue for.\n * @return {?Array<MatrixEvent>} A shallow copy of events in the queue or null.\n * Modifying this array will not modify the list itself. Modifying events in\n * this array <i>will</i> modify the underlying event in the queue.\n * @see MatrixScheduler.removeEventFromQueue To remove an event from the queue.\n */\nMatrixScheduler.prototype.getQueueForEvent = function(event) {\n    const name = this.queueAlgorithm(event);\n    if (!name || !this._queues[name]) {\n        return null;\n    }\n    return utils.map(this._queues[name], function(obj) {\n        return obj.event;\n    });\n};\n\n/**\n * Remove this event from the queue. The event is equal to another event if they\n * have the same ID returned from event.getId().\n * @param {MatrixEvent} event The event to remove.\n * @return {boolean} True if this event was removed.\n */\nMatrixScheduler.prototype.removeEventFromQueue = function(event) {\n    const name = this.queueAlgorithm(event);\n    if (!name || !this._queues[name]) {\n        return false;\n    }\n    let removed = false;\n    utils.removeElement(this._queues[name], function(element) {\n        if (element.event.getId() === event.getId()) {\n            // XXX we should probably reject the promise?\n            // https://github.com/matrix-org/matrix-js-sdk/issues/496\n            removed = true;\n            return true;\n        }\n    });\n    return removed;\n};\n\n\n/**\n * Set the process function. Required for events in the queue to be processed.\n * If set after events have been added to the queue, this will immediately start\n * processing them.\n * @param {module:scheduler~processFn} fn The function that can process events\n * in the queue.\n */\nMatrixScheduler.prototype.setProcessFunction = function(fn) {\n    this._procFn = fn;\n    _startProcessingQueues(this);\n};\n\n/**\n * Queue an event if it is required and start processing queues.\n * @param {MatrixEvent} event The event that may be queued.\n * @return {?Promise} A promise if the event was queued, which will be\n * resolved or rejected in due time, else null.\n */\nMatrixScheduler.prototype.queueEvent = function(event) {\n    const queueName = this.queueAlgorithm(event);\n    if (!queueName) {\n        return null;\n    }\n    // add the event to the queue and make a deferred for it.\n    if (!this._queues[queueName]) {\n        this._queues[queueName] = [];\n    }\n    const defer = Promise.defer();\n    this._queues[queueName].push({\n        event: event,\n        defer: defer,\n        attempts: 0,\n    });\n    debuglog(\n        \"Queue algorithm dumped event %s into queue '%s'\",\n        event.getId(), queueName,\n    );\n    _startProcessingQueues(this);\n    return defer.promise;\n};\n\n/**\n * Retries events up to 4 times using exponential backoff. This produces wait\n * times of 2, 4, 8, and 16 seconds (30s total) after which we give up. If the\n * failure was due to a rate limited request, the time specified in the error is\n * waited before being retried.\n * @param {MatrixEvent} event\n * @param {Number} attempts\n * @param {MatrixError} err\n * @return {Number}\n * @see module:scheduler~retryAlgorithm\n */\nMatrixScheduler.RETRY_BACKOFF_RATELIMIT = function(event, attempts, err) {\n    if (err.httpStatus === 400 || err.httpStatus === 403 || err.httpStatus === 401) {\n        // client error; no amount of retrying with save you now.\n        return -1;\n    }\n    // we ship with browser-request which returns { cors: rejected } when trying\n    // with no connection, so if we match that, give up since they have no conn.\n    if (err.cors === \"rejected\") {\n        return -1;\n    }\n\n    if (err.name === \"M_LIMIT_EXCEEDED\") {\n        const waitTime = err.data.retry_after_ms;\n        if (waitTime) {\n            return waitTime;\n        }\n    }\n    if (attempts > 4) {\n        return -1; // give up\n    }\n    return (1000 * Math.pow(2, attempts));\n};\n\n/**\n * Queues <code>m.room.message</code> events and lets other events continue\n * concurrently.\n * @param {MatrixEvent} event\n * @return {string}\n * @see module:scheduler~queueAlgorithm\n */\nMatrixScheduler.QUEUE_MESSAGES = function(event) {\n    if (event.getType() === \"m.room.message\") {\n        // put these events in the 'message' queue.\n        return \"message\";\n    }\n    // allow all other events continue concurrently.\n    return null;\n};\n\nfunction _startProcessingQueues(scheduler) {\n    if (!scheduler._procFn) {\n        return;\n    }\n    // for each inactive queue with events in them\n    utils.forEach(utils.filter(utils.keys(scheduler._queues), function(queueName) {\n        return scheduler._activeQueues.indexOf(queueName) === -1 &&\n                scheduler._queues[queueName].length > 0;\n    }), function(queueName) {\n        // mark the queue as active\n        scheduler._activeQueues.push(queueName);\n        // begin processing the head of the queue\n        debuglog(\"Spinning up queue: '%s'\", queueName);\n        _processQueue(scheduler, queueName);\n    });\n}\n\nfunction _processQueue(scheduler, queueName) {\n    // get head of queue\n    const obj = _peekNextEvent(scheduler, queueName);\n    if (!obj) {\n        // queue is empty. Mark as inactive and stop recursing.\n        const index = scheduler._activeQueues.indexOf(queueName);\n        if (index >= 0) {\n            scheduler._activeQueues.splice(index, 1);\n        }\n        debuglog(\"Stopping queue '%s' as it is now empty\", queueName);\n        return;\n    }\n    debuglog(\n        \"Queue '%s' has %s pending events\",\n        queueName, scheduler._queues[queueName].length,\n    );\n    // fire the process function and if it resolves, resolve the deferred. Else\n    // invoke the retry algorithm.\n    scheduler._procFn(obj.event).done(function(res) {\n        // remove this from the queue\n        _removeNextEvent(scheduler, queueName);\n        debuglog(\"Queue '%s' sent event %s\", queueName, obj.event.getId());\n        obj.defer.resolve(res);\n        // keep processing\n        _processQueue(scheduler, queueName);\n    }, function(err) {\n        obj.attempts += 1;\n        // ask the retry algorithm when/if we should try again\n        const waitTimeMs = scheduler.retryAlgorithm(obj.event, obj.attempts, err);\n        debuglog(\n            \"retry(%s) err=%s event_id=%s waitTime=%s\",\n            obj.attempts, err, obj.event.getId(), waitTimeMs,\n        );\n        if (waitTimeMs === -1) {  // give up (you quitter!)\n            debuglog(\n                \"Queue '%s' giving up on event %s\", queueName, obj.event.getId(),\n            );\n            // remove this from the queue\n            _removeNextEvent(scheduler, queueName);\n            obj.defer.reject(err);\n            // process next event\n            _processQueue(scheduler, queueName);\n        } else {\n            setTimeout(function() {\n                _processQueue(scheduler, queueName);\n            }, waitTimeMs);\n        }\n    });\n}\n\nfunction _peekNextEvent(scheduler, queueName) {\n    const queue = scheduler._queues[queueName];\n    if (!utils.isArray(queue)) {\n        return null;\n    }\n    return queue[0];\n}\n\nfunction _removeNextEvent(scheduler, queueName) {\n    const queue = scheduler._queues[queueName];\n    if (!utils.isArray(queue)) {\n        return null;\n    }\n    return queue.shift();\n}\n\nfunction debuglog() {\n    if (DEBUG) {\n        console.log(...arguments);\n    }\n}\n\n/**\n * The retry algorithm to apply when retrying events. To stop retrying, return\n * <code>-1</code>. If this event was part of a queue, it will be removed from\n * the queue.\n * @callback retryAlgorithm\n * @param {MatrixEvent} event The event being retried.\n * @param {Number} attempts The number of failed attempts. This will always be\n * >= 1.\n * @param {MatrixError} err The most recent error message received when trying\n * to send this event.\n * @return {Number} The number of milliseconds to wait before trying again. If\n * this is 0, the request will be immediately retried. If this is\n * <code>-1</code>, the event will be marked as\n * {@link module:models/event.EventStatus.NOT_SENT} and will not be retried.\n */\n\n/**\n * The queuing algorithm to apply to events. This function must be idempotent as\n * it may be called multiple times with the same event. All queues created are\n * serviced in a FIFO manner. To send the event ASAP, return <code>null</code>\n * which will not put this event in a queue. Events that fail to send that form\n * part of a queue will be removed from the queue and the next event in the\n * queue will be sent.\n * @callback queueAlgorithm\n * @param {MatrixEvent} event The event to be sent.\n * @return {string} The name of the queue to put the event into. If a queue with\n * this name does not exist, it will be created. If this is <code>null</code>,\n * the event is not put into a queue and will be sent concurrently.\n */\n\n /**\n * The function to invoke to process (send) events in the queue.\n * @callback processFn\n * @param {MatrixEvent} event The event to send.\n * @return {Promise} Resolved/rejected depending on the outcome of the request.\n */\n\n/**\n * The MatrixScheduler class.\n */\nmodule.exports = MatrixScheduler;\n","/*\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport Promise from 'bluebird';\nimport SyncAccumulator from \"../sync-accumulator\";\nimport utils from \"../utils\";\n\nconst VERSION = 1;\n\nfunction createDatabase(db) {\n    // Make user store, clobber based on user ID. (userId property of User objects)\n    db.createObjectStore(\"users\", { keyPath: [\"userId\"] });\n\n    // Make account data store, clobber based on event type.\n    // (event.type property of MatrixEvent objects)\n    db.createObjectStore(\"accountData\", { keyPath: [\"type\"] });\n\n    // Make /sync store (sync tokens, room data, etc), always clobber (const key).\n    db.createObjectStore(\"sync\", { keyPath: [\"clobber\"] });\n}\n\n/**\n * Helper method to collect results from a Cursor and promiseify it.\n * @param {ObjectStore|Index} store The store to perform openCursor on.\n * @param {IDBKeyRange=} keyRange Optional key range to apply on the cursor.\n * @param {Function} resultMapper A function which is repeatedly called with a\n * Cursor.\n * Return the data you want to keep.\n * @return {Promise<T[]>} Resolves to an array of whatever you returned from\n * resultMapper.\n */\nfunction selectQuery(store, keyRange, resultMapper) {\n    const query = store.openCursor(keyRange);\n    return new Promise((resolve, reject) => {\n        const results = [];\n        query.onerror = (event) => {\n            reject(new Error(\"Query failed: \" + event.target.errorCode));\n        };\n        // collect results\n        query.onsuccess = (event) => {\n            const cursor = event.target.result;\n            if (!cursor) {\n                resolve(results);\n                return; // end of results\n            }\n            results.push(resultMapper(cursor));\n            cursor.continue();\n        };\n    });\n}\n\nfunction promiseifyTxn(txn) {\n    return new Promise((resolve, reject) => {\n        txn.oncomplete = function(event) {\n            resolve(event);\n        };\n        txn.onerror = function(event) {\n            reject(event);\n        };\n    });\n}\n\nfunction promiseifyRequest(req) {\n    return new Promise((resolve, reject) => {\n        req.onsuccess = function(event) {\n            resolve(event);\n        };\n        req.onerror = function(event) {\n            reject(event);\n        };\n    });\n}\n\n/**\n * Does the actual reading from and writing to the indexeddb\n *\n * Construct a new Indexed Database store backend. This requires a call to\n * <code>connect()</code> before this store can be used.\n * @constructor\n * @param {Object} indexedDBInterface The Indexed DB interface e.g\n * <code>window.indexedDB</code>\n * @param {string=} dbName Optional database name. The same name must be used\n * to open the same database.\n */\nconst LocalIndexedDBStoreBackend = function LocalIndexedDBStoreBackend(\n    indexedDBInterface, dbName,\n) {\n    this.indexedDB = indexedDBInterface;\n    this._dbName = \"matrix-js-sdk:\" + (dbName || \"default\");\n    this.db = null;\n    this._syncAccumulator = new SyncAccumulator();\n};\n\n\nLocalIndexedDBStoreBackend.prototype = {\n    /**\n     * Attempt to connect to the database. This can fail if the user does not\n     * grant permission.\n     * @return {Promise} Resolves if successfully connected.\n     */\n    connect: function() {\n        if (this.db) {\n            console.log(\n                `LocalIndexedDBStoreBackend.connect: already connected`,\n            );\n            return Promise.resolve();\n        }\n\n        console.log(\n            `LocalIndexedDBStoreBackend.connect: connecting`,\n        );\n        const req = this.indexedDB.open(this._dbName, VERSION);\n        req.onupgradeneeded = (ev) => {\n            const db = ev.target.result;\n            const oldVersion = ev.oldVersion;\n            console.log(\n                `LocalIndexedDBStoreBackend.connect: upgrading from ${oldVersion}`,\n            );\n            if (oldVersion < 1) { // The database did not previously exist.\n                createDatabase(db);\n            }\n            // Expand as needed.\n        };\n\n        req.onblocked = () => {\n            console.log(\n                `can't yet open LocalIndexedDBStoreBackend because it is open elsewhere`,\n            );\n        };\n\n        console.log(\n            `LocalIndexedDBStoreBackend.connect: awaiting connection`,\n        );\n        return promiseifyRequest(req).then((ev) => {\n            console.log(\n                `LocalIndexedDBStoreBackend.connect: connected`,\n            );\n            this.db = ev.target.result;\n\n            // add a poorly-named listener for when deleteDatabase is called\n            // so we can close our db connections.\n            this.db.onversionchange = () => {\n                this.db.close();\n            };\n\n            return this._init();\n        });\n    },\n\n    /**\n     * Having connected, load initial data from the database and prepare for use\n     * @return {Promise} Resolves on success\n     */\n    _init: function() {\n        return Promise.all([\n            this._loadAccountData(),\n            this._loadSyncData(),\n        ]).then(([accountData, syncData]) => {\n            console.log(\n                `LocalIndexedDBStoreBackend: loaded initial data`,\n            );\n            this._syncAccumulator.accumulate({\n                next_batch: syncData.nextBatch,\n                rooms: syncData.roomsData,\n                groups: syncData.groupsData,\n                account_data: {\n                    events: accountData,\n                },\n            });\n        });\n    },\n\n    /**\n     * Clear the entire database. This should be used when logging out of a client\n     * to prevent mixing data between accounts.\n     * @return {Promise} Resolved when the database is cleared.\n     */\n    clearDatabase: function() {\n        return new Promise((resolve, reject) => {\n            console.log(`Removing indexeddb instance: ${this._dbName}`);\n            const req = this.indexedDB.deleteDatabase(this._dbName);\n\n            req.onblocked = () => {\n                console.log(\n                    `can't yet delete indexeddb ${this._dbName}` +\n                    ` because it is open elsewhere`,\n                );\n            };\n\n            req.onerror = (ev) => {\n                // in firefox, with indexedDB disabled, this fails with a\n                // DOMError. We treat this as non-fatal, so that we can still\n                // use the app.\n                console.warn(\n                    `unable to delete js-sdk store indexeddb: ${ev.target.error}`,\n                );\n                resolve();\n            };\n\n            req.onsuccess = () => {\n                console.log(`Removed indexeddb instance: ${this._dbName}`);\n                resolve();\n            };\n        });\n    },\n\n    /**\n     * @param {boolean=} copy If false, the data returned is from internal\n     * buffers and must not be muated. Otherwise, a copy is made before\n     * returning such that the data can be safely mutated. Default: true.\n     *\n     * @return {Promise} Resolves with a sync response to restore the\n     * client state to where it was at the last save, or null if there\n     * is no saved sync data.\n     */\n    getSavedSync: function(copy) {\n        if (copy === undefined) copy = true;\n\n        const data = this._syncAccumulator.getJSON();\n        if (!data.nextBatch) return Promise.resolve(null);\n        if (copy) {\n            // We must deep copy the stored data so that the /sync processing code doesn't\n            // corrupt the internal state of the sync accumulator (it adds non-clonable keys)\n            return Promise.resolve(utils.deepCopy(data));\n        } else {\n            return Promise.resolve(data);\n        }\n    },\n\n    setSyncData: function(syncData) {\n        return Promise.resolve().then(() => {\n            this._syncAccumulator.accumulate(syncData);\n        });\n    },\n\n    syncToDatabase: function(userTuples) {\n        const syncData = this._syncAccumulator.getJSON();\n\n        return Promise.all([\n            this._persistUserPresenceEvents(userTuples),\n            this._persistAccountData(syncData.accountData),\n            this._persistSyncData(\n                syncData.nextBatch, syncData.roomsData, syncData.groupsData,\n            ),\n        ]);\n    },\n\n    /**\n     * Persist rooms /sync data along with the next batch token.\n     * @param {string} nextBatch The next_batch /sync value.\n     * @param {Object} roomsData The 'rooms' /sync data from a SyncAccumulator\n     * @param {Object} groupsData The 'groups' /sync data from a SyncAccumulator\n     * @return {Promise} Resolves if the data was persisted.\n     */\n    _persistSyncData: function(nextBatch, roomsData, groupsData) {\n        console.log(\"Persisting sync data up to \", nextBatch);\n        return Promise.try(() => {\n            const txn = this.db.transaction([\"sync\"], \"readwrite\");\n            const store = txn.objectStore(\"sync\");\n            store.put({\n                clobber: \"-\", // constant key so will always clobber\n                nextBatch: nextBatch,\n                roomsData: roomsData,\n                groupsData: groupsData,\n            }); // put == UPSERT\n            return promiseifyTxn(txn);\n        });\n    },\n\n    /**\n     * Persist a list of account data events. Events with the same 'type' will\n     * be replaced.\n     * @param {Object[]} accountData An array of raw user-scoped account data events\n     * @return {Promise} Resolves if the events were persisted.\n     */\n    _persistAccountData: function(accountData) {\n        return Promise.try(() => {\n            const txn = this.db.transaction([\"accountData\"], \"readwrite\");\n            const store = txn.objectStore(\"accountData\");\n            for (let i = 0; i < accountData.length; i++) {\n                store.put(accountData[i]); // put == UPSERT\n            }\n            return promiseifyTxn(txn);\n        });\n    },\n\n    /**\n     * Persist a list of [user id, presence event] they are for.\n     * Users with the same 'userId' will be replaced.\n     * Presence events should be the event in its raw form (not the Event\n     * object)\n     * @param {Object[]} tuples An array of [userid, event] tuples\n     * @return {Promise} Resolves if the users were persisted.\n     */\n    _persistUserPresenceEvents: function(tuples) {\n        return Promise.try(() => {\n            const txn = this.db.transaction([\"users\"], \"readwrite\");\n            const store = txn.objectStore(\"users\");\n            for (const tuple of tuples) {\n                store.put({\n                    userId: tuple[0],\n                    event: tuple[1],\n                }); // put == UPSERT\n            }\n            return promiseifyTxn(txn);\n        });\n    },\n\n    /**\n     * Load all user presence events from the database. This is not cached.\n     * FIXME: It would probably be more sensible to store the events in the\n     * sync.\n     * @return {Promise<Object[]>} A list of presence events in their raw form.\n     */\n    getUserPresenceEvents: function() {\n        return Promise.try(() => {\n            const txn = this.db.transaction([\"users\"], \"readonly\");\n            const store = txn.objectStore(\"users\");\n            return selectQuery(store, undefined, (cursor) => {\n                return [cursor.value.userId, cursor.value.event];\n            });\n        });\n    },\n\n    /**\n     * Load all the account data events from the database. This is not cached.\n     * @return {Promise<Object[]>} A list of raw global account events.\n     */\n    _loadAccountData: function() {\n        console.log(\n            `LocalIndexedDBStoreBackend: loading account data`,\n        );\n        return Promise.try(() => {\n            console.log(\n                `LocalIndexedDBStoreBackend: loaded account data`,\n            );\n            const txn = this.db.transaction([\"accountData\"], \"readonly\");\n            const store = txn.objectStore(\"accountData\");\n            return selectQuery(store, undefined, (cursor) => {\n                return cursor.value;\n            });\n        });\n    },\n\n    /**\n     * Load the sync data from the database.\n     * @return {Promise<Object>} An object with \"roomsData\" and \"nextBatch\" keys.\n     */\n    _loadSyncData: function() {\n        console.log(\n            `LocalIndexedDBStoreBackend: loaded sync data`,\n        );\n        return Promise.try(() => {\n            console.log(\n                `LocalIndexedDBStoreBackend: loaded sync data`,\n            );\n            const txn = this.db.transaction([\"sync\"], \"readonly\");\n            const store = txn.objectStore(\"sync\");\n            return selectQuery(store, undefined, (cursor) => {\n                return cursor.value;\n            }).then((results) => {\n                if (results.length > 1) {\n                    console.warn(\"loadSyncData: More than 1 sync row found.\");\n                }\n                return (results.length > 0 ? results[0] : {});\n            });\n        });\n    },\n};\n\nexport default LocalIndexedDBStoreBackend;\n","/*\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport Promise from 'bluebird';\n\n/**\n * An IndexedDB store backend where the actual backend sits in a web\n * worker.\n *\n * Construct a new Indexed Database store backend. This requires a call to\n * <code>connect()</code> before this store can be used.\n * @constructor\n * @param {string} workerScript URL to the worker script\n * @param {string=} dbName Optional database name. The same name must be used\n * to open the same database.\n * @param {Object} WorkerApi The web worker compatible interface object\n */\nconst RemoteIndexedDBStoreBackend = function RemoteIndexedDBStoreBackend(\n    workerScript, dbName, WorkerApi,\n) {\n    this._dbName = dbName;\n    this._worker = new WorkerApi(workerScript);\n    this._nextSeq = 0;\n    // The currently in-flight requests to the actual backend\n    this._inFlight = {\n        // seq: promise,\n    };\n\n    this._worker.onmessage = this._onWorkerMessage.bind(this);\n\n    // tell the worker the db name.\n    this._startPromise = this._doCmd('_setupWorker', [this._dbName]).then(() => {\n        console.log(\"IndexedDB worker is ready\");\n    });\n};\n\n\nRemoteIndexedDBStoreBackend.prototype = {\n    /**\n     * Attempt to connect to the database. This can fail if the user does not\n     * grant permission.\n     * @return {Promise} Resolves if successfully connected.\n     */\n    connect: function() {\n        return this._startPromise.then(() => this._doCmd('connect'));\n    },\n\n    /**\n     * Clear the entire database. This should be used when logging out of a client\n     * to prevent mixing data between accounts.\n     * @return {Promise} Resolved when the database is cleared.\n     */\n    clearDatabase: function() {\n        return this._startPromise.then(() => this._doCmd('clearDatabase'));\n    },\n\n    /**\n     * @return {Promise} Resolves with a sync response to restore the\n     * client state to where it was at the last save, or null if there\n     * is no saved sync data.\n     */\n    getSavedSync: function() {\n        return this._doCmd('getSavedSync');\n    },\n\n    setSyncData: function(syncData) {\n        return this._doCmd('setSyncData', [syncData]);\n    },\n\n    syncToDatabase: function(users) {\n        return this._doCmd('syncToDatabase', [users]);\n    },\n\n\n    /**\n     * Load all user presence events from the database. This is not cached.\n     * @return {Promise<Object[]>} A list of presence events in their raw form.\n     */\n    getUserPresenceEvents: function() {\n        return this._doCmd('getUserPresenceEvents');\n    },\n\n    _doCmd: function(cmd, args) {\n        // wrap in a q so if the postMessage throws,\n        // the promise automatically gets rejected\n        return Promise.resolve().then(() => {\n            const seq = this._nextSeq++;\n            const def = Promise.defer();\n\n            this._inFlight[seq] = def;\n\n            this._worker.postMessage({\n                command: cmd,\n                seq: seq,\n                args: args,\n            });\n\n            return def.promise;\n        });\n    },\n\n    _onWorkerMessage: function(ev) {\n        const msg = ev.data;\n\n        if (msg.command == 'cmd_success' || msg.command == 'cmd_fail') {\n            if (msg.seq === undefined) {\n                console.error(\"Got reply from worker with no seq\");\n                return;\n            }\n\n            const def = this._inFlight[msg.seq];\n            if (def === undefined) {\n                console.error(\"Got reply for unknown seq \" + msg.seq);\n                return;\n            }\n            delete this._inFlight[msg.seq];\n\n            if (msg.command == 'cmd_success') {\n                def.resolve(msg.result);\n            } else {\n                def.reject(msg.error);\n            }\n        } else {\n            console.warn(\"Unrecognised message from worker: \" + msg);\n        }\n    },\n};\n\nexport default RemoteIndexedDBStoreBackend;\n","/*\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport Promise from 'bluebird';\nimport {MatrixInMemoryStore} from \"./memory\";\nimport utils from \"../utils\";\nimport LocalIndexedDBStoreBackend from \"./indexeddb-local-backend.js\";\nimport RemoteIndexedDBStoreBackend from \"./indexeddb-remote-backend.js\";\nimport User from \"../models/user\";\nimport {MatrixEvent} from \"../models/event\";\n\n/**\n * This is an internal module. See {@link IndexedDBStore} for the public class.\n * @module store/indexeddb\n */\n\n// If this value is too small we'll be writing very often which will cause\n// noticable stop-the-world pauses. If this value is too big we'll be writing\n// so infrequently that the /sync size gets bigger on reload. Writing more\n// often does not affect the length of the pause since the entire /sync\n// response is persisted each time.\nconst WRITE_DELAY_MS = 1000 * 60 * 5; // once every 5 minutes\n\n\n/**\n * Construct a new Indexed Database store, which extends MatrixInMemoryStore.\n *\n * This store functions like a MatrixInMemoryStore except it periodically persists\n * the contents of the store to an IndexedDB backend.\n *\n * All data is still kept in-memory but can be loaded from disk by calling\n * <code>startup()</code>. This can make startup times quicker as a complete\n * sync from the server is not required. This does not reduce memory usage as all\n * the data is eagerly fetched when <code>startup()</code> is called.\n * <pre>\n * let opts = { localStorage: window.localStorage };\n * let store = new IndexedDBStore();\n * await store.startup(); // load from indexed db\n * let client = sdk.createClient({\n *     store: store,\n * });\n * client.startClient();\n * client.on(\"sync\", function(state, prevState, data) {\n *     if (state === \"PREPARED\") {\n *         console.log(\"Started up, now with go faster stripes!\");\n *     }\n * });\n * </pre>\n *\n * @constructor\n * @extends MatrixInMemoryStore\n * @param {Object} opts Options object.\n * @param {Object} opts.indexedDB The Indexed DB interface e.g.\n * <code>window.indexedDB</code>\n * @param {string=} opts.dbName Optional database name. The same name must be used\n * to open the same database.\n * @param {string=} opts.workerScript Optional URL to a script to invoke a web\n * worker with to run IndexedDB queries on the web worker. The IndexedDbStoreWorker\n * class is provided for this purpose and requires the application to provide a\n * trivial wrapper script around it.\n * @param {Object=} opts.workerApi The webWorker API object. If omitted, the global Worker\n * object will be used if it exists.\n * @prop {IndexedDBStoreBackend} backend The backend instance. Call through to\n * this API if you need to perform specific indexeddb actions like deleting the\n * database.\n */\nconst IndexedDBStore = function IndexedDBStore(opts) {\n    MatrixInMemoryStore.call(this, opts);\n\n    if (!opts.indexedDB) {\n        throw new Error('Missing required option: indexedDB');\n    }\n\n    if (opts.workerScript) {\n        // try & find a webworker-compatible API\n        let workerApi = opts.workerApi;\n        if (!workerApi) {\n            // default to the global Worker object (which is where it in a browser)\n            workerApi = global.Worker;\n        }\n        this.backend = new RemoteIndexedDBStoreBackend(\n            opts.workerScript, opts.dbName, workerApi,\n        );\n    } else {\n        this.backend = new LocalIndexedDBStoreBackend(opts.indexedDB, opts.dbName);\n    }\n\n    this.startedUp = false;\n    this._syncTs = 0;\n\n    // Records the last-modified-time of each user at the last point we saved\n    // the database, such that we can derive the set if users that have been\n    // modified since we last saved.\n    this._userModifiedMap = {\n        // user_id : timestamp\n    };\n};\nutils.inherits(IndexedDBStore, MatrixInMemoryStore);\n\n/**\n * @return {Promise} Resolved when loaded from indexed db.\n  */\nIndexedDBStore.prototype.startup = function() {\n    if (this.startedUp) {\n        console.log(`IndexedDBStore.startup: already started`);\n        return Promise.resolve();\n    }\n\n    console.log(`IndexedDBStore.startup: connecting to backend`);\n    return this.backend.connect().then(() => {\n        console.log(`IndexedDBStore.startup: loading presence events`);\n        return this.backend.getUserPresenceEvents();\n    }).then((userPresenceEvents) => {\n        console.log(`IndexedDBStore.startup: processing presence events`);\n        userPresenceEvents.forEach(([userId, rawEvent]) => {\n            const u = new User(userId);\n            if (rawEvent) {\n                u.setPresenceEvent(new MatrixEvent(rawEvent));\n            }\n            this._userModifiedMap[u.userId] = u.getLastModifiedTime();\n            this.storeUser(u);\n        });\n    });\n};\n\n/**\n * @return {Promise} Resolves with a sync response to restore the\n * client state to where it was at the last save, or null if there\n * is no saved sync data.\n */\nIndexedDBStore.prototype.getSavedSync = function() {\n    return this.backend.getSavedSync();\n};\n\n/**\n * Delete all data from this store.\n * @return {Promise} Resolves if the data was deleted from the database.\n */\nIndexedDBStore.prototype.deleteAllData = function() {\n    MatrixInMemoryStore.prototype.deleteAllData.call(this);\n    return this.backend.clearDatabase().then(() => {\n        console.log(\"Deleted indexeddb data.\");\n    }, (err) => {\n        console.error(`Failed to delete indexeddb data: ${err}`);\n        throw err;\n    });\n};\n\n/**\n * Possibly write data to the database.\n * @return {Promise} Promise resolves after the write completes.\n */\nIndexedDBStore.prototype.save = function() {\n    const now = Date.now();\n    if (now - this._syncTs > WRITE_DELAY_MS) {\n        return this._reallySave();\n    }\n    return Promise.resolve();\n};\n\nIndexedDBStore.prototype._reallySave = function() {\n    this._syncTs = Date.now(); // set now to guard against multi-writes\n\n    // work out changed users (this doesn't handle deletions but you\n    // can't 'delete' users as they are just presence events).\n    const userTuples = [];\n    for (const u of this.getUsers()) {\n        if (this._userModifiedMap[u.userId] === u.getLastModifiedTime()) continue;\n        if (!u.events.presence) continue;\n\n        userTuples.push([u.userId, u.events.presence.event]);\n\n        // note that we've saved this version of the user\n        this._userModifiedMap[u.userId] = u.getLastModifiedTime();\n    }\n\n    return this.backend.syncToDatabase(userTuples).catch((err) => {\n        console.error(\"sync fail:\", err);\n    });\n};\n\nIndexedDBStore.prototype.setSyncData = function(syncData) {\n    return this.backend.setSyncData(syncData);\n};\n\nmodule.exports.IndexedDBStore = IndexedDBStore;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * This is an internal module. See {@link MatrixInMemoryStore} for the public class.\n * @module store/memory\n */\nconst utils = require(\"../utils\");\nconst User = require(\"../models/user\");\nimport Promise from 'bluebird';\n\n/**\n * Construct a new in-memory data store for the Matrix Client.\n * @constructor\n * @param {Object=} opts Config options\n * @param {LocalStorage} opts.localStorage The local storage instance to persist\n * some forms of data such as tokens. Rooms will NOT be stored.\n */\nmodule.exports.MatrixInMemoryStore = function MatrixInMemoryStore(opts) {\n    opts = opts || {};\n    this.rooms = {\n        // roomId: Room\n    };\n    this.groups = {\n        // groupId: Group\n    };\n    this.users = {\n        // userId: User\n    };\n    this.syncToken = null;\n    this.filters = {\n        // userId: {\n        //    filterId: Filter\n        // }\n    };\n    this.accountData = {\n        // type : content\n    };\n    this.localStorage = opts.localStorage;\n};\n\nmodule.exports.MatrixInMemoryStore.prototype = {\n\n    /**\n     * Retrieve the token to stream from.\n     * @return {string} The token or null.\n     */\n    getSyncToken: function() {\n        return this.syncToken;\n    },\n\n\n    /**\n     * Set the token to stream from.\n     * @param {string} token The token to stream from.\n     */\n    setSyncToken: function(token) {\n        this.syncToken = token;\n    },\n\n    /**\n     * Store the given room.\n     * @param {Group} group The group to be stored\n     */\n    storeGroup: function(group) {\n        this.groups[group.groupId] = group;\n    },\n\n    /**\n     * Retrieve a group by its group ID.\n     * @param {string} groupId The group ID.\n     * @return {Group} The group or null.\n     */\n    getGroup: function(groupId) {\n        return this.groups[groupId] || null;\n    },\n\n    /**\n     * Retrieve all known groups.\n     * @return {Group[]} A list of groups, which may be empty.\n     */\n    getGroups: function() {\n        return utils.values(this.groups);\n    },\n\n    /**\n     * Store the given room.\n     * @param {Room} room The room to be stored. All properties must be stored.\n     */\n    storeRoom: function(room) {\n        this.rooms[room.roomId] = room;\n        // add listeners for room member changes so we can keep the room member\n        // map up-to-date.\n        room.currentState.on(\"RoomState.members\", this._onRoomMember.bind(this));\n        // add existing members\n        const self = this;\n        room.currentState.getMembers().forEach(function(m) {\n            self._onRoomMember(null, room.currentState, m);\n        });\n    },\n\n    /**\n     * Called when a room member in a room being tracked by this store has been\n     * updated.\n     * @param {MatrixEvent} event\n     * @param {RoomState} state\n     * @param {RoomMember} member\n     */\n    _onRoomMember: function(event, state, member) {\n        if (member.membership === \"invite\") {\n            // We do NOT add invited members because people love to typo user IDs\n            // which would then show up in these lists (!)\n            return;\n        }\n\n        const user = this.users[member.userId] || new User(member.userId);\n        if (member.name) {\n            user.setDisplayName(member.name);\n            if (member.events.member) {\n                user.setRawDisplayName(\n                    member.events.member.getDirectionalContent().displayname,\n                );\n            }\n        }\n        if (member.events.member && member.events.member.getContent().avatar_url) {\n            user.setAvatarUrl(member.events.member.getContent().avatar_url);\n        }\n        this.users[user.userId] = user;\n    },\n\n    /**\n     * Retrieve a room by its' room ID.\n     * @param {string} roomId The room ID.\n     * @return {Room} The room or null.\n     */\n    getRoom: function(roomId) {\n        return this.rooms[roomId] || null;\n    },\n\n    /**\n     * Retrieve all known rooms.\n     * @return {Room[]} A list of rooms, which may be empty.\n     */\n    getRooms: function() {\n        return utils.values(this.rooms);\n    },\n\n    /**\n     * Permanently delete a room.\n     * @param {string} roomId\n     */\n    removeRoom: function(roomId) {\n        if (this.rooms[roomId]) {\n            this.rooms[roomId].removeListener(\"RoomState.members\", this._onRoomMember);\n        }\n        delete this.rooms[roomId];\n    },\n\n    /**\n     * Retrieve a summary of all the rooms.\n     * @return {RoomSummary[]} A summary of each room.\n     */\n    getRoomSummaries: function() {\n        return utils.map(utils.values(this.rooms), function(room) {\n            return room.summary;\n        });\n    },\n\n    /**\n     * Store a User.\n     * @param {User} user The user to store.\n     */\n    storeUser: function(user) {\n        this.users[user.userId] = user;\n    },\n\n    /**\n     * Retrieve a User by its' user ID.\n     * @param {string} userId The user ID.\n     * @return {User} The user or null.\n     */\n    getUser: function(userId) {\n        return this.users[userId] || null;\n    },\n\n    /**\n     * Retrieve all known users.\n     * @return {User[]} A list of users, which may be empty.\n     */\n    getUsers: function() {\n        return utils.values(this.users);\n    },\n\n    /**\n     * Retrieve scrollback for this room.\n     * @param {Room} room The matrix room\n     * @param {integer} limit The max number of old events to retrieve.\n     * @return {Array<Object>} An array of objects which will be at most 'limit'\n     * length and at least 0. The objects are the raw event JSON.\n     */\n    scrollback: function(room, limit) {\n        return [];\n    },\n\n    /**\n     * Store events for a room. The events have already been added to the timeline\n     * @param {Room} room The room to store events for.\n     * @param {Array<MatrixEvent>} events The events to store.\n     * @param {string} token The token associated with these events.\n     * @param {boolean} toStart True if these are paginated results.\n     */\n    storeEvents: function(room, events, token, toStart) {\n        // no-op because they've already been added to the room instance.\n    },\n\n    /**\n     * Store a filter.\n     * @param {Filter} filter\n     */\n    storeFilter: function(filter) {\n        if (!filter) {\n            return;\n        }\n        if (!this.filters[filter.userId]) {\n            this.filters[filter.userId] = {};\n        }\n        this.filters[filter.userId][filter.filterId] = filter;\n    },\n\n    /**\n     * Retrieve a filter.\n     * @param {string} userId\n     * @param {string} filterId\n     * @return {?Filter} A filter or null.\n     */\n    getFilter: function(userId, filterId) {\n        if (!this.filters[userId] || !this.filters[userId][filterId]) {\n            return null;\n        }\n        return this.filters[userId][filterId];\n    },\n\n    /**\n     * Retrieve a filter ID with the given name.\n     * @param {string} filterName The filter name.\n     * @return {?string} The filter ID or null.\n     */\n    getFilterIdByName: function(filterName) {\n        if (!this.localStorage) {\n            return null;\n        }\n        try {\n            return this.localStorage.getItem(\"mxjssdk_memory_filter_\" + filterName);\n        } catch (e) {}\n        return null;\n    },\n\n    /**\n     * Set a filter name to ID mapping.\n     * @param {string} filterName\n     * @param {string} filterId\n     */\n    setFilterIdByName: function(filterName, filterId) {\n        if (!this.localStorage) {\n            return;\n        }\n        try {\n            this.localStorage.setItem(\"mxjssdk_memory_filter_\" + filterName, filterId);\n        } catch (e) {}\n    },\n\n    /**\n     * Store user-scoped account data events.\n     * N.B. that account data only allows a single event per type, so multiple\n     * events with the same type will replace each other.\n     * @param {Array<MatrixEvent>} events The events to store.\n     */\n    storeAccountDataEvents: function(events) {\n        const self = this;\n        events.forEach(function(event) {\n            self.accountData[event.getType()] = event;\n        });\n    },\n\n    /**\n     * Get account data event by event type\n     * @param {string} eventType The event type being queried\n     * @return {?MatrixEvent} the user account_data event of given type, if any\n     */\n    getAccountData: function(eventType) {\n        return this.accountData[eventType];\n    },\n\n    /**\n     * setSyncData does nothing as there is no backing data store.\n     *\n     * @param {Object} syncData The sync data\n     * @return {Promise} An immediately resolved promise.\n     */\n    setSyncData: function(syncData) {\n        return Promise.resolve();\n    },\n\n    /**\n     * Save does nothing as there is no backing data store.\n     */\n    save: function() {},\n\n    /**\n     * Startup does nothing as this store doesn't require starting up.\n     * @return {Promise} An immediately resolved promise.\n     */\n    startup: function() {\n        return Promise.resolve();\n    },\n\n    /**\n     * @return {Promise} Resolves with a sync response to restore the\n     * client state to where it was at the last save, or null if there\n     * is no saved sync data.\n     */\n    getSavedSync: function() {\n        return Promise.resolve(null);\n    },\n\n    /**\n     * Delete all data from this store.\n     * @return {Promise} An immediately resolved promise.\n     */\n    deleteAllData: function() {\n        this.rooms = {\n            // roomId: Room\n        };\n        this.users = {\n            // userId: User\n        };\n        this.syncToken = null;\n        this.filters = {\n            // userId: {\n            //    filterId: Filter\n            // }\n        };\n        this.accountData = {\n            // type : content\n        };\n        return Promise.resolve();\n    },\n};\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/**\n * @module store/session/webstorage\n */\n\nconst utils = require(\"../../utils\");\n\nconst DEBUG = false;  // set true to enable console logging.\nconst E2E_PREFIX = \"session.e2e.\";\n\n/**\n * Construct a web storage session store, capable of storing account keys,\n * session keys and access tokens.\n * @constructor\n * @param {WebStorage} webStore A web storage implementation, e.g.\n * 'window.localStorage' or 'window.sessionStorage' or a custom implementation.\n * @throws if the supplied 'store' does not meet the Storage interface of the\n * WebStorage API.\n */\nfunction WebStorageSessionStore(webStore) {\n    this.store = webStore;\n    if (!utils.isFunction(webStore.getItem) ||\n        !utils.isFunction(webStore.setItem) ||\n        !utils.isFunction(webStore.removeItem) ||\n        !utils.isFunction(webStore.key) ||\n        typeof(webStore.length) !== 'number'\n       ) {\n        throw new Error(\n            \"Supplied webStore does not meet the WebStorage API interface\",\n        );\n    }\n}\n\nWebStorageSessionStore.prototype = {\n\n    /**\n     * Store the end to end account for the logged-in user.\n     * @param {string} account Base64 encoded account.\n     */\n    storeEndToEndAccount: function(account) {\n        this.store.setItem(KEY_END_TO_END_ACCOUNT, account);\n    },\n\n    /**\n     * Load the end to end account for the logged-in user.\n     * @return {?string} Base64 encoded account.\n     */\n    getEndToEndAccount: function() {\n        return this.store.getItem(KEY_END_TO_END_ACCOUNT);\n    },\n\n    /**\n     * Stores the known devices for a user.\n     * @param {string} userId The user's ID.\n     * @param {object} devices A map from device ID to keys for the device.\n     */\n    storeEndToEndDevicesForUser: function(userId, devices) {\n        setJsonItem(this.store, keyEndToEndDevicesForUser(userId), devices);\n    },\n\n    /**\n     * Retrieves the known devices for a user.\n     * @param {string} userId The user's ID.\n     * @return {object} A map from device ID to keys for the device.\n     */\n    getEndToEndDevicesForUser: function(userId) {\n        return getJsonItem(this.store, keyEndToEndDevicesForUser(userId));\n    },\n\n    storeEndToEndDeviceTrackingStatus: function(statusMap) {\n        setJsonItem(this.store, KEY_END_TO_END_DEVICE_LIST_TRACKING_STATUS, statusMap);\n    },\n\n    getEndToEndDeviceTrackingStatus: function() {\n        return getJsonItem(this.store, KEY_END_TO_END_DEVICE_LIST_TRACKING_STATUS);\n    },\n\n    /**\n     * Store the sync token corresponding to the device list.\n     *\n     * This is used when starting the client, to get a list of the users who\n     * have changed their device list since the list time we were running.\n     *\n     * @param {String?} token\n     */\n    storeEndToEndDeviceSyncToken: function(token) {\n        setJsonItem(this.store, KEY_END_TO_END_DEVICE_SYNC_TOKEN, token);\n    },\n\n    /**\n     * Get the sync token corresponding to the device list.\n     *\n     * @return {String?} token\n     */\n    getEndToEndDeviceSyncToken: function() {\n        return getJsonItem(this.store, KEY_END_TO_END_DEVICE_SYNC_TOKEN);\n    },\n\n    /**\n     * Store a session between the logged-in user and another device\n     * @param {string} deviceKey The public key of the other device.\n     * @param {string} sessionId The ID for this end-to-end session.\n     * @param {string} session Base64 encoded end-to-end session.\n     */\n    storeEndToEndSession: function(deviceKey, sessionId, session) {\n        const sessions = this.getEndToEndSessions(deviceKey) || {};\n        sessions[sessionId] = session;\n        setJsonItem(\n            this.store, keyEndToEndSessions(deviceKey), sessions,\n        );\n    },\n\n    /**\n     * Retrieve the end-to-end sessions between the logged-in user and another\n     * device.\n     * @param {string} deviceKey The public key of the other device.\n     * @return {object} A map from sessionId to Base64 end-to-end session.\n     */\n    getEndToEndSessions: function(deviceKey) {\n        return getJsonItem(this.store, keyEndToEndSessions(deviceKey));\n    },\n\n    /**\n     * Retrieve a list of all known inbound group sessions\n     *\n     * @return {{senderKey: string, sessionId: string}}\n     */\n    getAllEndToEndInboundGroupSessionKeys: function() {\n        const prefix = E2E_PREFIX + 'inboundgroupsessions/';\n        const result = [];\n        for (let i = 0; i < this.store.length; i++) {\n            const key = this.store.key(i);\n            if (!key.startsWith(prefix)) {\n                continue;\n            }\n            // we can't use split, as the components we are trying to split out\n            // might themselves contain '/' characters. We rely on the\n            // senderKey being a (32-byte) curve25519 key, base64-encoded\n            // (hence 43 characters long).\n\n            result.push({\n                senderKey: key.substr(prefix.length, 43),\n                sessionId: key.substr(prefix.length + 44),\n            });\n        }\n        return result;\n    },\n\n    getEndToEndInboundGroupSession: function(senderKey, sessionId) {\n        const key = keyEndToEndInboundGroupSession(senderKey, sessionId);\n        return this.store.getItem(key);\n    },\n\n    storeEndToEndInboundGroupSession: function(senderKey, sessionId, pickledSession) {\n        const key = keyEndToEndInboundGroupSession(senderKey, sessionId);\n        return this.store.setItem(key, pickledSession);\n    },\n\n    /**\n     * Store the end-to-end state for a room.\n     * @param {string} roomId The room's ID.\n     * @param {object} roomInfo The end-to-end info for the room.\n     */\n    storeEndToEndRoom: function(roomId, roomInfo) {\n        setJsonItem(this.store, keyEndToEndRoom(roomId), roomInfo);\n    },\n\n    /**\n     * Get the end-to-end state for a room\n     * @param {string} roomId The room's ID.\n     * @return {object} The end-to-end info for the room.\n     */\n    getEndToEndRoom: function(roomId) {\n        return getJsonItem(this.store, keyEndToEndRoom(roomId));\n    },\n};\n\nconst KEY_END_TO_END_ACCOUNT = E2E_PREFIX + \"account\";\nconst KEY_END_TO_END_DEVICE_SYNC_TOKEN = E2E_PREFIX + \"device_sync_token\";\nconst KEY_END_TO_END_DEVICE_LIST_TRACKING_STATUS = E2E_PREFIX + \"device_tracking\";\n\nfunction keyEndToEndDevicesForUser(userId) {\n    return E2E_PREFIX + \"devices/\" + userId;\n}\n\nfunction keyEndToEndSessions(deviceKey) {\n    return E2E_PREFIX + \"sessions/\" + deviceKey;\n}\n\nfunction keyEndToEndInboundGroupSession(senderKey, sessionId) {\n    return E2E_PREFIX + \"inboundgroupsessions/\" + senderKey + \"/\" + sessionId;\n}\n\nfunction keyEndToEndRoom(roomId) {\n    return E2E_PREFIX + \"rooms/\" + roomId;\n}\n\nfunction getJsonItem(store, key) {\n    try {\n        // if the key is absent, store.getItem() returns null, and\n        // JSON.parse(null) === null, so this returns null.\n        return JSON.parse(store.getItem(key));\n    } catch (e) {\n        debuglog(\"Failed to get key %s: %s\", key, e);\n        debuglog(e.stack);\n    }\n    return null;\n}\n\nfunction setJsonItem(store, key, val) {\n    store.setItem(key, JSON.stringify(val));\n}\n\nfunction debuglog() {\n    if (DEBUG) {\n        console.log(...arguments);\n    }\n}\n\n/** */\nmodule.exports = WebStorageSessionStore;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\nimport Promise from 'bluebird';\n/**\n * This is an internal module.\n * @module store/stub\n */\n\n/**\n * Construct a stub store. This does no-ops on most store methods.\n * @constructor\n */\nfunction StubStore() {\n    this.fromToken = null;\n}\n\nStubStore.prototype = {\n\n    /**\n     * Get the sync token.\n     * @return {string}\n     */\n    getSyncToken: function() {\n        return this.fromToken;\n    },\n\n    /**\n     * Set the sync token.\n     * @param {string} token\n     */\n    setSyncToken: function(token) {\n        this.fromToken = token;\n    },\n\n    /**\n     * No-op.\n     * @param {Group} group\n     */\n    storeGroup: function(group) {\n    },\n\n    /**\n     * No-op.\n     * @param {string} groupId\n     * @return {null}\n     */\n    getGroup: function(groupId) {\n        return null;\n    },\n\n    /**\n     * No-op.\n     * @return {Array} An empty array.\n     */\n    getGroups: function() {\n        return [];\n    },\n\n    /**\n     * No-op.\n     * @param {Room} room\n     */\n    storeRoom: function(room) {\n    },\n\n    /**\n     * No-op.\n     * @param {string} roomId\n     * @return {null}\n     */\n    getRoom: function(roomId) {\n        return null;\n    },\n\n    /**\n     * No-op.\n     * @return {Array} An empty array.\n     */\n    getRooms: function() {\n        return [];\n    },\n\n    /**\n     * Permanently delete a room.\n     * @param {string} roomId\n     */\n    removeRoom: function(roomId) {\n        return;\n    },\n\n    /**\n     * No-op.\n     * @return {Array} An empty array.\n     */\n    getRoomSummaries: function() {\n        return [];\n    },\n\n    /**\n     * No-op.\n     * @param {User} user\n     */\n    storeUser: function(user) {\n    },\n\n    /**\n     * No-op.\n     * @param {string} userId\n     * @return {null}\n     */\n    getUser: function(userId) {\n        return null;\n    },\n\n    /**\n     * No-op.\n     * @return {User[]}\n     */\n    getUsers: function() {\n        return [];\n    },\n\n    /**\n     * No-op.\n     * @param {Room} room\n     * @param {integer} limit\n     * @return {Array}\n     */\n    scrollback: function(room, limit) {\n        return [];\n    },\n\n    /**\n     * Store events for a room.\n     * @param {Room} room The room to store events for.\n     * @param {Array<MatrixEvent>} events The events to store.\n     * @param {string} token The token associated with these events.\n     * @param {boolean} toStart True if these are paginated results.\n     */\n    storeEvents: function(room, events, token, toStart) {\n    },\n\n    /**\n     * Store a filter.\n     * @param {Filter} filter\n     */\n    storeFilter: function(filter) {\n    },\n\n    /**\n     * Retrieve a filter.\n     * @param {string} userId\n     * @param {string} filterId\n     * @return {?Filter} A filter or null.\n     */\n    getFilter: function(userId, filterId) {\n        return null;\n    },\n\n    /**\n     * Retrieve a filter ID with the given name.\n     * @param {string} filterName The filter name.\n     * @return {?string} The filter ID or null.\n     */\n    getFilterIdByName: function(filterName) {\n        return null;\n    },\n\n    /**\n     * Set a filter name to ID mapping.\n     * @param {string} filterName\n     * @param {string} filterId\n     */\n    setFilterIdByName: function(filterName, filterId) {\n\n    },\n\n    /**\n     * Store user-scoped account data events\n     * @param {Array<MatrixEvent>} events The events to store.\n     */\n    storeAccountDataEvents: function(events) {\n\n    },\n\n    /**\n     * Get account data event by event type\n     * @param {string} eventType The event type being queried\n     */\n    getAccountData: function(eventType) {\n\n    },\n\n    /**\n     * setSyncData does nothing as there is no backing data store.\n     *\n     * @param {Object} syncData The sync data\n     * @return {Promise} An immediately resolved promise.\n     */\n    setSyncData: function(syncData) {\n        return Promise.resolve();\n    },\n\n    /**\n     * Save does nothing as there is no backing data store.\n     */\n    save: function() {},\n\n    /**\n     * Startup does nothing.\n     * @return {Promise} An immediately resolved promise.\n     */\n    startup: function() {\n        return Promise.resolve();\n    },\n\n    /**\n     * @return {Promise} Resolves with a sync response to restore the\n     * client state to where it was at the last save, or null if there\n     * is no saved sync data.\n     */\n    getSavedSync: function() {\n        return Promise.resolve(null);\n    },\n\n    /**\n     * Delete all data from this store. Does nothing since this store\n     * doesn't store anything.\n     * @return {Promise} An immediately resolved promise.\n     */\n    deleteAllData: function() {\n        return Promise.resolve();\n    },\n};\n\n/** Stub Store class. */\nmodule.exports = StubStore;\n","/*\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * This is an internal module. See {@link SyncAccumulator} for the public class.\n * @module sync-accumulator\n */\n\nimport utils from \"./utils\";\n\n\n/**\n * The purpose of this class is to accumulate /sync responses such that a\n * complete \"initial\" JSON response can be returned which accurately represents\n * the sum total of the /sync responses accumulated to date. It only handles\n * room data: that is, everything under the \"rooms\" top-level key.\n *\n * This class is used when persisting room data so a complete /sync response can\n * be loaded from disk and incremental syncs can be performed on the server,\n * rather than asking the server to do an initial sync on startup.\n */\nclass SyncAccumulator {\n\n    /**\n     * @param {Object} opts\n     * @param {Number=} opts.maxTimelineEntries The ideal maximum number of\n     * timeline entries to keep in the sync response. This is best-effort, as\n     * clients do not always have a back-pagination token for each event, so\n     * it's possible there may be slightly *less* than this value. There will\n     * never be more. This cannot be 0 or else it makes it impossible to scroll\n     * back in a room. Default: 50.\n     */\n    constructor(opts) {\n        opts = opts || {};\n        opts.maxTimelineEntries = opts.maxTimelineEntries || 50;\n        this.opts = opts;\n        this.accountData = {\n            //$event_type: Object\n        };\n        this.inviteRooms = {\n            //$roomId: { ... sync 'invite' json data ... }\n        };\n        this.joinRooms = {\n            //$roomId: {\n            //    _currentState: { $event_type: { $state_key: json } },\n            //    _timeline: [\n            //       { event: $event, token: null|token },\n            //       { event: $event, token: null|token },\n            //       { event: $event, token: null|token },\n            //       ...\n            //    ],\n            //    _accountData: { $event_type: json },\n            //    _unreadNotifications: { ... unread_notifications JSON ... },\n            //    _readReceipts: { $user_id: { data: $json, eventId: $event_id }}\n            //}\n        };\n        // the /sync token which corresponds to the last time rooms were\n        // accumulated. We remember this so that any caller can obtain a\n        // coherent /sync response and know at what point they should be\n        // streaming from without losing events.\n        this.nextBatch = null;\n\n        // { ('invite'|'join'|'leave'): $groupId: { ... sync 'group' data } }\n        this.groups = {\n            invite: {},\n            join: {},\n            leave: {},\n        };\n    }\n\n    accumulate(syncResponse) {\n        this._accumulateRooms(syncResponse);\n        this._accumulateGroups(syncResponse);\n        this._accumulateAccountData(syncResponse);\n        this.nextBatch = syncResponse.next_batch;\n    }\n\n    _accumulateAccountData(syncResponse) {\n        if (!syncResponse.account_data || !syncResponse.account_data.events) {\n            return;\n        }\n        // Clobbers based on event type.\n        syncResponse.account_data.events.forEach((e) => {\n            this.accountData[e.type] = e;\n        });\n    }\n\n    /**\n     * Accumulate incremental /sync room data.\n     * @param {Object} syncResponse the complete /sync JSON\n     */\n    _accumulateRooms(syncResponse) {\n        if (!syncResponse.rooms) {\n            return;\n        }\n        if (syncResponse.rooms.invite) {\n            Object.keys(syncResponse.rooms.invite).forEach((roomId) => {\n                this._accumulateRoom(\n                    roomId, \"invite\", syncResponse.rooms.invite[roomId],\n                );\n            });\n        }\n        if (syncResponse.rooms.join) {\n            Object.keys(syncResponse.rooms.join).forEach((roomId) => {\n                this._accumulateRoom(\n                    roomId, \"join\", syncResponse.rooms.join[roomId],\n                );\n            });\n        }\n        if (syncResponse.rooms.leave) {\n            Object.keys(syncResponse.rooms.leave).forEach((roomId) => {\n                this._accumulateRoom(\n                    roomId, \"leave\", syncResponse.rooms.leave[roomId],\n                );\n            });\n        }\n    }\n\n    _accumulateRoom(roomId, category, data) {\n        // Valid /sync state transitions\n        //       +--------+ <======+            1: Accept an invite\n        //   +== | INVITE |        | (5)        2: Leave a room\n        //   |   +--------+ =====+ |            3: Join a public room previously\n        //   |(1)            (4) | |               left (handle as if new room)\n        //   V         (2)       V |            4: Reject an invite\n        // +------+ ========> +--------+         5: Invite to a room previously\n        // | JOIN |    (3)    | LEAVE* |            left (handle as if new room)\n        // +------+ <======== +--------+\n        //\n        // * equivalent to \"no state\"\n        switch (category) {\n            case \"invite\": // (5)\n                this._accumulateInviteState(roomId, data);\n                break;\n            case \"join\":\n                if (this.inviteRooms[roomId]) { // (1)\n                    // was previously invite, now join. We expect /sync to give\n                    // the entire state and timeline on 'join', so delete previous\n                    // invite state\n                    delete this.inviteRooms[roomId];\n                }\n                // (3)\n                this._accumulateJoinState(roomId, data);\n                break;\n            case \"leave\":\n                if (this.inviteRooms[roomId]) { // (4)\n                    delete this.inviteRooms[roomId];\n                } else { // (2)\n                    delete this.joinRooms[roomId];\n                }\n                break;\n            default:\n                console.error(\"Unknown cateogory: \", category);\n        }\n    }\n\n    _accumulateInviteState(roomId, data) {\n        if (!data.invite_state || !data.invite_state.events) { // no new data\n            return;\n        }\n        if (!this.inviteRooms[roomId]) {\n            this.inviteRooms[roomId] = {\n                invite_state: data.invite_state,\n            };\n            return;\n        }\n        // accumulate extra keys for invite->invite transitions\n        // clobber based on event type / state key\n        // We expect invite_state to be small, so just loop over the events\n        const currentData = this.inviteRooms[roomId];\n        data.invite_state.events.forEach((e) => {\n            let hasAdded = false;\n            for (let i = 0; i < currentData.invite_state.events.length; i++) {\n                const current = currentData.invite_state.events[i];\n                if (current.type === e.type && current.state_key == e.state_key) {\n                    currentData.invite_state.events[i] = e; // update\n                    hasAdded = true;\n                }\n            }\n            if (!hasAdded) {\n                currentData.invite_state.events.push(e);\n            }\n        });\n    }\n\n    // Accumulate timeline and state events in a room.\n    _accumulateJoinState(roomId, data) {\n        // We expect this function to be called a lot (every /sync) so we want\n        // this to be fast. /sync stores events in an array but we often want\n        // to clobber based on type/state_key. Rather than convert arrays to\n        // maps all the time, just keep private maps which contain\n        // the actual current accumulated sync state, and array-ify it when\n        // getJSON() is called.\n\n        // State resolution:\n        // The 'state' key is the delta from the previous sync (or start of time\n        // if no token was supplied), to the START of the timeline. To obtain\n        // the current state, we need to \"roll forward\" state by reading the\n        // timeline. We want to store the current state so we can drop events\n        // out the end of the timeline based on opts.maxTimelineEntries.\n        //\n        //      'state'     'timeline'     current state\n        // |-------x<======================>x\n        //          T   I   M   E\n        //\n        // When getJSON() is called, we 'roll back' the current state by the\n        // number of entries in the timeline to work out what 'state' should be.\n\n        // Back-pagination:\n        // On an initial /sync, the server provides a back-pagination token for\n        // the start of the timeline. When /sync deltas come down, they also\n        // include back-pagination tokens for the start of the timeline. This\n        // means not all events in the timeline have back-pagination tokens, as\n        // it is only the ones at the START of the timeline which have them.\n        // In order for us to have a valid timeline (and back-pagination token\n        // to match), we need to make sure that when we remove old timeline\n        // events, that we roll forward to an event which has a back-pagination\n        // token. This means we can't keep a strict sliding-window based on\n        // opts.maxTimelineEntries, and we may have a few less. We should never\n        // have more though, provided that the /sync limit is less than or equal\n        // to opts.maxTimelineEntries.\n\n        if (!this.joinRooms[roomId]) {\n            // Create truly empty objects so event types of 'hasOwnProperty' and co\n            // don't cause this code to break.\n            this.joinRooms[roomId] = {\n                _currentState: Object.create(null),\n                _timeline: [],\n                _accountData: Object.create(null),\n                _unreadNotifications: {},\n                _readReceipts: {},\n            };\n        }\n        const currentData = this.joinRooms[roomId];\n\n        if (data.account_data && data.account_data.events) {\n            // clobber based on type\n            data.account_data.events.forEach((e) => {\n                currentData._accountData[e.type] = e;\n            });\n        }\n\n        // these probably clobber, spec is unclear.\n        if (data.unread_notifications) {\n            currentData._unreadNotifications = data.unread_notifications;\n        }\n\n        if (data.ephemeral && data.ephemeral.events) {\n            data.ephemeral.events.forEach((e) => {\n                // We purposefully do not persist m.typing events.\n                // Technically you could refresh a browser before the timer on a\n                // typing event is up, so it'll look like you aren't typing when\n                // you really still are. However, the alternative is worse. If\n                // we do persist typing events, it will look like people are\n                // typing forever until someone really does start typing (which\n                // will prompt Synapse to send down an actual m.typing event to\n                // clobber the one we persisted).\n                if (e.type !== \"m.receipt\" || !e.content) {\n                    // This means we'll drop unknown ephemeral events but that\n                    // seems okay.\n                    return;\n                }\n                // Handle m.receipt events. They clobber based on:\n                //   (user_id, receipt_type)\n                // but they are keyed in the event as:\n                //   content:{ $event_id: { $receipt_type: { $user_id: {json} }}}\n                // so store them in the former so we can accumulate receipt deltas\n                // quickly and efficiently (we expect a lot of them). Fold the\n                // receipt type into the key name since we only have 1 at the\n                // moment (m.read) and nested JSON objects are slower and more\n                // of a hassle to work with. We'll inflate this back out when\n                // getJSON() is called.\n                Object.keys(e.content).forEach((eventId) => {\n                    if (!e.content[eventId][\"m.read\"]) {\n                        return;\n                    }\n                    Object.keys(e.content[eventId][\"m.read\"]).forEach((userId) => {\n                        // clobber on user ID\n                        currentData._readReceipts[userId] = {\n                            data: e.content[eventId][\"m.read\"][userId],\n                            eventId: eventId,\n                        };\n                    });\n                });\n            });\n        }\n\n        // if we got a limited sync, we need to remove all timeline entries or else\n        // we will have gaps in the timeline.\n        if (data.timeline && data.timeline.limited) {\n            currentData._timeline = [];\n        }\n\n        // Work out the current state. The deltas need to be applied in the order:\n        // - existing state which didn't come down /sync.\n        // - State events under the 'state' key.\n        // - State events in the 'timeline'.\n        if (data.state && data.state.events) {\n            data.state.events.forEach((e) => {\n                setState(currentData._currentState, e);\n            });\n        }\n        if (data.timeline && data.timeline.events) {\n            data.timeline.events.forEach((e, index) => {\n                // this nops if 'e' isn't a state event\n                setState(currentData._currentState, e);\n                // append the event to the timeline. The back-pagination token\n                // corresponds to the first event in the timeline\n                currentData._timeline.push({\n                    event: e,\n                    token: index === 0 ? data.timeline.prev_batch : null,\n                });\n            });\n        }\n\n        // attempt to prune the timeline by jumping between events which have\n        // pagination tokens.\n        if (currentData._timeline.length > this.opts.maxTimelineEntries) {\n            const startIndex = (\n                currentData._timeline.length - this.opts.maxTimelineEntries\n            );\n            for (let i = startIndex; i < currentData._timeline.length; i++) {\n                if (currentData._timeline[i].token) {\n                    // keep all events after this, including this one\n                    currentData._timeline = currentData._timeline.slice(\n                        i, currentData._timeline.length,\n                    );\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Accumulate incremental /sync group data.\n     * @param {Object} syncResponse the complete /sync JSON\n     */\n    _accumulateGroups(syncResponse) {\n        if (!syncResponse.groups) {\n            return;\n        }\n        if (syncResponse.groups.invite) {\n            Object.keys(syncResponse.groups.invite).forEach((groupId) => {\n                this._accumulateGroup(\n                    groupId, \"invite\", syncResponse.groups.invite[groupId],\n                );\n            });\n        }\n        if (syncResponse.groups.join) {\n            Object.keys(syncResponse.groups.join).forEach((groupId) => {\n                this._accumulateGroup(\n                    groupId, \"join\", syncResponse.groups.join[groupId],\n                );\n            });\n        }\n        if (syncResponse.groups.leave) {\n            Object.keys(syncResponse.groups.leave).forEach((groupId) => {\n                this._accumulateGroup(\n                    groupId, \"leave\", syncResponse.groups.leave[groupId],\n                );\n            });\n        }\n    }\n\n    _accumulateGroup(groupId, category, data) {\n        for (const cat of ['invite', 'join', 'leave']) {\n            delete this.groups[cat][groupId];\n        }\n        this.groups[category][groupId] = data;\n    }\n\n    /**\n     * Return everything under the 'rooms' key from a /sync response which\n     * represents all room data that should be stored. This should be paired\n     * with the sync token which represents the most recent /sync response\n     * provided to accumulate().\n     * @return {Object} An object with a \"nextBatch\", \"roomsData\" and \"accountData\"\n     * keys.\n     * The \"nextBatch\" key is a string which represents at what point in the\n     * /sync stream the accumulator reached. This token should be used when\n     * restarting a /sync stream at startup. Failure to do so can lead to missing\n     * events. The \"roomsData\" key is an Object which represents the entire\n     * /sync response from the 'rooms' key onwards. The \"accountData\" key is\n     * a list of raw events which represent global account data.\n     */\n    getJSON() {\n        const data = {\n            join: {},\n            invite: {},\n            // always empty. This is set by /sync when a room was previously\n            // in 'invite' or 'join'. On fresh startup, the client won't know\n            // about any previous room being in 'invite' or 'join' so we can\n            // just omit mentioning it at all, even if it has previously come\n            // down /sync.\n            // The notable exception is when a client is kicked or banned:\n            // we may want to hold onto that room so the client can clearly see\n            // why their room has disappeared. We don't persist it though because\n            // it is unclear *when* we can safely remove the room from the DB.\n            // Instead, we assume that if you're loading from the DB, you've\n            // refreshed the page, which means you've seen the kick/ban already.\n            leave: {},\n        };\n        Object.keys(this.inviteRooms).forEach((roomId) => {\n            data.invite[roomId] = this.inviteRooms[roomId];\n        });\n        Object.keys(this.joinRooms).forEach((roomId) => {\n            const roomData = this.joinRooms[roomId];\n            const roomJson = {\n                ephemeral: { events: [] },\n                account_data: { events: [] },\n                state: { events: [] },\n                timeline: {\n                    events: [],\n                    prev_batch: null,\n                },\n                unread_notifications: roomData._unreadNotifications,\n            };\n            // Add account data\n            Object.keys(roomData._accountData).forEach((evType) => {\n                roomJson.account_data.events.push(roomData._accountData[evType]);\n            });\n\n            // Add receipt data\n            const receiptEvent = {\n                type: \"m.receipt\",\n                room_id: roomId,\n                content: {\n                    // $event_id: { \"m.read\": { $user_id: $json } }\n                },\n            };\n            Object.keys(roomData._readReceipts).forEach((userId) => {\n                const receiptData = roomData._readReceipts[userId];\n                if (!receiptEvent.content[receiptData.eventId]) {\n                    receiptEvent.content[receiptData.eventId] = {\n                        \"m.read\": {},\n                    };\n                }\n                receiptEvent.content[receiptData.eventId][\"m.read\"][userId] = (\n                    receiptData.data\n                );\n            });\n            // add only if we have some receipt data\n            if (Object.keys(receiptEvent.content).length > 0) {\n                roomJson.ephemeral.events.push(receiptEvent);\n            }\n\n            // Add timeline data\n            roomData._timeline.forEach((msgData) => {\n                if (!roomJson.timeline.prev_batch) {\n                    // the first event we add to the timeline MUST match up to\n                    // the prev_batch token.\n                    if (!msgData.token) {\n                        return; // this shouldn't happen as we prune constantly.\n                    }\n                    roomJson.timeline.prev_batch = msgData.token;\n                }\n                roomJson.timeline.events.push(msgData.event);\n            });\n\n            // Add state data: roll back current state to the start of timeline,\n            // by \"reverse clobbering\" from the end of the timeline to the start.\n            // Convert maps back into arrays.\n            const rollBackState = Object.create(null);\n            for (let i = roomJson.timeline.events.length - 1; i >=0; i--) {\n                const timelineEvent = roomJson.timeline.events[i];\n                if (timelineEvent.state_key === null ||\n                        timelineEvent.state_key === undefined) {\n                    continue; // not a state event\n                }\n                // since we're going back in time, we need to use the previous\n                // state value else we'll break causality. We don't have the\n                // complete previous state event, so we need to create one.\n                const prevStateEvent = utils.deepCopy(timelineEvent);\n                if (prevStateEvent.unsigned) {\n                    if (prevStateEvent.unsigned.prev_content) {\n                        prevStateEvent.content = prevStateEvent.unsigned.prev_content;\n                    }\n                    if (prevStateEvent.unsigned.prev_sender) {\n                        prevStateEvent.sender = prevStateEvent.unsigned.prev_sender;\n                    }\n                }\n                setState(rollBackState, prevStateEvent);\n            }\n            Object.keys(roomData._currentState).forEach((evType) => {\n                Object.keys(roomData._currentState[evType]).forEach((stateKey) => {\n                    let ev = roomData._currentState[evType][stateKey];\n                    if (rollBackState[evType] && rollBackState[evType][stateKey]) {\n                        // use the reverse clobbered event instead.\n                        ev = rollBackState[evType][stateKey];\n                    }\n                    roomJson.state.events.push(ev);\n                });\n            });\n            data.join[roomId] = roomJson;\n        });\n\n        // Add account data\n        const accData = [];\n        Object.keys(this.accountData).forEach((evType) => {\n            accData.push(this.accountData[evType]);\n        });\n\n        return {\n            nextBatch: this.nextBatch,\n            roomsData: data,\n            groupsData: this.groups,\n            accountData: accData,\n        };\n    }\n}\n\nfunction setState(eventMap, event) {\n    if (event.state_key === null || event.state_key === undefined || !event.type) {\n        return;\n    }\n    if (!eventMap[event.type]) {\n        eventMap[event.type] = Object.create(null);\n    }\n    eventMap[event.type][event.state_key] = event;\n}\n\nmodule.exports = SyncAccumulator;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/*\n * TODO:\n * This class mainly serves to take all the syncing logic out of client.js and\n * into a separate file. It's all very fluid, and this class gut wrenches a lot\n * of MatrixClient props (e.g. _http). Given we want to support WebSockets as\n * an alternative syncing API, we may want to have a proper syncing interface\n * for HTTP and WS at some point.\n */\nimport Promise from 'bluebird';\nconst User = require(\"./models/user\");\nconst Room = require(\"./models/room\");\nconst Group = require('./models/group');\nconst utils = require(\"./utils\");\nconst Filter = require(\"./filter\");\nconst EventTimeline = require(\"./models/event-timeline\");\n\nconst DEBUG = true;\n\n// /sync requests allow you to set a timeout= but the request may continue\n// beyond that and wedge forever, so we need to track how long we are willing\n// to keep open the connection. This constant is *ADDED* to the timeout= value\n// to determine the max time we're willing to wait.\nconst BUFFER_PERIOD_MS = 80 * 1000;\n\n// Number of consecutive failed syncs that will lead to a syncState of ERROR as opposed\n// to RECONNECTING. This is needed to inform the client of server issues when the\n// keepAlive is successful but the server /sync fails.\nconst FAILED_SYNC_ERROR_THRESHOLD = 3;\n\nfunction getFilterName(userId, suffix) {\n    // scope this on the user ID because people may login on many accounts\n    // and they all need to be stored!\n    return \"FILTER_SYNC_\" + userId + (suffix ? \"_\" + suffix : \"\");\n}\n\nfunction debuglog(...params) {\n    if (!DEBUG) {\n        return;\n    }\n    console.log(...params);\n}\n\n\n/**\n * <b>Internal class - unstable.</b>\n * Construct an entity which is able to sync with a homeserver.\n * @constructor\n * @param {MatrixClient} client The matrix client instance to use.\n * @param {Object} opts Config options\n * @param {module:crypto=} opts.crypto Crypto manager\n * @param {Function=} opts.canResetEntireTimeline A function which is called\n * with a room ID and returns a boolean. It should return 'true' if the SDK can\n * SAFELY remove events from this room. It may not be safe to remove events if\n * there are other references to the timelines for this room.\n * Default: returns false.\n */\nfunction SyncApi(client, opts) {\n    this.client = client;\n    opts = opts || {};\n    opts.initialSyncLimit = (\n        opts.initialSyncLimit === undefined ? 8 : opts.initialSyncLimit\n    );\n    opts.resolveInvitesToProfiles = opts.resolveInvitesToProfiles || false;\n    opts.pollTimeout = opts.pollTimeout || (30 * 1000);\n    opts.pendingEventOrdering = opts.pendingEventOrdering || \"chronological\";\n    if (!opts.canResetEntireTimeline) {\n        opts.canResetEntireTimeline = function(roomId) {\n            return false;\n        };\n    }\n    this.opts = opts;\n    this._peekRoomId = null;\n    this._currentSyncRequest = null;\n    this._syncState = null;\n    this._catchingUp = false;\n    this._running = false;\n    this._keepAliveTimer = null;\n    this._connectionReturnedDefer = null;\n    this._notifEvents = []; // accumulator of sync events in the current sync response\n    this._failedSyncCount = 0; // Number of consecutive failed /sync requests\n\n    if (client.getNotifTimelineSet()) {\n        client.reEmitter.reEmit(client.getNotifTimelineSet(),\n               [\"Room.timeline\", \"Room.timelineReset\"]);\n    }\n}\n\n/**\n * @param {string} roomId\n * @return {Room}\n */\nSyncApi.prototype.createRoom = function(roomId) {\n    const client = this.client;\n    const room = new Room(roomId, {\n        pendingEventOrdering: this.opts.pendingEventOrdering,\n        timelineSupport: client.timelineSupport,\n    });\n    client.reEmitter.reEmit(room, [\"Room.name\", \"Room.timeline\", \"Room.redaction\",\n                          \"Room.receipt\", \"Room.tags\",\n                          \"Room.timelineReset\",\n                          \"Room.localEchoUpdated\",\n                          \"Room.accountData\",\n                         ]);\n    this._registerStateListeners(room);\n    return room;\n};\n\n/**\n * @param {string} groupId\n * @return {Group}\n */\nSyncApi.prototype.createGroup = function(groupId) {\n    const client = this.client;\n    const group = new Group(groupId);\n    client.reEmitter.reEmit(group, [\"Group.profile\", \"Group.myMembership\"]);\n    return group;\n};\n\n/**\n * @param {Room} room\n * @private\n */\nSyncApi.prototype._registerStateListeners = function(room) {\n    const client = this.client;\n    // we need to also re-emit room state and room member events, so hook it up\n    // to the client now. We need to add a listener for RoomState.members in\n    // order to hook them correctly. (TODO: find a better way?)\n    client.reEmitter.reEmit(room.currentState, [\n        \"RoomState.events\", \"RoomState.members\", \"RoomState.newMember\",\n    ]);\n    room.currentState.on(\"RoomState.newMember\", function(event, state, member) {\n        member.user = client.getUser(member.userId);\n        client.reEmitter.reEmit(\n            member,\n            [\n                \"RoomMember.name\", \"RoomMember.typing\", \"RoomMember.powerLevel\",\n                \"RoomMember.membership\",\n            ],\n        );\n    });\n};\n\n/**\n * @param {Room} room\n * @private\n */\nSyncApi.prototype._deregisterStateListeners = function(room) {\n    // could do with a better way of achieving this.\n    room.currentState.removeAllListeners(\"RoomState.events\");\n    room.currentState.removeAllListeners(\"RoomState.members\");\n    room.currentState.removeAllListeners(\"RoomState.newMember\");\n};\n\n\n/**\n * Sync rooms the user has left.\n * @return {Promise} Resolved when they've been added to the store.\n */\nSyncApi.prototype.syncLeftRooms = function() {\n    const client = this.client;\n    const self = this;\n\n    // grab a filter with limit=1 and include_leave=true\n    const filter = new Filter(this.client.credentials.userId);\n    filter.setTimelineLimit(1);\n    filter.setIncludeLeaveRooms(true);\n\n    const localTimeoutMs = this.opts.pollTimeout + BUFFER_PERIOD_MS;\n    const qps = {\n        timeout: 0, // don't want to block since this is a single isolated req\n    };\n\n    return client.getOrCreateFilter(\n        getFilterName(client.credentials.userId, \"LEFT_ROOMS\"), filter,\n    ).then(function(filterId) {\n        qps.filter = filterId;\n        return client._http.authedRequest(\n            undefined, \"GET\", \"/sync\", qps, undefined, localTimeoutMs,\n        );\n    }).then(function(data) {\n        let leaveRooms = [];\n        if (data.rooms && data.rooms.leave) {\n            leaveRooms = self._mapSyncResponseToRoomArray(data.rooms.leave);\n        }\n        const rooms = [];\n        leaveRooms.forEach(function(leaveObj) {\n            const room = leaveObj.room;\n            rooms.push(room);\n            if (!leaveObj.isBrandNewRoom) {\n                // the intention behind syncLeftRooms is to add in rooms which were\n                // *omitted* from the initial /sync. Rooms the user were joined to\n                // but then left whilst the app is running will appear in this list\n                // and we do not want to bother with them since they will have the\n                // current state already (and may get dupe messages if we add\n                // yet more timeline events!), so skip them.\n                // NB: When we persist rooms to localStorage this will be more\n                //     complicated...\n                return;\n            }\n            leaveObj.timeline = leaveObj.timeline || {};\n            const timelineEvents =\n                self._mapSyncEventsFormat(leaveObj.timeline, room);\n            const stateEvents = self._mapSyncEventsFormat(leaveObj.state, room);\n\n            // set the back-pagination token. Do this *before* adding any\n            // events so that clients can start back-paginating.\n            room.getLiveTimeline().setPaginationToken(leaveObj.timeline.prev_batch,\n                                                      EventTimeline.BACKWARDS);\n\n            self._processRoomEvents(room, stateEvents, timelineEvents);\n\n            room.recalculate(client.credentials.userId);\n            client.store.storeRoom(room);\n            client.emit(\"Room\", room);\n        });\n        return rooms;\n    });\n};\n\n/**\n * Peek into a room. This will result in the room in question being synced so it\n * is accessible via getRooms(). Live updates for the room will be provided.\n * @param {string} roomId The room ID to peek into.\n * @return {Promise} A promise which resolves once the room has been added to the\n * store.\n */\nSyncApi.prototype.peek = function(roomId) {\n    const self = this;\n    const client = this.client;\n    this._peekRoomId = roomId;\n    return this.client.roomInitialSync(roomId, 20).then(function(response) {\n        // make sure things are init'd\n        response.messages = response.messages || {};\n        response.messages.chunk = response.messages.chunk || [];\n        response.state = response.state || [];\n\n        const peekRoom = self.createRoom(roomId);\n\n        // FIXME: Mostly duplicated from _processRoomEvents but not entirely\n        // because \"state\" in this API is at the BEGINNING of the chunk\n        const oldStateEvents = utils.map(\n            utils.deepCopy(response.state), client.getEventMapper(),\n        );\n        const stateEvents = utils.map(\n            response.state, client.getEventMapper(),\n        );\n        const messages = utils.map(\n            response.messages.chunk, client.getEventMapper(),\n        );\n\n        // XXX: copypasted from /sync until we kill off this\n        // minging v1 API stuff)\n        // handle presence events (User objects)\n        if (response.presence && utils.isArray(response.presence)) {\n            response.presence.map(client.getEventMapper()).forEach(\n            function(presenceEvent) {\n                let user = client.store.getUser(presenceEvent.getContent().user_id);\n                if (user) {\n                    user.setPresenceEvent(presenceEvent);\n                } else {\n                    user = createNewUser(client, presenceEvent.getContent().user_id);\n                    user.setPresenceEvent(presenceEvent);\n                    client.store.storeUser(user);\n                }\n                client.emit(\"event\", presenceEvent);\n            });\n        }\n\n        // set the pagination token before adding the events in case people\n        // fire off pagination requests in response to the Room.timeline\n        // events.\n        if (response.messages.start) {\n            peekRoom.oldState.paginationToken = response.messages.start;\n        }\n\n        // set the state of the room to as it was after the timeline executes\n        peekRoom.oldState.setStateEvents(oldStateEvents);\n        peekRoom.currentState.setStateEvents(stateEvents);\n\n        self._resolveInvites(peekRoom);\n        peekRoom.recalculate(self.client.credentials.userId);\n\n        // roll backwards to diverge old state. addEventsToTimeline\n        // will overwrite the pagination token, so make sure it overwrites\n        // it with the right thing.\n        peekRoom.addEventsToTimeline(messages.reverse(), true,\n                                     peekRoom.getLiveTimeline(),\n                                     response.messages.start);\n\n        client.store.storeRoom(peekRoom);\n        client.emit(\"Room\", peekRoom);\n\n        self._peekPoll(peekRoom);\n        return peekRoom;\n    });\n};\n\n/**\n * Stop polling for updates in the peeked room. NOPs if there is no room being\n * peeked.\n */\nSyncApi.prototype.stopPeeking = function() {\n    this._peekRoomId = null;\n};\n\n/**\n * Do a peek room poll.\n * @param {Room} peekRoom\n * @param {string} token from= token\n */\nSyncApi.prototype._peekPoll = function(peekRoom, token) {\n    if (this._peekRoomId !== peekRoom.roomId) {\n        debuglog(\"Stopped peeking in room %s\", peekRoom.roomId);\n        return;\n    }\n\n    const self = this;\n    // FIXME: gut wrenching; hard-coded timeout values\n    this.client._http.authedRequest(undefined, \"GET\", \"/events\", {\n        room_id: peekRoom.roomId,\n        timeout: 30 * 1000,\n        from: token,\n    }, undefined, 50 * 1000).done(function(res) {\n        if (self._peekRoomId !== peekRoom.roomId) {\n            debuglog(\"Stopped peeking in room %s\", peekRoom.roomId);\n            return;\n        }\n        // We have a problem that we get presence both from /events and /sync\n        // however, /sync only returns presence for users in rooms\n        // you're actually joined to.\n        // in order to be sure to get presence for all of the users in the\n        // peeked room, we handle presence explicitly here. This may result\n        // in duplicate presence events firing for some users, which is a\n        // performance drain, but such is life.\n        // XXX: copypasted from /sync until we can kill this minging v1 stuff.\n\n        res.chunk.filter(function(e) {\n            return e.type === \"m.presence\";\n        }).map(self.client.getEventMapper()).forEach(function(presenceEvent) {\n            let user = self.client.store.getUser(presenceEvent.getContent().user_id);\n            if (user) {\n                user.setPresenceEvent(presenceEvent);\n            } else {\n                user = createNewUser(self.client, presenceEvent.getContent().user_id);\n                user.setPresenceEvent(presenceEvent);\n                self.client.store.storeUser(user);\n            }\n            self.client.emit(\"event\", presenceEvent);\n        });\n\n        // strip out events which aren't for the given room_id (e.g presence)\n        const events = res.chunk.filter(function(e) {\n            return e.room_id === peekRoom.roomId;\n        }).map(self.client.getEventMapper());\n\n        peekRoom.addLiveEvents(events);\n        self._peekPoll(peekRoom, res.end);\n    }, function(err) {\n        console.error(\"[%s] Peek poll failed: %s\", peekRoom.roomId, err);\n        setTimeout(function() {\n            self._peekPoll(peekRoom, token);\n        }, 30 * 1000);\n    });\n};\n\n/**\n * Returns the current state of this sync object\n * @see module:client~MatrixClient#event:\"sync\"\n * @return {?String}\n */\nSyncApi.prototype.getSyncState = function() {\n    return this._syncState;\n};\n\n/**\n * Main entry point\n */\nSyncApi.prototype.sync = function() {\n    const client = this.client;\n    const self = this;\n\n    this._running = true;\n\n    if (global.document) {\n        this._onOnlineBound = this._onOnline.bind(this);\n        global.document.addEventListener(\"online\", this._onOnlineBound, false);\n    }\n\n    // We need to do one-off checks before we can begin the /sync loop.\n    // These are:\n    //   1) We need to get push rules so we can check if events should bing as we get\n    //      them from /sync.\n    //   2) We need to get/create a filter which we can use for /sync.\n\n    function getPushRules() {\n        client.getPushRules().done(function(result) {\n            debuglog(\"Got push rules\");\n            client.pushRules = result;\n            getFilter(); // Now get the filter\n        }, function(err) {\n            self._startKeepAlives().done(function() {\n                getPushRules();\n            });\n            self._updateSyncState(\"ERROR\", { error: err });\n        });\n    }\n\n    function getFilter() {\n        let filter;\n        if (self.opts.filter) {\n            filter = self.opts.filter;\n        } else {\n            filter = new Filter(client.credentials.userId);\n            filter.setTimelineLimit(self.opts.initialSyncLimit);\n        }\n\n        client.getOrCreateFilter(\n            getFilterName(client.credentials.userId), filter,\n        ).done(function(filterId) {\n            // reset the notifications timeline to prepare it to paginate from\n            // the current point in time.\n            // The right solution would be to tie /sync pagination tokens into\n            // /notifications API somehow.\n            client.resetNotifTimelineSet();\n\n            self._sync({ filterId: filterId });\n        }, function(err) {\n            self._startKeepAlives().done(function() {\n                getFilter();\n            });\n            self._updateSyncState(\"ERROR\", { error: err });\n        });\n    }\n\n    if (client.isGuest()) {\n        // no push rules for guests, no access to POST filter for guests.\n        self._sync({});\n    } else {\n        getPushRules();\n    }\n};\n\n/**\n * Stops the sync object from syncing.\n */\nSyncApi.prototype.stop = function() {\n    debuglog(\"SyncApi.stop\");\n    if (global.document) {\n        global.document.removeEventListener(\"online\", this._onOnlineBound, false);\n        this._onOnlineBound = undefined;\n    }\n    this._running = false;\n    if (this._currentSyncRequest) {\n        this._currentSyncRequest.abort();\n    }\n    if (this._keepAliveTimer) {\n        clearTimeout(this._keepAliveTimer);\n        this._keepAliveTimer = null;\n    }\n};\n\n/**\n * Retry a backed off syncing request immediately. This should only be used when\n * the user <b>explicitly</b> attempts to retry their lost connection.\n * @return {boolean} True if this resulted in a request being retried.\n */\nSyncApi.prototype.retryImmediately = function() {\n    if (!this._connectionReturnedDefer) {\n        return false;\n    }\n    this._startKeepAlives(0);\n    return true;\n};\n\n/**\n * Invoke me to do /sync calls\n * @param {Object} syncOptions\n * @param {string} syncOptions.filterId\n * @param {boolean} syncOptions.hasSyncedBefore\n */\nSyncApi.prototype._sync = async function(syncOptions) {\n    const client = this.client;\n\n    if (!this._running) {\n        debuglog(\"Sync no longer running: exiting.\");\n        if (this._connectionReturnedDefer) {\n            this._connectionReturnedDefer.reject();\n            this._connectionReturnedDefer = null;\n        }\n        this._updateSyncState(\"STOPPED\");\n        return;\n    }\n\n    let filterId = syncOptions.filterId;\n    if (client.isGuest() && !filterId) {\n        filterId = this._getGuestFilter();\n    }\n\n    const syncToken = client.store.getSyncToken();\n\n    let pollTimeout = this.opts.pollTimeout;\n\n    if (this.getSyncState() !== 'SYNCING' || this._catchingUp) {\n        // unless we are happily syncing already, we want the server to return\n        // as quickly as possible, even if there are no events queued. This\n        // serves two purposes:\n        //\n        // * When the connection dies, we want to know asap when it comes back,\n        //   so that we can hide the error from the user. (We don't want to\n        //   have to wait for an event or a timeout).\n        //\n        // * We want to know if the server has any to_device messages queued up\n        //   for us. We do that by calling it with a zero timeout until it\n        //   doesn't give us any more to_device messages.\n        this._catchingUp = true;\n        pollTimeout = 0;\n    }\n\n    // normal timeout= plus buffer time\n    const clientSideTimeoutMs = pollTimeout + BUFFER_PERIOD_MS;\n\n    const qps = {\n        filter: filterId,\n        timeout: pollTimeout,\n    };\n\n    if (syncToken) {\n        qps.since = syncToken;\n    } else {\n        // use a cachebuster for initialsyncs, to make sure that\n        // we don't get a stale sync\n        // (https://github.com/vector-im/vector-web/issues/1354)\n        qps._cacheBuster = Date.now();\n    }\n\n    if (this.getSyncState() == 'ERROR' || this.getSyncState() == 'RECONNECTING') {\n        // we think the connection is dead. If it comes back up, we won't know\n        // about it till /sync returns. If the timeout= is high, this could\n        // be a long time. Set it to 0 when doing retries so we don't have to wait\n        // for an event or a timeout before emiting the SYNCING event.\n        qps.timeout = 0;\n    }\n\n    let savedSync;\n    if (!syncOptions.hasSyncedBefore) {\n        // Don't do an HTTP hit to /sync. Instead, load up the persisted /sync data,\n        // if there is data there.\n        savedSync = await client.store.getSavedSync();\n    }\n\n    let isCachedResponse = false;\n    let data;\n\n    if (savedSync) {\n        debuglog(\"sync(): not doing HTTP hit, instead returning stored /sync data\");\n        isCachedResponse = true;\n        data = {\n            next_batch: savedSync.nextBatch,\n            rooms: savedSync.roomsData,\n            groups: savedSync.groupsData,\n            account_data: {\n                events: savedSync.accountData,\n            },\n        };\n    } else {\n        try {\n            //debuglog('Starting sync since=' + syncToken);\n            this._currentSyncRequest = client._http.authedRequest(\n                undefined, \"GET\", \"/sync\", qps, undefined, clientSideTimeoutMs,\n            );\n            data = await this._currentSyncRequest;\n        } catch (e) {\n            this._onSyncError(e, syncOptions);\n            return;\n        }\n    }\n\n    //debuglog('Completed sync, next_batch=' + data.next_batch);\n\n    // set the sync token NOW *before* processing the events. We do this so\n    // if something barfs on an event we can skip it rather than constantly\n    // polling with the same token.\n    client.store.setSyncToken(data.next_batch);\n\n    // Reset after a successful sync\n    this._failedSyncCount = 0;\n\n    // We need to wait until the sync data has been sent to the backend\n    // because it appears that the sync data gets modified somewhere in\n    // processing it in such a way as to make it no longer cloneable.\n    // XXX: Find out what is modifying it!\n    if (!isCachedResponse) {\n        // Don't give the store back its own cached data\n        await client.store.setSyncData(data);\n    }\n\n    try {\n        await this._processSyncResponse(syncToken, data);\n    } catch(e) {\n        // log the exception with stack if we have it, else fall back\n        // to the plain description\n        console.error(\"Caught /sync error\", e.stack || e);\n    }\n\n    // emit synced events\n    const syncEventData = {\n        oldSyncToken: syncToken,\n        nextSyncToken: data.next_batch,\n        catchingUp: this._catchingUp,\n    };\n\n    if (!syncOptions.hasSyncedBefore) {\n        this._updateSyncState(\"PREPARED\", syncEventData);\n        syncOptions.hasSyncedBefore = true;\n    }\n\n    if (!isCachedResponse) {\n        // tell the crypto module to do its processing. It may block (to do a\n        // /keys/changes request).\n        if (this.opts.crypto) {\n            await this.opts.crypto.onSyncCompleted(syncEventData);\n        }\n\n        // keep emitting SYNCING -> SYNCING for clients who want to do bulk updates\n        this._updateSyncState(\"SYNCING\", syncEventData);\n\n        // tell databases that everything is now in a consistent state and can be\n        // saved (no point doing so if we only have the data we just got out of the\n        // store).\n        client.store.save();\n    }\n\n    // Begin next sync\n    this._sync(syncOptions);\n};\n\nSyncApi.prototype._onSyncError = function(err, syncOptions) {\n    if (!this._running) {\n        debuglog(\"Sync no longer running: exiting\");\n        if (this._connectionReturnedDefer) {\n            this._connectionReturnedDefer.reject();\n            this._connectionReturnedDefer = null;\n        }\n        this._updateSyncState(\"STOPPED\");\n        return;\n    }\n\n    console.error(\"/sync error %s\", err);\n    console.error(err);\n\n    this._failedSyncCount++;\n    console.log('Number of consecutive failed sync requests:', this._failedSyncCount);\n\n    debuglog(\"Starting keep-alive\");\n    // Note that we do *not* mark the sync connection as\n    // lost yet: we only do this if a keepalive poke\n    // fails, since long lived HTTP connections will\n    // go away sometimes and we shouldn't treat this as\n    // erroneous. We set the state to 'reconnecting'\n    // instead, so that clients can onserve this state\n    // if they wish.\n    this._startKeepAlives().then(() => {\n        this._sync(syncOptions);\n    });\n\n    this._currentSyncRequest = null;\n    // Transition from RECONNECTING to ERROR after a given number of failed syncs\n    this._updateSyncState(\n        this._failedSyncCount >= FAILED_SYNC_ERROR_THRESHOLD ?\n            \"ERROR\" : \"RECONNECTING\",\n    );\n};\n\n/**\n * Process data returned from a sync response and propagate it\n * into the model objects\n *\n * @param {string} syncToken the old next_batch token sent to this\n *    sync request.\n * @param {Object} data The response from /sync\n */\nSyncApi.prototype._processSyncResponse = async function(syncToken, data) {\n    const client = this.client;\n    const self = this;\n\n    // data looks like:\n    // {\n    //    next_batch: $token,\n    //    presence: { events: [] },\n    //    account_data: { events: [] },\n    //    device_lists: { changed: [\"@user:server\", ... ]},\n    //    to_device: { events: [] },\n    //    device_one_time_keys_count: { signed_curve25519: 42 },\n    //    rooms: {\n    //      invite: {\n    //        $roomid: {\n    //          invite_state: { events: [] }\n    //        }\n    //      },\n    //      join: {\n    //        $roomid: {\n    //          state: { events: [] },\n    //          timeline: { events: [], prev_batch: $token, limited: true },\n    //          ephemeral: { events: [] },\n    //          account_data: { events: [] },\n    //          unread_notifications: {\n    //              highlight_count: 0,\n    //              notification_count: 0,\n    //          }\n    //        }\n    //      },\n    //      leave: {\n    //        $roomid: {\n    //          state: { events: [] },\n    //          timeline: { events: [], prev_batch: $token }\n    //        }\n    //      }\n    //    },\n    //    groups: {\n    //        invite: {\n    //            $groupId: {\n    //                inviter: $inviter,\n    //                profile: {\n    //                    avatar_url: $avatarUrl,\n    //                    name: $groupName,\n    //                },\n    //            },\n    //        },\n    //        join: {},\n    //        leave: {},\n    //    },\n    // }\n\n    // TODO-arch:\n    // - Each event we pass through needs to be emitted via 'event', can we\n    //   do this in one place?\n    // - The isBrandNewRoom boilerplate is boilerplatey.\n\n    // handle presence events (User objects)\n    if (data.presence && utils.isArray(data.presence.events)) {\n        data.presence.events.map(client.getEventMapper()).forEach(\n        function(presenceEvent) {\n            let user = client.store.getUser(presenceEvent.getSender());\n            if (user) {\n                user.setPresenceEvent(presenceEvent);\n            } else {\n                user = createNewUser(client, presenceEvent.getSender());\n                user.setPresenceEvent(presenceEvent);\n                client.store.storeUser(user);\n            }\n            client.emit(\"event\", presenceEvent);\n        });\n    }\n\n    // handle non-room account_data\n    if (data.account_data && utils.isArray(data.account_data.events)) {\n        const events = data.account_data.events.map(client.getEventMapper());\n        client.store.storeAccountDataEvents(events);\n        events.forEach(\n            function(accountDataEvent) {\n                if (accountDataEvent.getType() == 'm.push_rules') {\n                    client.pushRules = accountDataEvent.getContent();\n                }\n                client.emit(\"accountData\", accountDataEvent);\n                return accountDataEvent;\n            },\n        );\n    }\n\n    // handle to-device events\n    if (data.to_device && utils.isArray(data.to_device.events) &&\n        data.to_device.events.length > 0\n       ) {\n        data.to_device.events\n            .map(client.getEventMapper())\n            .forEach(\n                function(toDeviceEvent) {\n                    const content = toDeviceEvent.getContent();\n                    if (\n                        toDeviceEvent.getType() == \"m.room.message\" &&\n                            content.msgtype == \"m.bad.encrypted\"\n                    ) {\n                        // the mapper already logged a warning.\n                        console.log(\n                            'Ignoring undecryptable to-device event from ' +\n                                toDeviceEvent.getSender(),\n                        );\n                        return;\n                    }\n\n                    client.emit(\"toDeviceEvent\", toDeviceEvent);\n                },\n            );\n    } else {\n        // no more to-device events: we can stop polling with a short timeout.\n        this._catchingUp = false;\n    }\n\n    if (data.groups) {\n        if (data.groups.invite) {\n            this._processGroupSyncEntry(data.groups.invite, 'invite');\n        }\n\n        if (data.groups.join) {\n            this._processGroupSyncEntry(data.groups.join, 'join');\n        }\n\n        if (data.groups.leave) {\n            this._processGroupSyncEntry(data.groups.leave, 'leave');\n        }\n    }\n\n    // the returned json structure is a bit crap, so make it into a\n    // nicer form (array) after applying sanity to make sure we don't fail\n    // on missing keys (on the off chance)\n    let inviteRooms = [];\n    let joinRooms = [];\n    let leaveRooms = [];\n\n    if (data.rooms) {\n        if (data.rooms.invite) {\n            inviteRooms = this._mapSyncResponseToRoomArray(data.rooms.invite);\n        }\n        if (data.rooms.join) {\n            joinRooms = this._mapSyncResponseToRoomArray(data.rooms.join);\n        }\n        if (data.rooms.leave) {\n            leaveRooms = this._mapSyncResponseToRoomArray(data.rooms.leave);\n        }\n    }\n\n    this._notifEvents = [];\n\n    // Handle invites\n    inviteRooms.forEach(function(inviteObj) {\n        const room = inviteObj.room;\n        const stateEvents =\n            self._mapSyncEventsFormat(inviteObj.invite_state, room);\n        self._processRoomEvents(room, stateEvents);\n        if (inviteObj.isBrandNewRoom) {\n            room.recalculate(client.credentials.userId);\n            client.store.storeRoom(room);\n            client.emit(\"Room\", room);\n        }\n        stateEvents.forEach(function(e) {\n            client.emit(\"event\", e);\n        });\n    });\n\n    // Handle joins\n    await Promise.mapSeries(joinRooms, async function(joinObj) {\n        const room = joinObj.room;\n        const stateEvents = self._mapSyncEventsFormat(joinObj.state, room);\n        const timelineEvents = self._mapSyncEventsFormat(joinObj.timeline, room);\n        const ephemeralEvents = self._mapSyncEventsFormat(joinObj.ephemeral);\n        const accountDataEvents = self._mapSyncEventsFormat(joinObj.account_data);\n\n        // we do this first so it's correct when any of the events fire\n        if (joinObj.unread_notifications) {\n            room.setUnreadNotificationCount(\n                'total', joinObj.unread_notifications.notification_count,\n            );\n            room.setUnreadNotificationCount(\n                'highlight', joinObj.unread_notifications.highlight_count,\n            );\n        }\n\n        joinObj.timeline = joinObj.timeline || {};\n\n        if (joinObj.isBrandNewRoom) {\n            // set the back-pagination token. Do this *before* adding any\n            // events so that clients can start back-paginating.\n            room.getLiveTimeline().setPaginationToken(\n                joinObj.timeline.prev_batch, EventTimeline.BACKWARDS);\n        } else if (joinObj.timeline.limited) {\n            let limited = true;\n\n            // we've got a limited sync, so we *probably* have a gap in the\n            // timeline, so should reset. But we might have been peeking or\n            // paginating and already have some of the events, in which\n            // case we just want to append any subsequent events to the end\n            // of the existing timeline.\n            //\n            // This is particularly important in the case that we already have\n            // *all* of the events in the timeline - in that case, if we reset\n            // the timeline, we'll end up with an entirely empty timeline,\n            // which we'll try to paginate but not get any new events (which\n            // will stop us linking the empty timeline into the chain).\n            //\n            for (let i = timelineEvents.length - 1; i >= 0; i--) {\n                const eventId = timelineEvents[i].getId();\n                if (room.getTimelineForEvent(eventId)) {\n                    debuglog(\"Already have event \" + eventId + \" in limited \" +\n                             \"sync - not resetting\");\n                    limited = false;\n\n                    // we might still be missing some of the events before i;\n                    // we don't want to be adding them to the end of the\n                    // timeline because that would put them out of order.\n                    timelineEvents.splice(0, i);\n\n                    // XXX: there's a problem here if the skipped part of the\n                    // timeline modifies the state set in stateEvents, because\n                    // we'll end up using the state from stateEvents rather\n                    // than the later state from timelineEvents. We probably\n                    // need to wind stateEvents forward over the events we're\n                    // skipping.\n\n                    break;\n                }\n            }\n\n            if (limited) {\n                self._deregisterStateListeners(room);\n                room.resetLiveTimeline(\n                    joinObj.timeline.prev_batch,\n                    self.opts.canResetEntireTimeline(room.roomId) ? null : syncToken,\n                );\n\n                // We have to assume any gap in any timeline is\n                // reason to stop incrementally tracking notifications and\n                // reset the timeline.\n                client.resetNotifTimelineSet();\n\n                self._registerStateListeners(room);\n            }\n        }\n\n        self._processRoomEvents(room, stateEvents, timelineEvents);\n\n        // XXX: should we be adding ephemeralEvents to the timeline?\n        // It feels like that for symmetry with room.addAccountData()\n        // there should be a room.addEphemeralEvents() or similar.\n        room.addLiveEvents(ephemeralEvents);\n\n        // we deliberately don't add accountData to the timeline\n        room.addAccountData(accountDataEvents);\n\n        room.recalculate(client.credentials.userId);\n        if (joinObj.isBrandNewRoom) {\n            client.store.storeRoom(room);\n            client.emit(\"Room\", room);\n        }\n\n        async function processRoomEvent(e) {\n            client.emit(\"event\", e);\n            if (e.isState() && e.getType() == \"m.room.encryption\" && self.opts.crypto) {\n                await self.opts.crypto.onCryptoEvent(e);\n            }\n        }\n\n        await Promise.mapSeries(stateEvents, processRoomEvent);\n        await Promise.mapSeries(timelineEvents, processRoomEvent);\n        ephemeralEvents.forEach(function(e) {\n            client.emit(\"event\", e);\n        });\n        accountDataEvents.forEach(function(e) {\n            client.emit(\"event\", e);\n        });\n    });\n\n    // Handle leaves (e.g. kicked rooms)\n    leaveRooms.forEach(function(leaveObj) {\n        const room = leaveObj.room;\n        const stateEvents =\n            self._mapSyncEventsFormat(leaveObj.state, room);\n        const timelineEvents =\n            self._mapSyncEventsFormat(leaveObj.timeline, room);\n        const accountDataEvents =\n            self._mapSyncEventsFormat(leaveObj.account_data);\n\n        self._processRoomEvents(room, stateEvents, timelineEvents);\n        room.addAccountData(accountDataEvents);\n\n        room.recalculate(client.credentials.userId);\n        if (leaveObj.isBrandNewRoom) {\n            client.store.storeRoom(room);\n            client.emit(\"Room\", room);\n        }\n\n        stateEvents.forEach(function(e) {\n            client.emit(\"event\", e);\n        });\n        timelineEvents.forEach(function(e) {\n            client.emit(\"event\", e);\n        });\n        accountDataEvents.forEach(function(e) {\n            client.emit(\"event\", e);\n        });\n    });\n\n    // update the notification timeline, if appropriate.\n    // we only do this for live events, as otherwise we can't order them sanely\n    // in the timeline relative to ones paginated in by /notifications.\n    // XXX: we could fix this by making EventTimeline support chronological\n    // ordering... but it doesn't, right now.\n    if (syncToken && this._notifEvents.length) {\n        this._notifEvents.sort(function(a, b) {\n            return a.getTs() - b.getTs();\n        });\n        this._notifEvents.forEach(function(event) {\n            client.getNotifTimelineSet().addLiveEvent(event);\n        });\n    }\n\n    // Handle device list updates\n    if (data.device_lists) {\n        if (this.opts.crypto) {\n            await this.opts.crypto.handleDeviceListChanges(data.device_lists);\n        } else {\n            // FIXME if we *don't* have a crypto module, we still need to\n            // invalidate the device lists. But that would require a\n            // substantial bit of rework :/.\n        }\n    }\n\n    // Handle one_time_keys_count\n    if (this.opts.crypto && data.device_one_time_keys_count) {\n        const currentCount = data.device_one_time_keys_count.signed_curve25519 || 0;\n        this.opts.crypto.updateOneTimeKeyCount(currentCount);\n    }\n};\n\n/**\n * Starts polling the connectivity check endpoint\n * @param {number} delay How long to delay until the first poll.\n *        defaults to a short, randomised interval (to prevent\n *        tightlooping if /versions succeeds but /sync etc. fail).\n * @return {promise} which resolves once the connection returns\n */\nSyncApi.prototype._startKeepAlives = function(delay) {\n    if (delay === undefined) {\n        delay = 2000 + Math.floor(Math.random() * 5000);\n    }\n\n    if (this._keepAliveTimer !== null) {\n        clearTimeout(this._keepAliveTimer);\n    }\n    const self = this;\n    if (delay > 0) {\n        self._keepAliveTimer = setTimeout(\n            self._pokeKeepAlive.bind(self),\n            delay,\n        );\n    } else {\n        self._pokeKeepAlive();\n    }\n    if (!this._connectionReturnedDefer) {\n        this._connectionReturnedDefer = Promise.defer();\n    }\n    return this._connectionReturnedDefer.promise;\n};\n\n/**\n * Make a dummy call to /_matrix/client/versions, to see if the HS is\n * reachable.\n *\n * On failure, schedules a call back to itself. On success, resolves\n * this._connectionReturnedDefer.\n */\nSyncApi.prototype._pokeKeepAlive = function() {\n    const self = this;\n    function success() {\n        clearTimeout(self._keepAliveTimer);\n        if (self._connectionReturnedDefer) {\n            self._connectionReturnedDefer.resolve();\n            self._connectionReturnedDefer = null;\n        }\n    }\n\n    this.client._http.request(\n        undefined, // callback\n        \"GET\", \"/_matrix/client/versions\",\n        undefined, // queryParams\n        undefined, // data\n        {\n            prefix: '',\n            localTimeoutMs: 15 * 1000,\n        },\n    ).done(function() {\n        success();\n    }, function(err) {\n        if (err.httpStatus == 400) {\n            // treat this as a success because the server probably just doesn't\n            // support /versions: point is, we're getting a response.\n            // We wait a short time though, just in case somehow the server\n            // is in a mode where it 400s /versions responses and sync etc.\n            // responses fail, this will mean we don't hammer in a loop.\n            self._keepAliveTimer = setTimeout(success, 2000);\n        } else {\n            self._keepAliveTimer = setTimeout(\n                self._pokeKeepAlive.bind(self),\n                5000 + Math.floor(Math.random() * 5000),\n            );\n            // A keepalive has failed, so we emit the\n            // error state (whether or not this is the\n            // first failure).\n            // Note we do this after setting the timer:\n            // this lets the unit tests advance the mock\n            // clock when the get the error.\n            self._updateSyncState(\"ERROR\", { error: err });\n        }\n    });\n};\n\n/**\n * @param {Object} groupsSection Groups section object, eg. response.groups.invite\n * @param {string} sectionName Which section this is ('invite', 'join' or 'leave')\n */\nSyncApi.prototype._processGroupSyncEntry = function(groupsSection, sectionName) {\n    // Processes entries from 'groups' section of the sync stream\n    for (const groupId of Object.keys(groupsSection)) {\n        const groupInfo = groupsSection[groupId];\n        let group = this.client.store.getGroup(groupId);\n        const isBrandNew = group === null;\n        if (group === null) {\n            group = this.createGroup(groupId);\n        }\n        if (groupInfo.profile) {\n            group.setProfile(\n                groupInfo.profile.name, groupInfo.profile.avatar_url,\n            );\n        }\n        if (groupInfo.inviter) {\n            group.setInviter({userId: groupInfo.inviter});\n        }\n        group.setMyMembership(sectionName);\n        if (isBrandNew) {\n            this.client.store.storeGroup(group);\n            this.client.emit(\"Group\", group);\n        }\n    }\n};\n\n/**\n * @param {Object} obj\n * @return {Object[]}\n */\nSyncApi.prototype._mapSyncResponseToRoomArray = function(obj) {\n    // Maps { roomid: {stuff}, roomid: {stuff} }\n    // to\n    // [{stuff+Room+isBrandNewRoom}, {stuff+Room+isBrandNewRoom}]\n    const client = this.client;\n    const self = this;\n    return utils.keys(obj).map(function(roomId) {\n        const arrObj = obj[roomId];\n        let room = client.store.getRoom(roomId);\n        let isBrandNewRoom = false;\n        if (!room) {\n            room = self.createRoom(roomId);\n            isBrandNewRoom = true;\n        }\n        arrObj.room = room;\n        arrObj.isBrandNewRoom = isBrandNewRoom;\n        return arrObj;\n    });\n};\n\n/**\n * @param {Object} obj\n * @param {Room} room\n * @return {MatrixEvent[]}\n */\nSyncApi.prototype._mapSyncEventsFormat = function(obj, room) {\n    if (!obj || !utils.isArray(obj.events)) {\n        return [];\n    }\n    const mapper = this.client.getEventMapper();\n    return obj.events.map(function(e) {\n        if (room) {\n            e.room_id = room.roomId;\n        }\n        return mapper(e);\n    });\n};\n\n/**\n * @param {Room} room\n */\nSyncApi.prototype._resolveInvites = function(room) {\n    if (!room || !this.opts.resolveInvitesToProfiles) {\n        return;\n    }\n    const client = this.client;\n    // For each invited room member we want to give them a displayname/avatar url\n    // if they have one (the m.room.member invites don't contain this).\n    room.getMembersWithMembership(\"invite\").forEach(function(member) {\n        if (member._requestedProfileInfo) {\n            return;\n        }\n        member._requestedProfileInfo = true;\n        // try to get a cached copy first.\n        const user = client.getUser(member.userId);\n        let promise;\n        if (user) {\n            promise = Promise.resolve({\n                avatar_url: user.avatarUrl,\n                displayname: user.displayName,\n            });\n        } else {\n            promise = client.getProfileInfo(member.userId);\n        }\n        promise.done(function(info) {\n            // slightly naughty by doctoring the invite event but this means all\n            // the code paths remain the same between invite/join display name stuff\n            // which is a worthy trade-off for some minor pollution.\n            const inviteEvent = member.events.member;\n            if (inviteEvent.getContent().membership !== \"invite\") {\n                // between resolving and now they have since joined, so don't clobber\n                return;\n            }\n            inviteEvent.getContent().avatar_url = info.avatar_url;\n            inviteEvent.getContent().displayname = info.displayname;\n            // fire listeners\n            member.setMembershipEvent(inviteEvent, room.currentState);\n        }, function(err) {\n            // OH WELL.\n        });\n    });\n};\n\n/**\n * @param {Room} room\n * @param {MatrixEvent[]} stateEventList A list of state events. This is the state\n * at the *START* of the timeline list if it is supplied.\n * @param {MatrixEvent[]} [timelineEventList] A list of timeline events. Lower index\n * is earlier in time. Higher index is later.\n */\nSyncApi.prototype._processRoomEvents = function(room, stateEventList,\n                                                timelineEventList) {\n    timelineEventList = timelineEventList || [];\n    const client = this.client;\n    // \"old\" and \"current\" state are the same initially; they\n    // start diverging if the user paginates.\n    // We must deep copy otherwise membership changes in old state\n    // will leak through to current state!\n    const oldStateEvents = utils.map(\n        utils.deepCopy(\n            stateEventList.map(function(mxEvent) {\n                return mxEvent.event;\n            }),\n        ), client.getEventMapper(),\n    );\n    const stateEvents = stateEventList;\n\n    // set the state of the room to as it was before the timeline executes\n    //\n    // XXX: what if we've already seen (some of) the events in the timeline,\n    // and they modify some of the state set in stateEvents? In that case we'll\n    // end up with the state from stateEvents, instead of the more recent state\n    // from the timeline.\n    room.oldState.setStateEvents(oldStateEvents);\n    room.currentState.setStateEvents(stateEvents);\n\n    this._resolveInvites(room);\n\n    // recalculate the room name at this point as adding events to the timeline\n    // may make notifications appear which should have the right name.\n    room.recalculate(this.client.credentials.userId);\n\n    // gather our notifications into this._notifEvents\n    if (client.getNotifTimelineSet()) {\n        for (let i = 0; i < timelineEventList.length; i++) {\n            const pushActions = client.getPushActionsForEvent(timelineEventList[i]);\n            if (pushActions && pushActions.notify &&\n                pushActions.tweaks && pushActions.tweaks.highlight) {\n                this._notifEvents.push(timelineEventList[i]);\n            }\n        }\n    }\n\n    // execute the timeline events, this will begin to diverge the current state\n    // if the timeline has any state events in it.\n    room.addLiveEvents(timelineEventList);\n};\n\n/**\n * @return {string}\n */\nSyncApi.prototype._getGuestFilter = function() {\n    const guestRooms = this.client._guestRooms; // FIXME: horrible gut-wrenching\n    if (!guestRooms) {\n        return \"{}\";\n    }\n    // we just need to specify the filter inline if we're a guest because guests\n    // can't create filters.\n    return JSON.stringify({\n        room: {\n            timeline: {\n                limit: 20,\n            },\n        },\n    });\n};\n\n/**\n * Sets the sync state and emits an event to say so\n * @param {String} newState The new state string\n * @param {Object} data Object of additional data to emit in the event\n */\nSyncApi.prototype._updateSyncState = function(newState, data) {\n    const old = this._syncState;\n    this._syncState = newState;\n    this.client.emit(\"sync\", this._syncState, old, data);\n};\n\n/**\n * Event handler for the 'online' event\n * This event is generally unreliable and precise behaviour\n * varies between browsers, so we poll for connectivity too,\n * but this might help us reconnect a little faster.\n */\nSyncApi.prototype._onOnline = function() {\n    debuglog(\"Browser thinks we are back online\");\n    this._startKeepAlives(0);\n};\n\nfunction createNewUser(client, userId) {\n    const user = new User(userId);\n    client.reEmitter.reEmit(user, [\n        \"User.avatarUrl\", \"User.displayName\", \"User.presence\",\n        \"User.currentlyActive\", \"User.lastPresenceTs\",\n    ]);\n    return user;\n}\n\n/** */\nmodule.exports = SyncApi;\n","/*\nCopyright 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n\n/** @module timeline-window */\n\nimport Promise from 'bluebird';\nconst EventTimeline = require(\"./models/event-timeline\");\n\n/**\n * @private\n */\nconst DEBUG = false;\n\n/**\n * @private\n */\nconst debuglog = DEBUG ? console.log.bind(console) : function() {};\n\n/**\n * the number of times we ask the server for more events before giving up\n *\n * @private\n */\nconst DEFAULT_PAGINATE_LOOP_LIMIT = 5;\n\n/**\n * Construct a TimelineWindow.\n *\n * <p>This abstracts the separate timelines in a Matrix {@link\n * module:models/room|Room} into a single iterable thing. It keeps track of\n * the start and endpoints of the window, which can be advanced with the help\n * of pagination requests.\n *\n * <p>Before the window is useful, it must be initialised by calling {@link\n * module:timeline-window~TimelineWindow#load|load}.\n *\n * <p>Note that the window will not automatically extend itself when new events\n * are received from /sync; you should arrange to call {@link\n * module:timeline-window~TimelineWindow#paginate|paginate} on {@link\n * module:client~MatrixClient.event:\"Room.timeline\"|Room.timeline} events.\n *\n * @param {MatrixClient} client   MatrixClient to be used for context/pagination\n *   requests.\n *\n * @param {EventTimelineSet} timelineSet  The timelineSet to track\n *\n * @param {Object} [opts] Configuration options for this window\n *\n * @param {number} [opts.windowLimit = 1000] maximum number of events to keep\n *    in the window. If more events are retrieved via pagination requests,\n *    excess events will be dropped from the other end of the window.\n *\n * @constructor\n */\nfunction TimelineWindow(client, timelineSet, opts) {\n    opts = opts || {};\n    this._client = client;\n    this._timelineSet = timelineSet;\n\n    // these will be TimelineIndex objects; they delineate the 'start' and\n    // 'end' of the window.\n    //\n    // _start.index is inclusive; _end.index is exclusive.\n    this._start = null;\n    this._end = null;\n\n    this._eventCount = 0;\n    this._windowLimit = opts.windowLimit || 1000;\n}\n\n/**\n * Initialise the window to point at a given event, or the live timeline\n *\n * @param {string} [initialEventId]   If given, the window will contain the\n *    given event\n * @param {number} [initialWindowSize = 20]   Size of the initial window\n *\n * @return {module:client.Promise}\n */\nTimelineWindow.prototype.load = function(initialEventId, initialWindowSize) {\n    const self = this;\n    initialWindowSize = initialWindowSize || 20;\n\n    // given an EventTimeline, find the event we were looking for, and initialise our\n    // fields so that the event in question is in the middle of the window.\n    const initFields = function(timeline) {\n        let eventIndex;\n\n        const events = timeline.getEvents();\n\n        if (!initialEventId) {\n            // we were looking for the live timeline: initialise to the end\n            eventIndex = events.length;\n        } else {\n            for (let i = 0; i < events.length; i++) {\n                if (events[i].getId() == initialEventId) {\n                    eventIndex = i;\n                    break;\n                }\n            }\n\n            if (eventIndex === undefined) {\n                throw new Error(\"getEventTimeline result didn't include requested event\");\n            }\n        }\n\n        const endIndex = Math.min(events.length,\n                                eventIndex + Math.ceil(initialWindowSize / 2));\n        const startIndex = Math.max(0, endIndex - initialWindowSize);\n        self._start = new TimelineIndex(timeline, startIndex - timeline.getBaseIndex());\n        self._end = new TimelineIndex(timeline, endIndex - timeline.getBaseIndex());\n        self._eventCount = endIndex - startIndex;\n    };\n\n    // We avoid delaying the resolution of the promise by a reactor tick if\n    // we already have the data we need, which is important to keep room-switching\n    // feeling snappy.\n    //\n    if (initialEventId) {\n        const prom = this._client.getEventTimeline(this._timelineSet, initialEventId);\n\n        if (prom.isFulfilled()) {\n            initFields(prom.value());\n            return Promise.resolve();\n        } else {\n            return prom.then(initFields);\n        }\n    } else {\n        const tl = this._timelineSet.getLiveTimeline();\n        initFields(tl);\n        return Promise.resolve();\n    }\n};\n\n/**\n * Check if this window can be extended\n *\n * <p>This returns true if we either have more events, or if we have a\n * pagination token which means we can paginate in that direction. It does not\n * necessarily mean that there are more events available in that direction at\n * this time.\n *\n * @param {string} direction   EventTimeline.BACKWARDS to check if we can\n *   paginate backwards; EventTimeline.FORWARDS to check if we can go forwards\n *\n * @return {boolean} true if we can paginate in the given direction\n */\nTimelineWindow.prototype.canPaginate = function(direction) {\n    let tl;\n    if (direction == EventTimeline.BACKWARDS) {\n        tl = this._start;\n    } else if (direction == EventTimeline.FORWARDS) {\n        tl = this._end;\n    } else {\n        throw new Error(\"Invalid direction '\" + direction + \"'\");\n    }\n\n    if (!tl) {\n        debuglog(\"TimelineWindow: no timeline yet\");\n        return false;\n    }\n\n    if (direction == EventTimeline.BACKWARDS) {\n        if (tl.index > tl.minIndex()) {\n            return true;\n        }\n    } else {\n        if (tl.index < tl.maxIndex()) {\n            return true;\n        }\n    }\n\n    return Boolean(tl.timeline.getNeighbouringTimeline(direction) ||\n                   tl.timeline.getPaginationToken(direction));\n};\n\n/**\n * Attempt to extend the window\n *\n * @param {string} direction   EventTimeline.BACKWARDS to extend the window\n *    backwards (towards older events); EventTimeline.FORWARDS to go forwards.\n *\n * @param {number} size   number of events to try to extend by. If fewer than this\n *    number are immediately available, then we return immediately rather than\n *    making an API call.\n *\n * @param {boolean} [makeRequest = true] whether we should make API calls to\n *    fetch further events if we don't have any at all. (This has no effect if\n *    the room already knows about additional events in the relevant direction,\n *    even if there are fewer than 'size' of them, as we will just return those\n *    we already know about.)\n *\n * @param {number} [requestLimit = 5] limit for the number of API requests we\n *    should make.\n *\n * @return {module:client.Promise} Resolves to a boolean which is true if more events\n *    were successfully retrieved.\n */\nTimelineWindow.prototype.paginate = function(direction, size, makeRequest,\n                                             requestLimit) {\n    // Either wind back the message cap (if there are enough events in the\n    // timeline to do so), or fire off a pagination request.\n\n    if (makeRequest === undefined) {\n        makeRequest = true;\n    }\n\n    if (requestLimit === undefined) {\n        requestLimit = DEFAULT_PAGINATE_LOOP_LIMIT;\n    }\n\n    let tl;\n    if (direction == EventTimeline.BACKWARDS) {\n        tl = this._start;\n    } else if (direction == EventTimeline.FORWARDS) {\n        tl = this._end;\n    } else {\n        throw new Error(\"Invalid direction '\" + direction + \"'\");\n    }\n\n    if (!tl) {\n        debuglog(\"TimelineWindow: no timeline yet\");\n        return Promise.resolve(false);\n    }\n\n    if (tl.pendingPaginate) {\n        return tl.pendingPaginate;\n    }\n\n    // try moving the cap\n    const count = (direction == EventTimeline.BACKWARDS) ?\n        tl.retreat(size) : tl.advance(size);\n\n    if (count) {\n        this._eventCount += count;\n        debuglog(\"TimelineWindow: increased cap by \" + count +\n                 \" (now \" + this._eventCount + \")\");\n        // remove some events from the other end, if necessary\n        const excess = this._eventCount - this._windowLimit;\n        if (excess > 0) {\n            this.unpaginate(excess, direction != EventTimeline.BACKWARDS);\n        }\n        return Promise.resolve(true);\n    }\n\n    if (!makeRequest || requestLimit === 0) {\n        // todo: should we return something different to indicate that there\n        // might be more events out there, but we haven't found them yet?\n        return Promise.resolve(false);\n    }\n\n    // try making a pagination request\n    const token = tl.timeline.getPaginationToken(direction);\n    if (!token) {\n        debuglog(\"TimelineWindow: no token\");\n        return Promise.resolve(false);\n    }\n\n    debuglog(\"TimelineWindow: starting request\");\n    const self = this;\n\n    const prom = this._client.paginateEventTimeline(tl.timeline, {\n        backwards: direction == EventTimeline.BACKWARDS,\n        limit: size,\n    }).finally(function() {\n        tl.pendingPaginate = null;\n    }).then(function(r) {\n        debuglog(\"TimelineWindow: request completed with result \" + r);\n        if (!r) {\n            // end of timeline\n            return false;\n        }\n\n        // recurse to advance the index into the results.\n        //\n        // If we don't get any new events, we want to make sure we keep asking\n        // the server for events for as long as we have a valid pagination\n        // token. In particular, we want to know if we've actually hit the\n        // start of the timeline, or if we just happened to know about all of\n        // the events thanks to https://matrix.org/jira/browse/SYN-645.\n        //\n        // On the other hand, we necessarily want to wait forever for the\n        // server to make its mind up about whether there are other events,\n        // because it gives a bad user experience\n        // (https://github.com/vector-im/vector-web/issues/1204).\n        return self.paginate(direction, size, true, requestLimit - 1);\n    });\n    tl.pendingPaginate = prom;\n    return prom;\n};\n\n\n/**\n * Remove `delta` events from the start or end of the timeline.\n *\n * @param {number}  delta           number of events to remove from the timeline\n * @param {boolean} startOfTimeline if events should be removed from the start\n *     of the timeline.\n */\nTimelineWindow.prototype.unpaginate = function(delta, startOfTimeline) {\n    const tl = startOfTimeline ? this._start : this._end;\n\n    // sanity-check the delta\n    if (delta > this._eventCount || delta < 0) {\n        throw new Error(\"Attemting to unpaginate \" + delta + \" events, but \" +\n                        \"only have \" + this._eventCount + \" in the timeline\");\n    }\n\n    while (delta > 0) {\n        const count = startOfTimeline ? tl.advance(delta) : tl.retreat(delta);\n        if (count <= 0) {\n            // sadness. This shouldn't be possible.\n            throw new Error(\n                \"Unable to unpaginate any further, but still have \" +\n                    this._eventCount + \" events\");\n        }\n\n        delta -= count;\n        this._eventCount -= count;\n        debuglog(\"TimelineWindow.unpaginate: dropped \" + count +\n                 \" (now \" + this._eventCount + \")\");\n    }\n};\n\n\n/**\n * Get a list of the events currently in the window\n *\n * @return {MatrixEvent[]} the events in the window\n */\nTimelineWindow.prototype.getEvents = function() {\n    if (!this._start) {\n        // not yet loaded\n        return [];\n    }\n\n    const result = [];\n\n    // iterate through each timeline between this._start and this._end\n    // (inclusive).\n    let timeline = this._start.timeline;\n    while (true) {\n        const events = timeline.getEvents();\n\n        // For the first timeline in the chain, we want to start at\n        // this._start.index. For the last timeline in the chain, we want to\n        // stop before this._end.index. Otherwise, we want to copy all of the\n        // events in the timeline.\n        //\n        // (Note that both this._start.index and this._end.index are relative\n        // to their respective timelines' BaseIndex).\n        //\n        let startIndex = 0, endIndex = events.length;\n        if (timeline === this._start.timeline) {\n            startIndex = this._start.index + timeline.getBaseIndex();\n        }\n        if (timeline === this._end.timeline) {\n            endIndex = this._end.index + timeline.getBaseIndex();\n        }\n\n        for (let i = startIndex; i < endIndex; i++) {\n            result.push(events[i]);\n        }\n\n        // if we're not done, iterate to the next timeline.\n        if (timeline === this._end.timeline) {\n            break;\n        } else {\n            timeline = timeline.getNeighbouringTimeline(EventTimeline.FORWARDS);\n        }\n    }\n\n    return result;\n};\n\n\n/**\n * a thing which contains a timeline reference, and an index into it.\n *\n * @constructor\n * @param {EventTimeline} timeline\n * @param {number} index\n * @private\n */\nfunction TimelineIndex(timeline, index) {\n    this.timeline = timeline;\n\n    // the indexes are relative to BaseIndex, so could well be negative.\n    this.index = index;\n}\n\n/**\n * @return {number} the minimum possible value for the index in the current\n *    timeline\n */\nTimelineIndex.prototype.minIndex = function() {\n    return this.timeline.getBaseIndex() * -1;\n};\n\n/**\n * @return {number} the maximum possible value for the index in the current\n *    timeline (exclusive - ie, it actually returns one more than the index\n *    of the last element).\n */\nTimelineIndex.prototype.maxIndex = function() {\n    return this.timeline.getEvents().length - this.timeline.getBaseIndex();\n};\n\n/**\n * Try move the index forward, or into the neighbouring timeline\n *\n * @param {number} delta  number of events to advance by\n * @return {number} number of events successfully advanced by\n */\nTimelineIndex.prototype.advance = function(delta) {\n    if (!delta) {\n        return 0;\n    }\n\n    // first try moving the index in the current timeline. See if there is room\n    // to do so.\n    let cappedDelta;\n    if (delta < 0) {\n        // we want to wind the index backwards.\n        //\n        // (this.minIndex() - this.index) is a negative number whose magnitude\n        // is the amount of room we have to wind back the index in the current\n        // timeline. We cap delta to this quantity.\n        cappedDelta = Math.max(delta, this.minIndex() - this.index);\n        if (cappedDelta < 0) {\n            this.index += cappedDelta;\n            return cappedDelta;\n        }\n    } else {\n        // we want to wind the index forwards.\n        //\n        // (this.maxIndex() - this.index) is a (positive) number whose magnitude\n        // is the amount of room we have to wind forward the index in the current\n        // timeline. We cap delta to this quantity.\n        cappedDelta = Math.min(delta, this.maxIndex() - this.index);\n        if (cappedDelta > 0) {\n            this.index += cappedDelta;\n            return cappedDelta;\n        }\n    }\n\n    // the index is already at the start/end of the current timeline.\n    //\n    // next see if there is a neighbouring timeline to switch to.\n    const neighbour = this.timeline.getNeighbouringTimeline(\n        delta < 0 ? EventTimeline.BACKWARDS : EventTimeline.FORWARDS);\n    if (neighbour) {\n        this.timeline = neighbour;\n        if (delta < 0) {\n            this.index = this.maxIndex();\n        } else {\n            this.index = this.minIndex();\n        }\n\n        debuglog(\"paginate: switched to new neighbour\");\n\n        // recurse, using the next timeline\n        return this.advance(delta);\n    }\n\n    return 0;\n};\n\n/**\n * Try move the index backwards, or into the neighbouring timeline\n *\n * @param {number} delta  number of events to retreat by\n * @return {number} number of events successfully retreated by\n */\nTimelineIndex.prototype.retreat = function(delta) {\n    return this.advance(delta * -1) * -1;\n};\n\n/**\n * The TimelineWindow class.\n */\nmodule.exports.TimelineWindow = TimelineWindow;\n\n/**\n * The TimelineIndex class. exported here for unit testing.\n */\nmodule.exports.TimelineIndex = TimelineIndex;\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * This is an internal module.\n * @module utils\n */\n\n/**\n * Encode a dictionary of query parameters.\n * @param {Object} params A dict of key/values to encode e.g.\n * {\"foo\": \"bar\", \"baz\": \"taz\"}\n * @return {string} The encoded string e.g. foo=bar&baz=taz\n */\nmodule.exports.encodeParams = function(params) {\n    let qs = \"\";\n    for (const key in params) {\n        if (!params.hasOwnProperty(key)) {\n            continue;\n        }\n        qs += \"&\" + encodeURIComponent(key) + \"=\" +\n                encodeURIComponent(params[key]);\n    }\n    return qs.substring(1);\n};\n\n/**\n * Encodes a URI according to a set of template variables. Variables will be\n * passed through encodeURIComponent.\n * @param {string} pathTemplate The path with template variables e.g. '/foo/$bar'.\n * @param {Object} variables The key/value pairs to replace the template\n * variables with. E.g. { \"$bar\": \"baz\" }.\n * @return {string} The result of replacing all template variables e.g. '/foo/baz'.\n */\nmodule.exports.encodeUri = function(pathTemplate, variables) {\n    for (const key in variables) {\n        if (!variables.hasOwnProperty(key)) {\n            continue;\n        }\n        pathTemplate = pathTemplate.replace(\n            key, encodeURIComponent(variables[key]),\n        );\n    }\n    return pathTemplate;\n};\n\n/**\n * Applies a map function to the given array.\n * @param {Array} array The array to apply the function to.\n * @param {Function} fn The function that will be invoked for each element in\n * the array with the signature <code>fn(element){...}</code>\n * @return {Array} A new array with the results of the function.\n */\nmodule.exports.map = function(array, fn) {\n    const results = new Array(array.length);\n    for (let i = 0; i < array.length; i++) {\n        results[i] = fn(array[i]);\n    }\n    return results;\n};\n\n/**\n * Applies a filter function to the given array.\n * @param {Array} array The array to apply the function to.\n * @param {Function} fn The function that will be invoked for each element in\n * the array. It should return true to keep the element. The function signature\n * looks like <code>fn(element, index, array){...}</code>.\n * @return {Array} A new array with the results of the function.\n */\nmodule.exports.filter = function(array, fn) {\n    const results = [];\n    for (let i = 0; i < array.length; i++) {\n        if (fn(array[i], i, array)) {\n            results.push(array[i]);\n        }\n    }\n    return results;\n};\n\n/**\n * Get the keys for an object. Same as <code>Object.keys()</code>.\n * @param {Object} obj The object to get the keys for.\n * @return {string[]} The keys of the object.\n */\nmodule.exports.keys = function(obj) {\n    const keys = [];\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n            continue;\n        }\n        keys.push(key);\n    }\n    return keys;\n};\n\n/**\n * Get the values for an object.\n * @param {Object} obj The object to get the values for.\n * @return {Array<*>} The values of the object.\n */\nmodule.exports.values = function(obj) {\n    const values = [];\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n            continue;\n        }\n        values.push(obj[key]);\n    }\n    return values;\n};\n\n/**\n * Invoke a function for each item in the array.\n * @param {Array} array The array.\n * @param {Function} fn The function to invoke for each element. Has the\n * function signature <code>fn(element, index)</code>.\n */\nmodule.exports.forEach = function(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        fn(array[i], i);\n    }\n};\n\n/**\n * The findElement() method returns a value in the array, if an element in the array\n * satisfies (returns true) the provided testing function. Otherwise undefined\n * is returned.\n * @param {Array} array The array.\n * @param {Function} fn Function to execute on each value in the array, with the\n * function signature <code>fn(element, index, array)</code>\n * @param {boolean} reverse True to search in reverse order.\n * @return {*} The first value in the array which returns <code>true</code> for\n * the given function.\n */\nmodule.exports.findElement = function(array, fn, reverse) {\n    let i;\n    if (reverse) {\n        for (i = array.length - 1; i >= 0; i--) {\n            if (fn(array[i], i, array)) {\n                return array[i];\n            }\n        }\n    } else {\n        for (i = 0; i < array.length; i++) {\n            if (fn(array[i], i, array)) {\n                return array[i];\n            }\n        }\n    }\n};\n\n/**\n * The removeElement() method removes the first element in the array that\n * satisfies (returns true) the provided testing function.\n * @param {Array} array The array.\n * @param {Function} fn Function to execute on each value in the array, with the\n * function signature <code>fn(element, index, array)</code>. Return true to\n * remove this element and break.\n * @param {boolean} reverse True to search in reverse order.\n * @return {boolean} True if an element was removed.\n */\nmodule.exports.removeElement = function(array, fn, reverse) {\n    let i;\n    let removed;\n    if (reverse) {\n        for (i = array.length - 1; i >= 0; i--) {\n            if (fn(array[i], i, array)) {\n                removed = array[i];\n                array.splice(i, 1);\n                return removed;\n            }\n        }\n    } else {\n        for (i = 0; i < array.length; i++) {\n            if (fn(array[i], i, array)) {\n                removed = array[i];\n                array.splice(i, 1);\n                return removed;\n            }\n        }\n    }\n    return false;\n};\n\n/**\n * Checks if the given thing is a function.\n * @param {*} value The thing to check.\n * @return {boolean} True if it is a function.\n */\nmodule.exports.isFunction = function(value) {\n    return Object.prototype.toString.call(value) == \"[object Function]\";\n};\n\n/**\n * Checks if the given thing is an array.\n * @param {*} value The thing to check.\n * @return {boolean} True if it is an array.\n */\nmodule.exports.isArray = function(value) {\n    return Array.isArray ? Array.isArray(value) :\n        Boolean(value && value.constructor === Array);\n};\n\n/**\n * Checks that the given object has the specified keys.\n * @param {Object} obj The object to check.\n * @param {string[]} keys The list of keys that 'obj' must have.\n * @throws If the object is missing keys.\n */\nmodule.exports.checkObjectHasKeys = function(obj, keys) {\n    for (let i = 0; i < keys.length; i++) {\n        if (!obj.hasOwnProperty(keys[i])) {\n            throw new Error(\"Missing required key: \" + keys[i]);\n        }\n    }\n};\n\n/**\n * Checks that the given object has no extra keys other than the specified ones.\n * @param {Object} obj The object to check.\n * @param {string[]} allowedKeys The list of allowed key names.\n * @throws If there are extra keys.\n */\nmodule.exports.checkObjectHasNoAdditionalKeys = function(obj, allowedKeys) {\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n            continue;\n        }\n        if (allowedKeys.indexOf(key) === -1) {\n            throw new Error(\"Unknown key: \" + key);\n        }\n    }\n};\n\n/**\n * Deep copy the given object. The object MUST NOT have circular references and\n * MUST NOT have functions.\n * @param {Object} obj The object to deep copy.\n * @return {Object} A copy of the object without any references to the original.\n */\nmodule.exports.deepCopy = function(obj) {\n    return JSON.parse(JSON.stringify(obj));\n};\n\n/**\n * Compare two objects for equality. The objects MUST NOT have circular references.\n *\n * @param {Object} x The first object to compare.\n * @param {Object} y The second object to compare.\n *\n * @return {boolean} true if the two objects are equal\n */\nconst deepCompare = module.exports.deepCompare = function(x, y) {\n    // Inspired by\n    // http://stackoverflow.com/questions/1068834/object-comparison-in-javascript#1144249\n\n    // Compare primitives and functions.\n    // Also check if both arguments link to the same object.\n    if (x === y) {\n        return true;\n    }\n\n    if (typeof x !== typeof y) {\n        return false;\n    }\n\n    // special-case NaN (since NaN !== NaN)\n    if (typeof x === 'number' && isNaN(x) && isNaN(y)) {\n         return true;\n    }\n\n    // special-case null (since typeof null == 'object', but null.constructor\n    // throws)\n    if (x === null || y === null) {\n        return x === y;\n    }\n\n    // everything else is either an unequal primitive, or an object\n    if (!(x instanceof Object)) {\n        return false;\n    }\n\n    // check they are the same type of object\n    if (x.constructor !== y.constructor || x.prototype !== y.prototype) {\n        return false;\n    }\n\n    // special-casing for some special types of object\n    if (x instanceof RegExp || x instanceof Date) {\n        return x.toString() === y.toString();\n    }\n\n    // the object algorithm works for Array, but it's sub-optimal.\n    if (x instanceof Array) {\n        if (x.length !== y.length) {\n            return false;\n        }\n\n        for (let i = 0; i < x.length; i++) {\n            if (!deepCompare(x[i], y[i])) {\n                return false;\n            }\n        }\n    } else {\n        // disable jshint \"The body of a for in should be wrapped in an if\n        // statement\"\n        /* jshint -W089 */\n\n        // check that all of y's direct keys are in x\n        let p;\n        for (p in y) {\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                return false;\n            }\n        }\n\n        // finally, compare each of x's keys with y\n        for (p in y) {\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                return false;\n            }\n            if (!deepCompare(x[p], y[p])) {\n                return false;\n            }\n        }\n    }\n    /* jshint +W089 */\n    return true;\n};\n\n/**\n * Copy properties from one object to another.\n *\n * All enumerable properties, included inherited ones, are copied.\n *\n * This is approximately equivalent to ES6's Object.assign, except\n * that the latter doesn't copy inherited properties.\n *\n * @param {Object} target  The object that will receive new properties\n * @param {...Object} source  Objects from which to copy properties\n *\n * @return {Object} target\n */\nmodule.exports.extend = function() {\n    const target = arguments[0] || {};\n    for (let i = 1; i < arguments.length; i++) {\n        const source = arguments[i];\n        for (const propName in source) { // eslint-disable-line guard-for-in\n            target[propName] = source[propName];\n        }\n    }\n    return target;\n};\n\n/**\n * Run polyfills to add Array.map and Array.filter if they are missing.\n */\nmodule.exports.runPolyfills = function() {\n    //                Array.prototype.filter\n    // ========================================================\n    // SOURCE:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\n    if (!Array.prototype.filter) {\n      Array.prototype.filter = function(fun/*, thisArg*/) {\n        if (this === void 0 || this === null) {\n          throw new TypeError();\n        }\n\n        const t = Object(this);\n        const len = t.length >>> 0;\n        if (typeof fun !== 'function') {\n          throw new TypeError();\n        }\n\n        const res = [];\n        const thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (let i = 0; i < len; i++) {\n          if (i in t) {\n            const val = t[i];\n\n            // NOTE: Technically this should Object.defineProperty at\n            //       the next index, as push can be affected by\n            //       properties on Object.prototype and Array.prototype.\n            //       But that method's new, and collisions should be\n            //       rare, so use the more-compatible alternative.\n            if (fun.call(thisArg, val, i, t)) {\n              res.push(val);\n            }\n          }\n        }\n\n        return res;\n      };\n    }\n\n    //                Array.prototype.map\n    // ========================================================\n    // SOURCE:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\n    // Production steps of ECMA-262, Edition 5, 15.4.4.19\n    // Reference: http://es5.github.io/#x15.4.4.19\n    if (!Array.prototype.map) {\n      Array.prototype.map = function(callback, thisArg) {\n        let T, k;\n\n        if (this === null || this === undefined) {\n          throw new TypeError(' this is null or not defined');\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this|\n        //    value as the argument.\n        const O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal\n        //    method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        const len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== 'function') {\n          throw new TypeError(callback + ' is not a function');\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n          T = thisArg;\n        }\n\n        // 6. Let A be a new array created as if by the expression new Array(len)\n        //    where Array is the standard built-in constructor with that name and\n        //    len is the value of len.\n        const A = new Array(len);\n\n        // 7. Let k be 0\n        k = 0;\n\n        // 8. Repeat, while k < len\n        while (k < len) {\n          var kValue, mappedValue;\n\n          // a. Let Pk be ToString(k).\n          //   This is implicit for LHS operands of the in operator\n          // b. Let kPresent be the result of calling the HasProperty internal\n          //    method of O with argument Pk.\n          //   This step can be combined with c\n          // c. If kPresent is true, then\n          if (k in O) {\n            // i. Let kValue be the result of calling the Get internal\n            //    method of O with argument Pk.\n            kValue = O[k];\n\n            // ii. Let mappedValue be the result of calling the Call internal\n            //     method of callback with T as the this value and argument\n            //     list containing kValue, k, and O.\n            mappedValue = callback.call(T, kValue, k, O);\n\n            // iii. Call the DefineOwnProperty internal method of A with arguments\n            // Pk, Property Descriptor\n            // { Value: mappedValue,\n            //   Writable: true,\n            //   Enumerable: true,\n            //   Configurable: true },\n            // and false.\n\n            // In browsers that support Object.defineProperty, use the following:\n            // Object.defineProperty(A, k, {\n            //   value: mappedValue,\n            //   writable: true,\n            //   enumerable: true,\n            //   configurable: true\n            // });\n\n            // For best browser support, use the following:\n            A[k] = mappedValue;\n          }\n          // d. Increase k by 1.\n          k++;\n        }\n\n        // 9. return A\n        return A;\n      };\n    }\n\n    //                Array.prototype.forEach\n    // ========================================================\n    // SOURCE:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\n    // Production steps of ECMA-262, Edition 5, 15.4.4.18\n    // Reference: http://es5.github.io/#x15.4.4.18\n    if (!Array.prototype.forEach) {\n      Array.prototype.forEach = function(callback, thisArg) {\n        let T, k;\n\n        if (this === null || this === undefined) {\n          throw new TypeError(' this is null or not defined');\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this| value as the\n        // argument.\n        const O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method of O with the\n        // argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        const len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n          throw new TypeError(callback + ' is not a function');\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n          T = thisArg;\n        }\n\n        // 6. Let k be 0\n        k = 0;\n\n        // 7. Repeat, while k < len\n        while (k < len) {\n          var kValue;\n\n          // a. Let Pk be ToString(k).\n          //   This is implicit for LHS operands of the in operator\n          // b. Let kPresent be the result of calling the HasProperty internal\n          //    method of O with\n          //    argument Pk.\n          //   This step can be combined with c\n          // c. If kPresent is true, then\n          if (k in O) {\n            // i. Let kValue be the result of calling the Get internal method of O with\n            // argument Pk\n            kValue = O[k];\n\n            // ii. Call the Call internal method of callback with T as the this value and\n            // argument list containing kValue, k, and O.\n            callback.call(T, kValue, k, O);\n          }\n          // d. Increase k by 1.\n          k++;\n        }\n        // 8. return undefined\n      };\n    }\n};\n\n/**\n * Inherit the prototype methods from one constructor into another. This is a\n * port of the Node.js implementation with an Object.create polyfill.\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nmodule.exports.inherits = function(ctor, superCtor) {\n    // Add Object.create polyfill for IE8\n    // Source:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript\n    // /Reference/Global_Objects/Object/create#Polyfill\n    if (typeof Object.create != 'function') {\n      // Production steps of ECMA-262, Edition 5, 15.2.3.5\n      // Reference: http://es5.github.io/#x15.2.3.5\n      Object.create = (function() {\n        // To save on memory, use a shared constructor\n        function Temp() {}\n\n        // make a safe reference to Object.prototype.hasOwnProperty\n        const hasOwn = Object.prototype.hasOwnProperty;\n\n        return function(O) {\n          // 1. If Type(O) is not Object or Null throw a TypeError exception.\n          if (typeof O != 'object') {\n            throw new TypeError('Object prototype may only be an Object or null');\n          }\n\n          // 2. Let obj be the result of creating a new object as if by the\n          //    expression new Object() where Object is the standard built-in\n          //    constructor with that name\n          // 3. Set the [[Prototype]] internal property of obj to O.\n          Temp.prototype = O;\n          const obj = new Temp();\n          Temp.prototype = null; // Let's not keep a stray reference to O...\n\n          // 4. If the argument Properties is present and not undefined, add\n          //    own properties to obj as if by calling the standard built-in\n          //    function Object.defineProperties with arguments obj and\n          //    Properties.\n          if (arguments.length > 1) {\n            // Object.defineProperties does ToObject on its first argument.\n            const Properties = Object(arguments[1]);\n            for (const prop in Properties) {\n              if (hasOwn.call(Properties, prop)) {\n                obj[prop] = Properties[prop];\n              }\n            }\n          }\n\n          // 5. Return obj\n          return obj;\n        };\n      })();\n    }\n    // END polyfill\n\n    // Add util.inherits from Node.js\n    // Source:\n    // https://github.com/joyent/node/blob/master/lib/util.js\n    // Copyright Joyent, Inc. and other Node contributors.\n    //\n    // Permission is hereby granted, free of charge, to any person obtaining a\n    // copy of this software and associated documentation files (the\n    // \"Software\"), to deal in the Software without restriction, including\n    // without limitation the rights to use, copy, modify, merge, publish,\n    // distribute, sublicense, and/or sell copies of the Software, and to permit\n    // persons to whom the Software is furnished to do so, subject to the\n    // following conditions:\n    //\n    // The above copyright notice and this permission notice shall be included\n    // in all copies or substantial portions of the Software.\n    //\n    // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n    // USE OR OTHER DEALINGS IN THE SOFTWARE.\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true,\n        },\n    });\n};\n","/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * This is an internal module. See {@link createNewMatrixCall} for the public API.\n * @module webrtc/call\n */\nconst utils = require(\"../utils\");\nconst EventEmitter = require(\"events\").EventEmitter;\nconst DEBUG = true;  // set true to enable console logging.\n\n// events: hangup, error(err), replaced(call), state(state, oldState)\n\n/**\n * Fires when the MatrixCall encounters an error when sending a Matrix event.\n * <p>\n * This is required to allow errors, which occur during sending of events, to bubble up.\n * (This is because call.js does a hangup when it encounters a normal `error`, which in\n * turn could lead to an UnknownDeviceError.)\n * <p>\n * To deal with an UnknownDeviceError when trying to send events, the application should let\n * users know that there are new devices in the encrypted room (into which the event was\n * sent) and give the user the options to resend unsent events or cancel them. Resending\n * is done using {@link module:client~MatrixClient#resendEvent} and cancelling can be done by using\n * {@link module:client~MatrixClient#cancelPendingEvent}.\n * <p>\n * MatrixCall will not do anything in response to an error that causes `send_event_error`\n * to be emitted with the exception of sending `m.call.candidates`, which is retried upon\n * failure when ICE candidates are being sent. This happens during call setup.\n *\n * @event module:webrtc/call~MatrixCall#\"send_event_error\"\n * @param {Error} err The error caught from calling client.sendEvent in call.js.\n * @example\n * matrixCall.on(\"send_event_error\", function(err){\n *   console.error(err);\n * });\n */\n\n/**\n * Fires whenever an error occurs when call.js encounters an issue with setting up the call.\n * <p>\n * The error given will have a code equal to either `MatrixCall.ERR_LOCAL_OFFER_FAILED` or\n * `MatrixCall.ERR_NO_USER_MEDIA`. `ERR_LOCAL_OFFER_FAILED` is emitted when the local client\n * fails to create an offer. `ERR_NO_USER_MEDIA` is emitted when the user has denied access\n * to their audio/video hardware.\n *\n * @event module:webrtc/call~MatrixCall#\"error\"\n * @param {Error} err The error raised by MatrixCall.\n * @example\n * matrixCall.on(\"error\", function(err){\n *   console.error(err.code, err);\n * });\n */\n\n/**\n * Construct a new Matrix Call.\n * @constructor\n * @param {Object} opts Config options.\n * @param {string} opts.roomId The room ID for this call.\n * @param {Object} opts.webRtc The WebRTC globals from the browser.\n * @param {boolean} opts.forceTURN whether relay through TURN should be forced.\n * @param {Object} opts.URL The URL global.\n * @param {Array<Object>} opts.turnServers Optional. A list of TURN servers.\n * @param {MatrixClient} opts.client The Matrix Client instance to send events to.\n */\nfunction MatrixCall(opts) {\n    this.roomId = opts.roomId;\n    this.client = opts.client;\n    this.webRtc = opts.webRtc;\n    this.forceTURN = opts.forceTURN;\n    this.URL = opts.URL;\n    // Array of Objects with urls, username, credential keys\n    this.turnServers = opts.turnServers || [];\n    if (this.turnServers.length === 0) {\n        this.turnServers.push({\n            urls: [MatrixCall.FALLBACK_STUN_SERVER],\n        });\n    }\n    utils.forEach(this.turnServers, function(server) {\n        utils.checkObjectHasKeys(server, [\"urls\"]);\n    });\n\n    this.callId = \"c\" + new Date().getTime() + Math.random();\n    this.state = 'fledgling';\n    this.didConnect = false;\n\n    // A queue for candidates waiting to go out.\n    // We try to amalgamate candidates into a single candidate message where\n    // possible\n    this.candidateSendQueue = [];\n    this.candidateSendTries = 0;\n\n    // Lookup from opaque queue ID to a promise for media element operations that\n    // need to be serialised into a given queue.  Store this per-MatrixCall on the\n    // assumption that multiple matrix calls will never compete for control of the\n    // same DOM elements.\n    this.mediaPromises = Object.create(null);\n\n    this.screenSharingStream = null;\n}\n/** The length of time a call can be ringing for. */\nMatrixCall.CALL_TIMEOUT_MS = 60000;\n/** The fallback server to use for STUN. */\nMatrixCall.FALLBACK_STUN_SERVER = 'stun:stun.l.google.com:19302';\n/** An error code when the local client failed to create an offer. */\nMatrixCall.ERR_LOCAL_OFFER_FAILED = \"local_offer_failed\";\n/**\n * An error code when there is no local mic/camera to use. This may be because\n * the hardware isn't plugged in, or the user has explicitly denied access.\n */\nMatrixCall.ERR_NO_USER_MEDIA = \"no_user_media\";\n\nutils.inherits(MatrixCall, EventEmitter);\n\n/**\n * Place a voice call to this room.\n * @throws If you have not specified a listener for 'error' events.\n */\nMatrixCall.prototype.placeVoiceCall = function() {\n    debuglog(\"placeVoiceCall\");\n    checkForErrorListener(this);\n    _placeCallWithConstraints(this, _getUserMediaVideoContraints('voice'));\n    this.type = 'voice';\n};\n\n/**\n * Place a video call to this room.\n * @param {Element} remoteVideoElement a <code>&lt;video&gt;</code> DOM element\n * to render video to.\n * @param {Element} localVideoElement a <code>&lt;video&gt;</code> DOM element\n * to render the local camera preview.\n * @throws If you have not specified a listener for 'error' events.\n */\nMatrixCall.prototype.placeVideoCall = function(remoteVideoElement, localVideoElement) {\n    debuglog(\"placeVideoCall\");\n    checkForErrorListener(this);\n    this.localVideoElement = localVideoElement;\n    this.remoteVideoElement = remoteVideoElement;\n    _placeCallWithConstraints(this, _getUserMediaVideoContraints('video'));\n    this.type = 'video';\n    _tryPlayRemoteStream(this);\n};\n\n/**\n * Place a screen-sharing call to this room. This includes audio.\n * <b>This method is EXPERIMENTAL and subject to change without warning. It\n * only works in Google Chrome and Firefox >= 44.</b>\n * @param {Element} remoteVideoElement a <code>&lt;video&gt;</code> DOM element\n * to render video to.\n * @param {Element} localVideoElement a <code>&lt;video&gt;</code> DOM element\n * to render the local camera preview.\n * @throws If you have not specified a listener for 'error' events.\n */\nMatrixCall.prototype.placeScreenSharingCall =\n    function(remoteVideoElement, localVideoElement) {\n    debuglog(\"placeScreenSharingCall\");\n    checkForErrorListener(this);\n    const screenConstraints = _getScreenSharingConstraints(this);\n    if (!screenConstraints) {\n        return;\n    }\n    this.localVideoElement = localVideoElement;\n    this.remoteVideoElement = remoteVideoElement;\n    const self = this;\n    this.webRtc.getUserMedia(screenConstraints, function(stream) {\n        self.screenSharingStream = stream;\n        debuglog(\"Got screen stream, requesting audio stream...\");\n        const audioConstraints = _getUserMediaVideoContraints('voice');\n        _placeCallWithConstraints(self, audioConstraints);\n    }, function(err) {\n        self.emit(\"error\",\n            callError(\n                MatrixCall.ERR_NO_USER_MEDIA,\n                \"Failed to get screen-sharing stream: \" + err,\n            ),\n        );\n    });\n    this.type = 'video';\n    _tryPlayRemoteStream(this);\n};\n\n/**\n * Play the given HTMLMediaElement, serialising the operation into a chain\n * of promises to avoid racing access to the element\n * @param {Element} element HTMLMediaElement element to play\n * @param {string} queueId Arbitrary ID to track the chain of promises to be used\n */\nMatrixCall.prototype.playElement = function(element, queueId) {\n    console.log(\"queuing play on \" + queueId + \" and element \" + element);\n    // XXX: FIXME: Does this leak elements, given the old promises\n    // may hang around and retain a reference to them?\n    if (this.mediaPromises[queueId]) {\n        // XXX: these promises can fail (e.g. by <video/> being unmounted whilst\n        // pending receiving media to play - e.g. whilst switching between\n        // rooms before answering an inbound call), and throw unhandled exceptions.\n        // However, we should soldier on as best we can even if they fail, given\n        // these failures may be non-fatal (as in the case of unmounts)\n        this.mediaPromises[queueId] =\n            this.mediaPromises[queueId].then(function() {\n                console.log(\"previous promise completed for \" + queueId);\n                return element.play();\n            }, function() {\n                console.log(\"previous promise failed for \" + queueId);\n                return element.play();\n            });\n    } else {\n        this.mediaPromises[queueId] = element.play();\n    }\n};\n\n/**\n * Pause the given HTMLMediaElement, serialising the operation into a chain\n * of promises to avoid racing access to the element\n * @param {Element} element HTMLMediaElement element to pause\n * @param {string} queueId Arbitrary ID to track the chain of promises to be used\n */\nMatrixCall.prototype.pauseElement = function(element, queueId) {\n    console.log(\"queuing pause on \" + queueId + \" and element \" + element);\n    if (this.mediaPromises[queueId]) {\n        this.mediaPromises[queueId] =\n            this.mediaPromises[queueId].then(function() {\n                console.log(\"previous promise completed for \" + queueId);\n                return element.pause();\n            }, function() {\n                console.log(\"previous promise failed for \" + queueId);\n                return element.pause();\n            });\n    } else {\n        // pause doesn't actually return a promise, but do this for symmetry\n        // and just in case it does in future.\n        this.mediaPromises[queueId] = element.pause();\n    }\n};\n\n/**\n * Assign the given HTMLMediaElement by setting the .src attribute on it,\n * serialising the operation into a chain of promises to avoid racing access\n * to the element\n * @param {Element} element HTMLMediaElement element to pause\n * @param {MediaStream} srcObject the srcObject attribute value to assign to the element\n * @param {string} queueId Arbitrary ID to track the chain of promises to be used\n */\nMatrixCall.prototype.assignElement = function(element, srcObject, queueId) {\n    console.log(\"queuing assign on \" + queueId + \" element \" + element + \" for \" +\n        srcObject);\n    if (this.mediaPromises[queueId]) {\n        this.mediaPromises[queueId] =\n            this.mediaPromises[queueId].then(function() {\n                console.log(\"previous promise completed for \" + queueId);\n                element.srcObject = srcObject;\n            }, function() {\n                console.log(\"previous promise failed for \" + queueId);\n                element.srcObject = srcObject;\n            });\n    } else {\n        element.srcObject = srcObject;\n    }\n};\n\n/**\n * Retrieve the local <code>&lt;video&gt;</code> DOM element.\n * @return {Element} The dom element\n */\nMatrixCall.prototype.getLocalVideoElement = function() {\n    return this.localVideoElement;\n};\n\n/**\n * Retrieve the remote <code>&lt;video&gt;</code> DOM element\n * used for playing back video capable streams.\n * @return {Element} The dom element\n */\nMatrixCall.prototype.getRemoteVideoElement = function() {\n    return this.remoteVideoElement;\n};\n\n/**\n * Retrieve the remote <code>&lt;audio&gt;</code> DOM element\n * used for playing back audio only streams.\n * @return {Element} The dom element\n */\nMatrixCall.prototype.getRemoteAudioElement = function() {\n    return this.remoteAudioElement;\n};\n\n/**\n * Set the local <code>&lt;video&gt;</code> DOM element. If this call is active,\n * video will be rendered to it immediately.\n * @param {Element} element The <code>&lt;video&gt;</code> DOM element.\n */\nMatrixCall.prototype.setLocalVideoElement = function(element) {\n    this.localVideoElement = element;\n\n    if (element && this.localAVStream && this.type === 'video') {\n        element.autoplay = true;\n        this.assignElement(element, this.localAVStream, \"localVideo\");\n        element.muted = true;\n        const self = this;\n        setTimeout(function() {\n            const vel = self.getLocalVideoElement();\n            if (vel.play) {\n                self.playElement(vel, \"localVideo\");\n            }\n        }, 0);\n    }\n};\n\n/**\n * Set the remote <code>&lt;video&gt;</code> DOM element. If this call is active,\n * the first received video-capable stream will be rendered to it immediately.\n * @param {Element} element The <code>&lt;video&gt;</code> DOM element.\n */\nMatrixCall.prototype.setRemoteVideoElement = function(element) {\n    this.remoteVideoElement = element;\n    _tryPlayRemoteStream(this);\n};\n\n/**\n * Set the remote <code>&lt;audio&gt;</code> DOM element. If this call is active,\n * the first received audio-only stream will be rendered to it immediately.\n * The audio will *not* be rendered from the remoteVideoElement.\n * @param {Element} element The <code>&lt;video&gt;</code> DOM element.\n */\nMatrixCall.prototype.setRemoteAudioElement = function(element) {\n    this.remoteVideoElement.muted = true;\n    this.remoteAudioElement = element;\n    this.remoteAudioElement.muted = false;\n    _tryPlayRemoteAudioStream(this);\n};\n\n/**\n * Configure this call from an invite event. Used by MatrixClient.\n * @protected\n * @param {MatrixEvent} event The m.call.invite event\n */\nMatrixCall.prototype._initWithInvite = function(event) {\n    this.msg = event.getContent();\n    this.peerConn = _createPeerConnection(this);\n    const self = this;\n    if (this.peerConn) {\n        this.peerConn.setRemoteDescription(\n            new this.webRtc.RtcSessionDescription(this.msg.offer),\n            hookCallback(self, self._onSetRemoteDescriptionSuccess),\n            hookCallback(self, self._onSetRemoteDescriptionError),\n        );\n    }\n    setState(this, 'ringing');\n    this.direction = 'inbound';\n\n    // firefox and OpenWebRTC's RTCPeerConnection doesn't add streams until it\n    // starts getting media on them so we need to figure out whether a video\n    // channel has been offered by ourselves.\n    if (\n        this.msg.offer &&\n        this.msg.offer.sdp &&\n        this.msg.offer.sdp.indexOf('m=video') > -1\n    ) {\n        this.type = 'video';\n    } else {\n        this.type = 'voice';\n    }\n\n    if (event.getAge()) {\n        setTimeout(function() {\n            if (self.state == 'ringing') {\n                debuglog(\"Call invite has expired. Hanging up.\");\n                self.hangupParty = 'remote'; // effectively\n                setState(self, 'ended');\n                stopAllMedia(self);\n                if (self.peerConn.signalingState != 'closed') {\n                    self.peerConn.close();\n                }\n                self.emit(\"hangup\", self);\n            }\n        }, this.msg.lifetime - event.getAge());\n    }\n};\n\n/**\n * Configure this call from a hangup event. Used by MatrixClient.\n * @protected\n * @param {MatrixEvent} event The m.call.hangup event\n */\nMatrixCall.prototype._initWithHangup = function(event) {\n    // perverse as it may seem, sometimes we want to instantiate a call with a\n    // hangup message (because when getting the state of the room on load, events\n    // come in reverse order and we want to remember that a call has been hung up)\n    this.msg = event.getContent();\n    setState(this, 'ended');\n};\n\n/**\n * Answer a call.\n */\nMatrixCall.prototype.answer = function() {\n    debuglog(\"Answering call %s of type %s\", this.callId, this.type);\n    const self = this;\n\n    if (!this.localAVStream && !this.waitForLocalAVStream) {\n        this.webRtc.getUserMedia(\n            _getUserMediaVideoContraints(this.type),\n            hookCallback(self, self._maybeGotUserMediaForAnswer),\n            hookCallback(self, self._maybeGotUserMediaForAnswer),\n        );\n        setState(this, 'wait_local_media');\n    } else if (this.localAVStream) {\n        this._maybeGotUserMediaForAnswer(this.localAVStream);\n    } else if (this.waitForLocalAVStream) {\n        setState(this, 'wait_local_media');\n    }\n};\n\n/**\n * Replace this call with a new call, e.g. for glare resolution. Used by\n * MatrixClient.\n * @protected\n * @param {MatrixCall} newCall The new call.\n */\nMatrixCall.prototype._replacedBy = function(newCall) {\n    debuglog(this.callId + \" being replaced by \" + newCall.callId);\n    if (this.state == 'wait_local_media') {\n        debuglog(\"Telling new call to wait for local media\");\n        newCall.waitForLocalAVStream = true;\n    } else if (this.state == 'create_offer') {\n        debuglog(\"Handing local stream to new call\");\n        newCall._maybeGotUserMediaForAnswer(this.localAVStream);\n        delete(this.localAVStream);\n    } else if (this.state == 'invite_sent') {\n        debuglog(\"Handing local stream to new call\");\n        newCall._maybeGotUserMediaForAnswer(this.localAVStream);\n        delete(this.localAVStream);\n    }\n    newCall.localVideoElement = this.localVideoElement;\n    newCall.remoteVideoElement = this.remoteVideoElement;\n    newCall.remoteAudioElement = this.remoteAudioElement;\n    this.successor = newCall;\n    this.emit(\"replaced\", newCall);\n    this.hangup(true);\n};\n\n/**\n * Hangup a call.\n * @param {string} reason The reason why the call is being hung up.\n * @param {boolean} suppressEvent True to suppress emitting an event.\n */\nMatrixCall.prototype.hangup = function(reason, suppressEvent) {\n    debuglog(\"Ending call \" + this.callId);\n    terminate(this, \"local\", reason, !suppressEvent);\n    const content = {\n        version: 0,\n        call_id: this.callId,\n        reason: reason,\n    };\n    sendEvent(this, 'm.call.hangup', content);\n};\n\n/**\n * Set whether the local video preview should be muted or not.\n * @param {boolean} muted True to mute the local video.\n */\nMatrixCall.prototype.setLocalVideoMuted = function(muted) {\n    if (!this.localAVStream) {\n        return;\n    }\n    setTracksEnabled(this.localAVStream.getVideoTracks(), !muted);\n};\n\n/**\n * Check if local video is muted.\n *\n * If there are multiple video tracks, <i>all</i> of the tracks need to be muted\n * for this to return true. This means if there are no video tracks, this will\n * return true.\n * @return {Boolean} True if the local preview video is muted, else false\n * (including if the call is not set up yet).\n */\nMatrixCall.prototype.isLocalVideoMuted = function() {\n    if (!this.localAVStream) {\n        return false;\n    }\n    return !isTracksEnabled(this.localAVStream.getVideoTracks());\n};\n\n/**\n * Set whether the microphone should be muted or not.\n * @param {boolean} muted True to mute the mic.\n */\nMatrixCall.prototype.setMicrophoneMuted = function(muted) {\n    if (!this.localAVStream) {\n        return;\n    }\n    setTracksEnabled(this.localAVStream.getAudioTracks(), !muted);\n};\n\n/**\n * Check if the microphone is muted.\n *\n * If there are multiple audio tracks, <i>all</i> of the tracks need to be muted\n * for this to return true. This means if there are no audio tracks, this will\n * return true.\n * @return {Boolean} True if the mic is muted, else false (including if the call\n * is not set up yet).\n */\nMatrixCall.prototype.isMicrophoneMuted = function() {\n    if (!this.localAVStream) {\n        return false;\n    }\n    return !isTracksEnabled(this.localAVStream.getAudioTracks());\n};\n\n/**\n * Internal\n * @private\n * @param {Object} stream\n */\nMatrixCall.prototype._maybeGotUserMediaForInvite = function(stream) {\n    if (this.successor) {\n        this.successor._maybeGotUserMediaForAnswer(stream);\n        return;\n    }\n    if (this.state == 'ended') {\n        return;\n    }\n    debuglog(\"_maybeGotUserMediaForInvite -> \" + this.type);\n    const self = this;\n\n    const error = stream;\n    const constraints = {\n        'mandatory': {\n            'OfferToReceiveAudio': true,\n            'OfferToReceiveVideo': self.type === 'video',\n        },\n    };\n    if (stream instanceof MediaStream) {\n        const videoEl = this.getLocalVideoElement();\n\n        if (videoEl && this.type == 'video') {\n            videoEl.autoplay = true;\n            if (this.screenSharingStream) {\n                debuglog(\"Setting screen sharing stream to the local video\" +\n                    \" element\");\n                this.assignElement(videoEl, this.screenSharingStream, \"localVideo\");\n            } else {\n                this.assignElement(videoEl, stream, \"localVideo\");\n            }\n            videoEl.muted = true;\n            setTimeout(function() {\n                const vel = self.getLocalVideoElement();\n                if (vel.play) {\n                    self.playElement(vel, \"localVideo\");\n                }\n            }, 0);\n        }\n\n        if (this.screenSharingStream) {\n            this.screenSharingStream.addTrack(stream.getAudioTracks()[0]);\n            stream = this.screenSharingStream;\n        }\n\n        this.localAVStream = stream;\n        // why do we enable audio (and only audio) tracks here? -- matthew\n        setTracksEnabled(stream.getAudioTracks(), true);\n        this.peerConn = _createPeerConnection(this);\n        this.peerConn.addStream(stream);\n    } else if (error.name === 'PermissionDeniedError') {\n        debuglog('User denied access to camera/microphone.' +\n            ' Or possibly you are using an insecure domain. Receiving only.');\n        this.peerConn = _createPeerConnection(this);\n    } else {\n        debuglog('Failed to getUserMedia.');\n        this._getUserMediaFailed(error);\n        return;\n    }\n\n    this.peerConn.createOffer(\n        hookCallback(self, self._gotLocalOffer),\n        hookCallback(self, self._getLocalOfferFailed),\n        constraints,\n    );\n    setState(self, 'create_offer');\n};\n\n/**\n * Internal\n * @private\n * @param {Object} stream\n */\nMatrixCall.prototype._maybeGotUserMediaForAnswer = function(stream) {\n    const self = this;\n    if (self.state == 'ended') {\n        return;\n    }\n\n    const error = stream;\n    if (stream instanceof MediaStream) {\n        const localVidEl = self.getLocalVideoElement();\n\n        if (localVidEl && self.type == 'video') {\n            localVidEl.autoplay = true;\n            this.assignElement(localVidEl, stream, \"localVideo\");\n            localVidEl.muted = true;\n            setTimeout(function() {\n                const vel = self.getLocalVideoElement();\n                if (vel.play) {\n                    self.playElement(vel, \"localVideo\");\n                }\n            }, 0);\n        }\n\n        self.localAVStream = stream;\n        setTracksEnabled(stream.getAudioTracks(), true);\n        self.peerConn.addStream(stream);\n    } else if (error.name === 'PermissionDeniedError') {\n        debuglog('User denied access to camera/microphone.' +\n            ' Or possibly you are using an insecure domain. Receiving only.');\n    } else {\n        debuglog('Failed to getUserMedia.');\n        this._getUserMediaFailed(error);\n        return;\n    }\n\n    const constraints = {\n        'mandatory': {\n            'OfferToReceiveAudio': true,\n            'OfferToReceiveVideo': self.type === 'video',\n        },\n    };\n    self.peerConn.createAnswer(function(description) {\n        debuglog(\"Created answer: \" + description);\n        self.peerConn.setLocalDescription(description, function() {\n            const content = {\n                version: 0,\n                call_id: self.callId,\n                answer: {\n                    sdp: self.peerConn.localDescription.sdp,\n                    type: self.peerConn.localDescription.type,\n                },\n            };\n            sendEvent(self, 'm.call.answer', content);\n            setState(self, 'connecting');\n        }, function() {\n            debuglog(\"Error setting local description!\");\n        }, constraints);\n    }, function(err) {\n        debuglog(\"Failed to create answer: \" + err);\n    });\n    setState(self, 'create_answer');\n};\n\n/**\n * Internal\n * @private\n * @param {Object} event\n */\nMatrixCall.prototype._gotLocalIceCandidate = function(event) {\n    if (event.candidate) {\n        debuglog(\n            \"Got local ICE \" + event.candidate.sdpMid + \" candidate: \" +\n            event.candidate.candidate,\n        );\n        // As with the offer, note we need to make a copy of this object, not\n        // pass the original: that broke in Chrome ~m43.\n        const c = {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n        };\n        sendCandidate(this, c);\n    }\n};\n\n/**\n * Used by MatrixClient.\n * @protected\n * @param {Object} cand\n */\nMatrixCall.prototype._gotRemoteIceCandidate = function(cand) {\n    if (this.state == 'ended') {\n        //debuglog(\"Ignoring remote ICE candidate because call has ended\");\n        return;\n    }\n    debuglog(\"Got remote ICE \" + cand.sdpMid + \" candidate: \" + cand.candidate);\n    this.peerConn.addIceCandidate(\n        new this.webRtc.RtcIceCandidate(cand),\n        function() {},\n        function(e) {},\n    );\n};\n\n/**\n * Used by MatrixClient.\n * @protected\n * @param {Object} msg\n */\nMatrixCall.prototype._receivedAnswer = function(msg) {\n    if (this.state == 'ended') {\n        return;\n    }\n\n    const self = this;\n    this.peerConn.setRemoteDescription(\n        new this.webRtc.RtcSessionDescription(msg.answer),\n        hookCallback(self, self._onSetRemoteDescriptionSuccess),\n        hookCallback(self, self._onSetRemoteDescriptionError),\n    );\n    setState(self, 'connecting');\n};\n\n/**\n * Internal\n * @private\n * @param {Object} description\n */\nMatrixCall.prototype._gotLocalOffer = function(description) {\n    const self = this;\n    debuglog(\"Created offer: \" + description);\n\n    if (self.state == 'ended') {\n        debuglog(\"Ignoring newly created offer on call ID \" + self.callId +\n            \" because the call has ended\");\n        return;\n    }\n\n    self.peerConn.setLocalDescription(description, function() {\n        const content = {\n            version: 0,\n            call_id: self.callId,\n            // OpenWebRTC appears to add extra stuff (like the DTLS fingerprint)\n            // to the description when setting it on the peerconnection.\n            // According to the spec it should only add ICE\n            // candidates. Any ICE candidates that have already been generated\n            // at this point will probably be sent both in the offer and separately.\n            // Also, note that we have to make a new object here, copying the\n            // type and sdp properties.\n            // Passing the RTCSessionDescription object as-is doesn't work in\n            // Chrome (as of about m43).\n            offer: {\n                sdp: self.peerConn.localDescription.sdp,\n                type: self.peerConn.localDescription.type,\n            },\n            lifetime: MatrixCall.CALL_TIMEOUT_MS,\n        };\n        sendEvent(self, 'm.call.invite', content);\n\n        setTimeout(function() {\n            if (self.state == 'invite_sent') {\n                self.hangup('invite_timeout');\n            }\n        }, MatrixCall.CALL_TIMEOUT_MS);\n        setState(self, 'invite_sent');\n    }, function() {\n        debuglog(\"Error setting local description!\");\n    });\n};\n\n/**\n * Internal\n * @private\n * @param {Object} error\n */\nMatrixCall.prototype._getLocalOfferFailed = function(error) {\n    this.emit(\n        \"error\",\n        callError(MatrixCall.ERR_LOCAL_OFFER_FAILED, \"Failed to start audio for call!\"),\n    );\n};\n\n/**\n * Internal\n * @private\n * @param {Object} error\n */\nMatrixCall.prototype._getUserMediaFailed = function(error) {\n    this.emit(\n        \"error\",\n        callError(\n            MatrixCall.ERR_NO_USER_MEDIA,\n            \"Couldn't start capturing media! Is your microphone set up and \" +\n            \"does this app have permission?\",\n        ),\n    );\n    this.hangup(\"user_media_failed\");\n};\n\n/**\n * Internal\n * @private\n */\nMatrixCall.prototype._onIceConnectionStateChanged = function() {\n    if (this.state == 'ended') {\n        return; // because ICE can still complete as we're ending the call\n    }\n    debuglog(\n        \"Ice connection state changed to: \" + this.peerConn.iceConnectionState,\n    );\n    // ideally we'd consider the call to be connected when we get media but\n    // chrome doesn't implement any of the 'onstarted' events yet\n    if (this.peerConn.iceConnectionState == 'completed' ||\n            this.peerConn.iceConnectionState == 'connected') {\n        setState(this, 'connected');\n        this.didConnect = true;\n    } else if (this.peerConn.iceConnectionState == 'failed') {\n        this.hangup('ice_failed');\n    }\n};\n\n/**\n * Internal\n * @private\n */\nMatrixCall.prototype._onSignallingStateChanged = function() {\n    debuglog(\n        \"call \" + this.callId + \": Signalling state changed to: \" +\n        this.peerConn.signalingState,\n    );\n};\n\n/**\n * Internal\n * @private\n */\nMatrixCall.prototype._onSetRemoteDescriptionSuccess = function() {\n    debuglog(\"Set remote description\");\n};\n\n/**\n * Internal\n * @private\n * @param {Object} e\n */\nMatrixCall.prototype._onSetRemoteDescriptionError = function(e) {\n    debuglog(\"Failed to set remote description\" + e);\n};\n\n/**\n * Internal\n * @private\n * @param {Object} event\n */\nMatrixCall.prototype._onAddStream = function(event) {\n    debuglog(\"Stream id \" + event.stream.id + \" added\");\n\n    const s = event.stream;\n\n    if (s.getVideoTracks().length > 0) {\n        this.type = 'video';\n        this.remoteAVStream = s;\n        this.remoteAStream = s;\n    } else {\n        this.type = 'voice';\n        this.remoteAStream = s;\n    }\n\n    const self = this;\n    forAllTracksOnStream(s, function(t) {\n        debuglog(\"Track id \" + t.id + \" added\");\n        // not currently implemented in chrome\n        t.onstarted = hookCallback(self, self._onRemoteStreamTrackStarted);\n    });\n\n    if (event.stream.oninactive !== undefined) {\n        event.stream.oninactive = hookCallback(self, self._onRemoteStreamEnded);\n    } else {\n        // onended is deprecated from Chrome 54\n        event.stream.onended = hookCallback(self, self._onRemoteStreamEnded);\n    }\n\n    // not currently implemented in chrome\n    event.stream.onstarted = hookCallback(self, self._onRemoteStreamStarted);\n\n    if (this.type === 'video') {\n        _tryPlayRemoteStream(this);\n        _tryPlayRemoteAudioStream(this);\n    } else {\n        _tryPlayRemoteAudioStream(this);\n    }\n};\n\n/**\n * Internal\n * @private\n * @param {Object} event\n */\nMatrixCall.prototype._onRemoteStreamStarted = function(event) {\n    setState(this, 'connected');\n};\n\n/**\n * Internal\n * @private\n * @param {Object} event\n */\nMatrixCall.prototype._onRemoteStreamEnded = function(event) {\n    debuglog(\"Remote stream ended\");\n    this.hangupParty = 'remote';\n    setState(this, 'ended');\n    stopAllMedia(this);\n    if (this.peerConn.signalingState != 'closed') {\n        this.peerConn.close();\n    }\n    this.emit(\"hangup\", this);\n};\n\n/**\n * Internal\n * @private\n * @param {Object} event\n */\nMatrixCall.prototype._onRemoteStreamTrackStarted = function(event) {\n    setState(this, 'connected');\n};\n\n/**\n * Used by MatrixClient.\n * @protected\n * @param {Object} msg\n */\nMatrixCall.prototype._onHangupReceived = function(msg) {\n    debuglog(\"Hangup received\");\n    terminate(this, \"remote\", msg.reason, true);\n};\n\n/**\n * Used by MatrixClient.\n * @protected\n * @param {Object} msg\n */\nMatrixCall.prototype._onAnsweredElsewhere = function(msg) {\n    debuglog(\"Answered elsewhere\");\n    terminate(this, \"remote\", \"answered_elsewhere\", true);\n};\n\nconst setTracksEnabled = function(tracks, enabled) {\n    for (let i = 0; i < tracks.length; i++) {\n        tracks[i].enabled = enabled;\n    }\n};\n\nconst isTracksEnabled = function(tracks) {\n    for (let i = 0; i < tracks.length; i++) {\n        if (tracks[i].enabled) {\n            return true; // at least one track is enabled\n        }\n    }\n    return false;\n};\n\nconst setState = function(self, state) {\n    const oldState = self.state;\n    self.state = state;\n    self.emit(\"state\", state, oldState);\n};\n\n/**\n * Internal\n * @param {MatrixCall} self\n * @param {string} eventType\n * @param {Object} content\n * @return {Promise}\n */\nconst sendEvent = function(self, eventType, content) {\n    return self.client.sendEvent(self.roomId, eventType, content).catch(\n        (err) => {\n            self.emit('send_event_error', err);\n        },\n    );\n};\n\nconst sendCandidate = function(self, content) {\n    // Sends candidates with are sent in a special way because we try to amalgamate\n    // them into one message\n    self.candidateSendQueue.push(content);\n    if (self.candidateSendTries === 0) {\n        setTimeout(function() {\n            _sendCandidateQueue(self);\n        }, 100);\n    }\n};\n\nconst terminate = function(self, hangupParty, hangupReason, shouldEmit) {\n    if (self.getRemoteVideoElement()) {\n        if (self.getRemoteVideoElement().pause) {\n            self.pauseElement(self.getRemoteVideoElement(), \"remoteVideo\");\n        }\n        self.assignElement(self.getRemoteVideoElement(), null, \"remoteVideo\");\n    }\n    if (self.getRemoteAudioElement()) {\n        if (self.getRemoteAudioElement().pause) {\n            self.pauseElement(self.getRemoteAudioElement(), \"remoteAudio\");\n        }\n        self.assignElement(self.getRemoteAudioElement(), null, \"remoteAudio\");\n    }\n    if (self.getLocalVideoElement()) {\n        if (self.getLocalVideoElement().pause) {\n            self.pauseElement(self.getLocalVideoElement(), \"localVideo\");\n        }\n        self.assignElement(self.getLocalVideoElement(), null, \"localVideo\");\n    }\n    self.hangupParty = hangupParty;\n    self.hangupReason = hangupReason;\n    setState(self, 'ended');\n    stopAllMedia(self);\n    if (self.peerConn && self.peerConn.signalingState !== 'closed') {\n        self.peerConn.close();\n    }\n    if (shouldEmit) {\n        self.emit(\"hangup\", self);\n    }\n};\n\nconst stopAllMedia = function(self) {\n    debuglog(\"stopAllMedia (stream=%s)\", self.localAVStream);\n    if (self.localAVStream) {\n        forAllTracksOnStream(self.localAVStream, function(t) {\n            if (t.stop) {\n                t.stop();\n            }\n        });\n        // also call stop on the main stream so firefox will stop sharing\n        // the mic\n        if (self.localAVStream.stop) {\n            self.localAVStream.stop();\n        }\n    }\n    if (self.screenSharingStream) {\n        forAllTracksOnStream(self.screenSharingStream, function(t) {\n            if (t.stop) {\n                t.stop();\n            }\n        });\n        if (self.screenSharingStream.stop) {\n            self.screenSharingStream.stop();\n        }\n    }\n    if (self.remoteAVStream) {\n        forAllTracksOnStream(self.remoteAVStream, function(t) {\n            if (t.stop) {\n                t.stop();\n            }\n        });\n    }\n    if (self.remoteAStream) {\n        forAllTracksOnStream(self.remoteAStream, function(t) {\n            if (t.stop) {\n                t.stop();\n            }\n        });\n    }\n};\n\nconst _tryPlayRemoteStream = function(self) {\n    if (self.getRemoteVideoElement() && self.remoteAVStream) {\n        const player = self.getRemoteVideoElement();\n        player.autoplay = true;\n        self.assignElement(player, self.remoteAVStream, \"remoteVideo\");\n        setTimeout(function() {\n            const vel = self.getRemoteVideoElement();\n            if (vel.play) {\n                self.playElement(vel, \"remoteVideo\");\n            }\n            // OpenWebRTC does not support oniceconnectionstatechange yet\n            if (self.webRtc.isOpenWebRTC()) {\n                setState(self, 'connected');\n            }\n        }, 0);\n    }\n};\n\nconst _tryPlayRemoteAudioStream = function(self) {\n    if (self.getRemoteAudioElement() && self.remoteAStream) {\n        const player = self.getRemoteAudioElement();\n        player.autoplay = true;\n        self.assignElement(player, self.remoteAStream, \"remoteAudio\");\n        setTimeout(function() {\n            const ael = self.getRemoteAudioElement();\n            if (ael.play) {\n                self.playElement(ael, \"remoteAudio\");\n            }\n            // OpenWebRTC does not support oniceconnectionstatechange yet\n            if (self.webRtc.isOpenWebRTC()) {\n                setState(self, 'connected');\n            }\n        }, 0);\n    }\n};\n\nconst checkForErrorListener = function(self) {\n    if (self.listeners(\"error\").length === 0) {\n        throw new Error(\n            \"You MUST attach an error listener using call.on('error', function() {})\",\n        );\n    }\n};\n\nconst callError = function(code, msg) {\n    const e = new Error(msg);\n    e.code = code;\n    return e;\n};\n\nconst debuglog = function() {\n    if (DEBUG) {\n        console.log(...arguments);\n    }\n};\n\nconst _sendCandidateQueue = function(self) {\n    if (self.candidateSendQueue.length === 0) {\n        return;\n    }\n\n    const cands = self.candidateSendQueue;\n    self.candidateSendQueue = [];\n    ++self.candidateSendTries;\n    const content = {\n        version: 0,\n        call_id: self.callId,\n        candidates: cands,\n    };\n    debuglog(\"Attempting to send \" + cands.length + \" candidates\");\n    sendEvent(self, 'm.call.candidates', content).then(function() {\n        self.candidateSendTries = 0;\n        _sendCandidateQueue(self);\n    }, function(error) {\n        for (let i = 0; i < cands.length; i++) {\n            self.candidateSendQueue.push(cands[i]);\n        }\n\n        if (self.candidateSendTries > 5) {\n            debuglog(\n                \"Failed to send candidates on attempt %s. Giving up for now.\",\n                self.candidateSendTries,\n            );\n            self.candidateSendTries = 0;\n            return;\n        }\n\n        const delayMs = 500 * Math.pow(2, self.candidateSendTries);\n        ++self.candidateSendTries;\n        debuglog(\"Failed to send candidates. Retrying in \" + delayMs + \"ms\");\n        setTimeout(function() {\n            _sendCandidateQueue(self);\n        }, delayMs);\n    });\n};\n\nconst _placeCallWithConstraints = function(self, constraints) {\n    self.client.callList[self.callId] = self;\n    self.webRtc.getUserMedia(\n        constraints,\n        hookCallback(self, self._maybeGotUserMediaForInvite),\n        hookCallback(self, self._maybeGotUserMediaForInvite),\n    );\n    setState(self, 'wait_local_media');\n    self.direction = 'outbound';\n    self.config = constraints;\n};\n\nconst _createPeerConnection = function(self) {\n    let servers = self.turnServers;\n    if (self.webRtc.vendor === \"mozilla\") {\n        // modify turnServers struct to match what mozilla expects.\n        servers = [];\n        for (let i = 0; i < self.turnServers.length; i++) {\n            for (let j = 0; j < self.turnServers[i].urls.length; j++) {\n                servers.push({\n                    url: self.turnServers[i].urls[j],\n                    username: self.turnServers[i].username,\n                    credential: self.turnServers[i].credential,\n                });\n            }\n        }\n    }\n\n    const pc = new self.webRtc.RtcPeerConnection({\n        iceTransportPolicy: self.forceTURN ? 'relay' : undefined,\n        iceServers: servers,\n    });\n    pc.oniceconnectionstatechange = hookCallback(self, self._onIceConnectionStateChanged);\n    pc.onsignalingstatechange = hookCallback(self, self._onSignallingStateChanged);\n    pc.onicecandidate = hookCallback(self, self._gotLocalIceCandidate);\n    pc.onaddstream = hookCallback(self, self._onAddStream);\n    return pc;\n};\n\nconst _getScreenSharingConstraints = function(call) {\n    const screen = global.screen;\n    if (!screen) {\n        call.emit(\"error\", callError(\n            MatrixCall.ERR_NO_USER_MEDIA,\n            \"Couldn't determine screen sharing constaints.\",\n        ));\n        return;\n    }\n\n    return {\n        video: {\n            mediaSource: 'screen',\n            mandatory: {\n                chromeMediaSource: \"screen\",\n                chromeMediaSourceId: \"\" + Date.now(),\n                maxWidth: screen.width,\n                maxHeight: screen.height,\n                minFrameRate: 1,\n                maxFrameRate: 10,\n            },\n        },\n    };\n};\n\nconst _getUserMediaVideoContraints = function(callType) {\n    const isWebkit = !!global.window.navigator.webkitGetUserMedia;\n\n    switch (callType) {\n        case 'voice':\n            return {\n                audio: {\n                    deviceId: audioInput ? {exact: audioInput} : undefined,\n                }, video: false,\n            };\n        case 'video':\n            return {\n                audio: {\n                    deviceId: audioInput ? {exact: audioInput} : undefined,\n                }, video: {\n                    deviceId: videoInput ? {exact: videoInput} : undefined,\n                    /* We want 640x360.  Chrome will give it only if we ask exactly,\n                       FF refuses entirely if we ask exactly, so have to ask for ideal\n                       instead */\n                    width: isWebkit ? { exact: 640 } : { ideal: 640 },\n                    height: isWebkit ? { exact: 360 } : { ideal: 360 },\n                },\n            };\n    }\n};\n\nconst hookCallback = function(call, fn) {\n    return function() {\n        return fn.apply(call, arguments);\n    };\n};\n\nconst forAllVideoTracksOnStream = function(s, f) {\n    const tracks = s.getVideoTracks();\n    for (let i = 0; i < tracks.length; i++) {\n        f(tracks[i]);\n    }\n};\n\nconst forAllAudioTracksOnStream = function(s, f) {\n    const tracks = s.getAudioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n        f(tracks[i]);\n    }\n};\n\nconst forAllTracksOnStream = function(s, f) {\n    forAllVideoTracksOnStream(s, f);\n    forAllAudioTracksOnStream(s, f);\n};\n\n/** The MatrixCall class. */\nmodule.exports.MatrixCall = MatrixCall;\n\nlet audioInput;\nlet videoInput;\n/**\n * Set an audio input device to use for MatrixCalls\n * @function\n * @param {string=} deviceId the identifier for the device\n * undefined treated as unset\n */\nmodule.exports.setAudioInput = function(deviceId) { audioInput = deviceId; };\n/**\n * Set a video input device to use for MatrixCalls\n * @function\n * @param {string=} deviceId the identifier for the device\n * undefined treated as unset\n */\nmodule.exports.setVideoInput = function(deviceId) { videoInput = deviceId; };\n\n/**\n * Create a new Matrix call for the browser.\n * @param {MatrixClient} client The client instance to use.\n * @param {string} roomId The room the call is in.\n * @param {Object?} options optional options map.\n * @param {boolean} options.forceTURN whether relay through TURN should be forced.\n * @return {MatrixCall} the call or null if the browser doesn't support calling.\n */\nmodule.exports.createNewMatrixCall = function(client, roomId, options) {\n    const w = global.window;\n    const doc = global.document;\n    if (!w || !doc) {\n        return null;\n    }\n    const webRtc = {};\n    webRtc.isOpenWebRTC = function() {\n        const scripts = doc.getElementById(\"script\");\n        if (!scripts || !scripts.length) {\n            return false;\n        }\n        for (let i = 0; i < scripts.length; i++) {\n            if (scripts[i].src.indexOf(\"owr.js\") > -1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    const getUserMedia = (\n        w.navigator.getUserMedia || w.navigator.webkitGetUserMedia ||\n        w.navigator.mozGetUserMedia\n    );\n    if (getUserMedia) {\n        webRtc.getUserMedia = function() {\n            return getUserMedia.apply(w.navigator, arguments);\n        };\n    }\n    webRtc.RtcPeerConnection = (\n        w.RTCPeerConnection || w.webkitRTCPeerConnection || w.mozRTCPeerConnection\n    );\n    webRtc.RtcSessionDescription = (\n        w.RTCSessionDescription || w.webkitRTCSessionDescription ||\n        w.mozRTCSessionDescription\n    );\n    webRtc.RtcIceCandidate = (\n        w.RTCIceCandidate || w.webkitRTCIceCandidate || w.mozRTCIceCandidate\n    );\n    webRtc.vendor = null;\n    if (w.mozRTCPeerConnection) {\n        webRtc.vendor = \"mozilla\";\n    } else if (w.webkitRTCPeerConnection) {\n        webRtc.vendor = \"webkit\";\n    } else if (w.RTCPeerConnection) {\n        webRtc.vendor = \"generic\";\n    }\n    if (!webRtc.RtcIceCandidate || !webRtc.RtcSessionDescription ||\n            !webRtc.RtcPeerConnection || !webRtc.getUserMedia) {\n        return null; // WebRTC is not supported.\n    }\n    const opts = {\n        webRtc: webRtc,\n        client: client,\n        URL: w.URL,\n        roomId: roomId,\n        turnServers: client.getTurnServers(),\n        // call level options\n        forceTURN: options ? options.forceTURN : false,\n    };\n    return new MatrixCall(opts);\n};\n","/* Copyright 2015 Mark Haines\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nvar escaped = /[\\\\\\\"\\x00-\\x1F]/g;\nvar escapes = {};\nfor (var i = 0; i < 0x20; ++i) {\n    escapes[String.fromCharCode(i)] = (\n        '\\\\U' + ('0000' + i.toString(16)).slice(-4).toUpperCase()\n    );\n}\nescapes['\\b'] = '\\\\b';\nescapes['\\t'] = '\\\\t';\nescapes['\\n'] = '\\\\n';\nescapes['\\f'] = '\\\\f';\nescapes['\\r'] = '\\\\r';\nescapes['\\\"'] = '\\\\\\\"';\nescapes['\\\\'] = '\\\\\\\\';\n\nfunction escapeString(value) {\n    escaped.lastIndex = 0;\n    return value.replace(escaped, function(c) { return escapes[c]; });\n}\n\nfunction stringify(value) {\n    switch (typeof value) {\n        case 'string':\n            return '\"' + escapeString(value) + '\"';\n        case 'number':\n            return isFinite(value) ? value : 'null';\n        case 'boolean':\n            return value;\n        case 'object':\n            if (value === null) {\n                return 'null';\n            }\n            if (Array.isArray(value)) {\n                return stringifyArray(value);\n            }\n            return stringifyObject(value);\n        default:\n            throw new Error('Cannot stringify: ' + typeof value);\n    }\n}\n\nfunction stringifyArray(array) {\n    var sep = '[';\n    var result = '';\n    for (var i = 0; i < array.length; ++i) {\n        result += sep;\n        sep = ',';\n        result += stringify(array[i]);\n    }\n    if (sep != ',') {\n        return '[]';\n    } else {\n        return result + ']';\n    }\n}\n\nfunction stringifyObject(object) {\n    var sep = '{';\n    var result = '';\n    var keys = Object.keys(object);\n    keys.sort();\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        result += sep + '\"' + escapeString(key) + '\":';\n        sep = ',';\n        result += stringify(object[key]);\n    }\n    if (sep != ',') {\n        return '{}';\n    } else {\n        return result + '}';\n    }\n}\n\n/** */\nmodule.exports = {stringify: stringify};\n","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/is-iterable\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/set-prototype-of\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};","\"use strict\";\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = require(\"../core-js/object/create\");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};","\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};","\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();","\"use strict\";\n\nexports.__esModule = true;\n\nvar _iterator = require(\"../core-js/symbol/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = require(\"../core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};","module.exports = require(\"regenerator-runtime\");\n","/* @preserve\n * The MIT License (MIT)\n * \n * Copyright (c) 2013-2017 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n/**\n * bluebird build version 3.5.0\n * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each\n*/\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Promise=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_==\"function\"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_==\"function\"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar SomePromiseArray = Promise._SomePromiseArray;\nfunction any(promises) {\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(1);\n    ret.setUnwrap();\n    ret.init();\n    return promise;\n}\n\nPromise.any = function (promises) {\n    return any(promises);\n};\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n};\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\nvar firstLineError;\ntry {throw new Error(); } catch (e) {firstLineError = e;}\nvar schedule = _dereq_(\"./schedule\");\nvar Queue = _dereq_(\"./queue\");\nvar util = _dereq_(\"./util\");\n\nfunction Async() {\n    this._customScheduler = false;\n    this._isTickUsed = false;\n    this._lateQueue = new Queue(16);\n    this._normalQueue = new Queue(16);\n    this._haveDrainedQueues = false;\n    this._trampolineEnabled = true;\n    var self = this;\n    this.drainQueues = function () {\n        self._drainQueues();\n    };\n    this._schedule = schedule;\n}\n\nAsync.prototype.setScheduler = function(fn) {\n    var prev = this._schedule;\n    this._schedule = fn;\n    this._customScheduler = true;\n    return prev;\n};\n\nAsync.prototype.hasCustomScheduler = function() {\n    return this._customScheduler;\n};\n\nAsync.prototype.enableTrampoline = function() {\n    this._trampolineEnabled = true;\n};\n\nAsync.prototype.disableTrampolineIfNecessary = function() {\n    if (util.hasDevTools) {\n        this._trampolineEnabled = false;\n    }\n};\n\nAsync.prototype.haveItemsQueued = function () {\n    return this._isTickUsed || this._haveDrainedQueues;\n};\n\n\nAsync.prototype.fatalError = function(e, isNode) {\n    if (isNode) {\n        process.stderr.write(\"Fatal \" + (e instanceof Error ? e.stack : e) +\n            \"\\n\");\n        process.exit(2);\n    } else {\n        this.throwLater(e);\n    }\n};\n\nAsync.prototype.throwLater = function(fn, arg) {\n    if (arguments.length === 1) {\n        arg = fn;\n        fn = function () { throw arg; };\n    }\n    if (typeof setTimeout !== \"undefined\") {\n        setTimeout(function() {\n            fn(arg);\n        }, 0);\n    } else try {\n        this._schedule(function() {\n            fn(arg);\n        });\n    } catch (e) {\n        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n};\n\nfunction AsyncInvokeLater(fn, receiver, arg) {\n    this._lateQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncInvoke(fn, receiver, arg) {\n    this._normalQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncSettlePromises(promise) {\n    this._normalQueue._pushOne(promise);\n    this._queueTick();\n}\n\nif (!util.hasDevTools) {\n    Async.prototype.invokeLater = AsyncInvokeLater;\n    Async.prototype.invoke = AsyncInvoke;\n    Async.prototype.settlePromises = AsyncSettlePromises;\n} else {\n    Async.prototype.invokeLater = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvokeLater.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                setTimeout(function() {\n                    fn.call(receiver, arg);\n                }, 100);\n            });\n        }\n    };\n\n    Async.prototype.invoke = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvoke.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                fn.call(receiver, arg);\n            });\n        }\n    };\n\n    Async.prototype.settlePromises = function(promise) {\n        if (this._trampolineEnabled) {\n            AsyncSettlePromises.call(this, promise);\n        } else {\n            this._schedule(function() {\n                promise._settlePromises();\n            });\n        }\n    };\n}\n\nAsync.prototype._drainQueue = function(queue) {\n    while (queue.length() > 0) {\n        var fn = queue.shift();\n        if (typeof fn !== \"function\") {\n            fn._settlePromises();\n            continue;\n        }\n        var receiver = queue.shift();\n        var arg = queue.shift();\n        fn.call(receiver, arg);\n    }\n};\n\nAsync.prototype._drainQueues = function () {\n    this._drainQueue(this._normalQueue);\n    this._reset();\n    this._haveDrainedQueues = true;\n    this._drainQueue(this._lateQueue);\n};\n\nAsync.prototype._queueTick = function () {\n    if (!this._isTickUsed) {\n        this._isTickUsed = true;\n        this._schedule(this.drainQueues);\n    }\n};\n\nAsync.prototype._reset = function () {\n    this._isTickUsed = false;\n};\n\nmodule.exports = Async;\nmodule.exports.firstLineError = firstLineError;\n\n},{\"./queue\":26,\"./schedule\":29,\"./util\":36}],3:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise, debug) {\nvar calledBind = false;\nvar rejectThis = function(_, e) {\n    this._reject(e);\n};\n\nvar targetRejected = function(e, context) {\n    context.promiseRejectionQueued = true;\n    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);\n};\n\nvar bindingResolved = function(thisArg, context) {\n    if (((this._bitField & 50397184) === 0)) {\n        this._resolveCallback(context.target);\n    }\n};\n\nvar bindingRejected = function(e, context) {\n    if (!context.promiseRejectionQueued) this._reject(e);\n};\n\nPromise.prototype.bind = function (thisArg) {\n    if (!calledBind) {\n        calledBind = true;\n        Promise.prototype._propagateFrom = debug.propagateFromFunction();\n        Promise.prototype._boundValue = debug.boundValueFunction();\n    }\n    var maybePromise = tryConvertToPromise(thisArg);\n    var ret = new Promise(INTERNAL);\n    ret._propagateFrom(this, 1);\n    var target = this._target();\n    ret._setBoundTo(maybePromise);\n    if (maybePromise instanceof Promise) {\n        var context = {\n            promiseRejectionQueued: false,\n            promise: ret,\n            target: target,\n            bindingPromise: maybePromise\n        };\n        target._then(INTERNAL, targetRejected, undefined, ret, context);\n        maybePromise._then(\n            bindingResolved, bindingRejected, undefined, ret, context);\n        ret._setOnCancel(maybePromise);\n    } else {\n        ret._resolveCallback(target);\n    }\n    return ret;\n};\n\nPromise.prototype._setBoundTo = function (obj) {\n    if (obj !== undefined) {\n        this._bitField = this._bitField | 2097152;\n        this._boundTo = obj;\n    } else {\n        this._bitField = this._bitField & (~2097152);\n    }\n};\n\nPromise.prototype._isBound = function () {\n    return (this._bitField & 2097152) === 2097152;\n};\n\nPromise.bind = function (thisArg, value) {\n    return Promise.resolve(value).bind(thisArg);\n};\n};\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\nvar old;\nif (typeof Promise !== \"undefined\") old = Promise;\nfunction noConflict() {\n    try { if (Promise === bluebird) Promise = old; }\n    catch (e) {}\n    return bluebird;\n}\nvar bluebird = _dereq_(\"./promise\")();\nbluebird.noConflict = noConflict;\nmodule.exports = bluebird;\n\n},{\"./promise\":22}],5:[function(_dereq_,module,exports){\n\"use strict\";\nvar cr = Object.create;\nif (cr) {\n    var callerCache = cr(null);\n    var getterCache = cr(null);\n    callerCache[\" size\"] = getterCache[\" size\"] = 0;\n}\n\nmodule.exports = function(Promise) {\nvar util = _dereq_(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar isIdentifier = util.isIdentifier;\n\nvar getMethodCaller;\nvar getGetter;\nif (!true) {\nvar makeMethodCaller = function (methodName) {\n    return new Function(\"ensureMethod\", \"                                    \\n\\\n        return function(obj) {                                               \\n\\\n            'use strict'                                                     \\n\\\n            var len = this.length;                                           \\n\\\n            ensureMethod(obj, 'methodName');                                 \\n\\\n            switch(len) {                                                    \\n\\\n                case 1: return obj.methodName(this[0]);                      \\n\\\n                case 2: return obj.methodName(this[0], this[1]);             \\n\\\n                case 3: return obj.methodName(this[0], this[1], this[2]);    \\n\\\n                case 0: return obj.methodName();                             \\n\\\n                default:                                                     \\n\\\n                    return obj.methodName.apply(obj, this);                  \\n\\\n            }                                                                \\n\\\n        };                                                                   \\n\\\n        \".replace(/methodName/g, methodName))(ensureMethod);\n};\n\nvar makeGetter = function (propertyName) {\n    return new Function(\"obj\", \"                                             \\n\\\n        'use strict';                                                        \\n\\\n        return obj.propertyName;                                             \\n\\\n        \".replace(\"propertyName\", propertyName));\n};\n\nvar getCompiled = function(name, compiler, cache) {\n    var ret = cache[name];\n    if (typeof ret !== \"function\") {\n        if (!isIdentifier(name)) {\n            return null;\n        }\n        ret = compiler(name);\n        cache[name] = ret;\n        cache[\" size\"]++;\n        if (cache[\" size\"] > 512) {\n            var keys = Object.keys(cache);\n            for (var i = 0; i < 256; ++i) delete cache[keys[i]];\n            cache[\" size\"] = keys.length - 256;\n        }\n    }\n    return ret;\n};\n\ngetMethodCaller = function(name) {\n    return getCompiled(name, makeMethodCaller, callerCache);\n};\n\ngetGetter = function(name) {\n    return getCompiled(name, makeGetter, getterCache);\n};\n}\n\nfunction ensureMethod(obj, methodName) {\n    var fn;\n    if (obj != null) fn = obj[methodName];\n    if (typeof fn !== \"function\") {\n        var message = \"Object \" + util.classString(obj) + \" has no method '\" +\n            util.toString(methodName) + \"'\";\n        throw new Promise.TypeError(message);\n    }\n    return fn;\n}\n\nfunction caller(obj) {\n    var methodName = this.pop();\n    var fn = ensureMethod(obj, methodName);\n    return fn.apply(obj, this);\n}\nPromise.prototype.call = function (methodName) {\n    var args = [].slice.call(arguments, 1);;\n    if (!true) {\n        if (canEvaluate) {\n            var maybeCaller = getMethodCaller(methodName);\n            if (maybeCaller !== null) {\n                return this._then(\n                    maybeCaller, undefined, undefined, args, undefined);\n            }\n        }\n    }\n    args.push(methodName);\n    return this._then(caller, undefined, undefined, args, undefined);\n};\n\nfunction namedGetter(obj) {\n    return obj[this];\n}\nfunction indexedGetter(obj) {\n    var index = +this;\n    if (index < 0) index = Math.max(0, index + obj.length);\n    return obj[index];\n}\nPromise.prototype.get = function (propertyName) {\n    var isIndex = (typeof propertyName === \"number\");\n    var getter;\n    if (!isIndex) {\n        if (canEvaluate) {\n            var maybeGetter = getGetter(propertyName);\n            getter = maybeGetter !== null ? maybeGetter : namedGetter;\n        } else {\n            getter = namedGetter;\n        }\n    } else {\n        getter = indexedGetter;\n    }\n    return this._then(getter, undefined, undefined, propertyName, undefined);\n};\n};\n\n},{\"./util\":36}],6:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, PromiseArray, apiRejection, debug) {\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nPromise.prototype[\"break\"] = Promise.prototype.cancel = function() {\n    if (!debug.cancellation()) return this._warn(\"cancellation is disabled\");\n\n    var promise = this;\n    var child = promise;\n    while (promise._isCancellable()) {\n        if (!promise._cancelBy(child)) {\n            if (child._isFollowing()) {\n                child._followee().cancel();\n            } else {\n                child._cancelBranched();\n            }\n            break;\n        }\n\n        var parent = promise._cancellationParent;\n        if (parent == null || !parent._isCancellable()) {\n            if (promise._isFollowing()) {\n                promise._followee().cancel();\n            } else {\n                promise._cancelBranched();\n            }\n            break;\n        } else {\n            if (promise._isFollowing()) promise._followee().cancel();\n            promise._setWillBeCancelled();\n            child = promise;\n            promise = parent;\n        }\n    }\n};\n\nPromise.prototype._branchHasCancelled = function() {\n    this._branchesRemainingToCancel--;\n};\n\nPromise.prototype._enoughBranchesHaveCancelled = function() {\n    return this._branchesRemainingToCancel === undefined ||\n           this._branchesRemainingToCancel <= 0;\n};\n\nPromise.prototype._cancelBy = function(canceller) {\n    if (canceller === this) {\n        this._branchesRemainingToCancel = 0;\n        this._invokeOnCancel();\n        return true;\n    } else {\n        this._branchHasCancelled();\n        if (this._enoughBranchesHaveCancelled()) {\n            this._invokeOnCancel();\n            return true;\n        }\n    }\n    return false;\n};\n\nPromise.prototype._cancelBranched = function() {\n    if (this._enoughBranchesHaveCancelled()) {\n        this._cancel();\n    }\n};\n\nPromise.prototype._cancel = function() {\n    if (!this._isCancellable()) return;\n    this._setCancelled();\n    async.invoke(this._cancelPromises, this, undefined);\n};\n\nPromise.prototype._cancelPromises = function() {\n    if (this._length() > 0) this._settlePromises();\n};\n\nPromise.prototype._unsetOnCancel = function() {\n    this._onCancelField = undefined;\n};\n\nPromise.prototype._isCancellable = function() {\n    return this.isPending() && !this._isCancelled();\n};\n\nPromise.prototype.isCancellable = function() {\n    return this.isPending() && !this.isCancelled();\n};\n\nPromise.prototype._doInvokeOnCancel = function(onCancelCallback, internalOnly) {\n    if (util.isArray(onCancelCallback)) {\n        for (var i = 0; i < onCancelCallback.length; ++i) {\n            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);\n        }\n    } else if (onCancelCallback !== undefined) {\n        if (typeof onCancelCallback === \"function\") {\n            if (!internalOnly) {\n                var e = tryCatch(onCancelCallback).call(this._boundValue());\n                if (e === errorObj) {\n                    this._attachExtraTrace(e.e);\n                    async.throwLater(e.e);\n                }\n            }\n        } else {\n            onCancelCallback._resultCancelled(this);\n        }\n    }\n};\n\nPromise.prototype._invokeOnCancel = function() {\n    var onCancelCallback = this._onCancel();\n    this._unsetOnCancel();\n    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);\n};\n\nPromise.prototype._invokeInternalOnCancel = function() {\n    if (this._isCancellable()) {\n        this._doInvokeOnCancel(this._onCancel(), true);\n        this._unsetOnCancel();\n    }\n};\n\nPromise.prototype._resultCancelled = function() {\n    this.cancel();\n};\n\n};\n\n},{\"./util\":36}],7:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(NEXT_FILTER) {\nvar util = _dereq_(\"./util\");\nvar getKeys = _dereq_(\"./es5\").keys;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction catchFilter(instances, cb, promise) {\n    return function(e) {\n        var boundTo = promise._boundValue();\n        predicateLoop: for (var i = 0; i < instances.length; ++i) {\n            var item = instances[i];\n\n            if (item === Error ||\n                (item != null && item.prototype instanceof Error)) {\n                if (e instanceof item) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (typeof item === \"function\") {\n                var matchesPredicate = tryCatch(item).call(boundTo, e);\n                if (matchesPredicate === errorObj) {\n                    return matchesPredicate;\n                } else if (matchesPredicate) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (util.isObject(e)) {\n                var keys = getKeys(item);\n                for (var j = 0; j < keys.length; ++j) {\n                    var key = keys[j];\n                    if (item[key] != e[key]) {\n                        continue predicateLoop;\n                    }\n                }\n                return tryCatch(cb).call(boundTo, e);\n            }\n        }\n        return NEXT_FILTER;\n    };\n}\n\nreturn catchFilter;\n};\n\n},{\"./es5\":13,\"./util\":36}],8:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar longStackTraces = false;\nvar contextStack = [];\n\nPromise.prototype._promiseCreated = function() {};\nPromise.prototype._pushContext = function() {};\nPromise.prototype._popContext = function() {return null;};\nPromise._peekContext = Promise.prototype._peekContext = function() {};\n\nfunction Context() {\n    this._trace = new Context.CapturedTrace(peekContext());\n}\nContext.prototype._pushContext = function () {\n    if (this._trace !== undefined) {\n        this._trace._promiseCreated = null;\n        contextStack.push(this._trace);\n    }\n};\n\nContext.prototype._popContext = function () {\n    if (this._trace !== undefined) {\n        var trace = contextStack.pop();\n        var ret = trace._promiseCreated;\n        trace._promiseCreated = null;\n        return ret;\n    }\n    return null;\n};\n\nfunction createContext() {\n    if (longStackTraces) return new Context();\n}\n\nfunction peekContext() {\n    var lastIndex = contextStack.length - 1;\n    if (lastIndex >= 0) {\n        return contextStack[lastIndex];\n    }\n    return undefined;\n}\nContext.CapturedTrace = null;\nContext.create = createContext;\nContext.deactivateLongStackTraces = function() {};\nContext.activateLongStackTraces = function() {\n    var Promise_pushContext = Promise.prototype._pushContext;\n    var Promise_popContext = Promise.prototype._popContext;\n    var Promise_PeekContext = Promise._peekContext;\n    var Promise_peekContext = Promise.prototype._peekContext;\n    var Promise_promiseCreated = Promise.prototype._promiseCreated;\n    Context.deactivateLongStackTraces = function() {\n        Promise.prototype._pushContext = Promise_pushContext;\n        Promise.prototype._popContext = Promise_popContext;\n        Promise._peekContext = Promise_PeekContext;\n        Promise.prototype._peekContext = Promise_peekContext;\n        Promise.prototype._promiseCreated = Promise_promiseCreated;\n        longStackTraces = false;\n    };\n    longStackTraces = true;\n    Promise.prototype._pushContext = Context.prototype._pushContext;\n    Promise.prototype._popContext = Context.prototype._popContext;\n    Promise._peekContext = Promise.prototype._peekContext = peekContext;\n    Promise.prototype._promiseCreated = function() {\n        var ctx = this._peekContext();\n        if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;\n    };\n};\nreturn Context;\n};\n\n},{}],9:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, Context) {\nvar getDomain = Promise._getDomain;\nvar async = Promise._async;\nvar Warning = _dereq_(\"./errors\").Warning;\nvar util = _dereq_(\"./util\");\nvar canAttachTrace = util.canAttachTrace;\nvar unhandledRejectionHandled;\nvar possiblyUnhandledRejection;\nvar bluebirdFramePattern =\n    /[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](release|debug|instrumented)/;\nvar nodeFramePattern = /\\((?:timers\\.js):\\d+:\\d+\\)/;\nvar parseLinePattern = /[\\/<\\(](.+?):(\\d+):(\\d+)\\)?\\s*$/;\nvar stackFramePattern = null;\nvar formatStack = null;\nvar indentStackFrames = false;\nvar printWarning;\nvar debugging = !!(util.env(\"BLUEBIRD_DEBUG\") != 0 &&\n                        (true ||\n                         util.env(\"BLUEBIRD_DEBUG\") ||\n                         util.env(\"NODE_ENV\") === \"development\"));\n\nvar warnings = !!(util.env(\"BLUEBIRD_WARNINGS\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_WARNINGS\")));\n\nvar longStackTraces = !!(util.env(\"BLUEBIRD_LONG_STACK_TRACES\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_LONG_STACK_TRACES\")));\n\nvar wForgottenReturn = util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\") != 0 &&\n    (warnings || !!util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\"));\n\nPromise.prototype.suppressUnhandledRejections = function() {\n    var target = this._target();\n    target._bitField = ((target._bitField & (~1048576)) |\n                      524288);\n};\n\nPromise.prototype._ensurePossibleRejectionHandled = function () {\n    if ((this._bitField & 524288) !== 0) return;\n    this._setRejectionIsUnhandled();\n    async.invokeLater(this._notifyUnhandledRejection, this, undefined);\n};\n\nPromise.prototype._notifyUnhandledRejectionIsHandled = function () {\n    fireRejectionEvent(\"rejectionHandled\",\n                                  unhandledRejectionHandled, undefined, this);\n};\n\nPromise.prototype._setReturnedNonUndefined = function() {\n    this._bitField = this._bitField | 268435456;\n};\n\nPromise.prototype._returnedNonUndefined = function() {\n    return (this._bitField & 268435456) !== 0;\n};\n\nPromise.prototype._notifyUnhandledRejection = function () {\n    if (this._isRejectionUnhandled()) {\n        var reason = this._settledValue();\n        this._setUnhandledRejectionIsNotified();\n        fireRejectionEvent(\"unhandledRejection\",\n                                      possiblyUnhandledRejection, reason, this);\n    }\n};\n\nPromise.prototype._setUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField | 262144;\n};\n\nPromise.prototype._unsetUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField & (~262144);\n};\n\nPromise.prototype._isUnhandledRejectionNotified = function () {\n    return (this._bitField & 262144) > 0;\n};\n\nPromise.prototype._setRejectionIsUnhandled = function () {\n    this._bitField = this._bitField | 1048576;\n};\n\nPromise.prototype._unsetRejectionIsUnhandled = function () {\n    this._bitField = this._bitField & (~1048576);\n    if (this._isUnhandledRejectionNotified()) {\n        this._unsetUnhandledRejectionIsNotified();\n        this._notifyUnhandledRejectionIsHandled();\n    }\n};\n\nPromise.prototype._isRejectionUnhandled = function () {\n    return (this._bitField & 1048576) > 0;\n};\n\nPromise.prototype._warn = function(message, shouldUseOwnTrace, promise) {\n    return warn(message, shouldUseOwnTrace, promise || this);\n};\n\nPromise.onPossiblyUnhandledRejection = function (fn) {\n    var domain = getDomain();\n    possiblyUnhandledRejection =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nPromise.onUnhandledRejectionHandled = function (fn) {\n    var domain = getDomain();\n    unhandledRejectionHandled =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nvar disableLongStackTraces = function() {};\nPromise.longStackTraces = function () {\n    if (async.haveItemsQueued() && !config.longStackTraces) {\n        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (!config.longStackTraces && longStackTracesIsSupported()) {\n        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;\n        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;\n        config.longStackTraces = true;\n        disableLongStackTraces = function() {\n            if (async.haveItemsQueued() && !config.longStackTraces) {\n                throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n            }\n            Promise.prototype._captureStackTrace = Promise_captureStackTrace;\n            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;\n            Context.deactivateLongStackTraces();\n            async.enableTrampoline();\n            config.longStackTraces = false;\n        };\n        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;\n        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;\n        Context.activateLongStackTraces();\n        async.disableTrampolineIfNecessary();\n    }\n};\n\nPromise.hasLongStackTraces = function () {\n    return config.longStackTraces && longStackTracesIsSupported();\n};\n\nvar fireDomEvent = (function() {\n    try {\n        if (typeof CustomEvent === \"function\") {\n            var event = new CustomEvent(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new CustomEvent(name.toLowerCase(), {\n                    detail: event,\n                    cancelable: true\n                });\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else if (typeof Event === \"function\") {\n            var event = new Event(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new Event(name.toLowerCase(), {\n                    cancelable: true\n                });\n                domEvent.detail = event;\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else {\n            var event = document.createEvent(\"CustomEvent\");\n            event.initCustomEvent(\"testingtheevent\", false, true, {});\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = document.createEvent(\"CustomEvent\");\n                domEvent.initCustomEvent(name.toLowerCase(), false, true,\n                    event);\n                return !util.global.dispatchEvent(domEvent);\n            };\n        }\n    } catch (e) {}\n    return function() {\n        return false;\n    };\n})();\n\nvar fireGlobalEvent = (function() {\n    if (util.isNode) {\n        return function() {\n            return process.emit.apply(process, arguments);\n        };\n    } else {\n        if (!util.global) {\n            return function() {\n                return false;\n            };\n        }\n        return function(name) {\n            var methodName = \"on\" + name.toLowerCase();\n            var method = util.global[methodName];\n            if (!method) return false;\n            method.apply(util.global, [].slice.call(arguments, 1));\n            return true;\n        };\n    }\n})();\n\nfunction generatePromiseLifecycleEventObject(name, promise) {\n    return {promise: promise};\n}\n\nvar eventToObjectGenerator = {\n    promiseCreated: generatePromiseLifecycleEventObject,\n    promiseFulfilled: generatePromiseLifecycleEventObject,\n    promiseRejected: generatePromiseLifecycleEventObject,\n    promiseResolved: generatePromiseLifecycleEventObject,\n    promiseCancelled: generatePromiseLifecycleEventObject,\n    promiseChained: function(name, promise, child) {\n        return {promise: promise, child: child};\n    },\n    warning: function(name, warning) {\n        return {warning: warning};\n    },\n    unhandledRejection: function (name, reason, promise) {\n        return {reason: reason, promise: promise};\n    },\n    rejectionHandled: generatePromiseLifecycleEventObject\n};\n\nvar activeFireEvent = function (name) {\n    var globalEventFired = false;\n    try {\n        globalEventFired = fireGlobalEvent.apply(null, arguments);\n    } catch (e) {\n        async.throwLater(e);\n        globalEventFired = true;\n    }\n\n    var domEventFired = false;\n    try {\n        domEventFired = fireDomEvent(name,\n                    eventToObjectGenerator[name].apply(null, arguments));\n    } catch (e) {\n        async.throwLater(e);\n        domEventFired = true;\n    }\n\n    return domEventFired || globalEventFired;\n};\n\nPromise.config = function(opts) {\n    opts = Object(opts);\n    if (\"longStackTraces\" in opts) {\n        if (opts.longStackTraces) {\n            Promise.longStackTraces();\n        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {\n            disableLongStackTraces();\n        }\n    }\n    if (\"warnings\" in opts) {\n        var warningsOption = opts.warnings;\n        config.warnings = !!warningsOption;\n        wForgottenReturn = config.warnings;\n\n        if (util.isObject(warningsOption)) {\n            if (\"wForgottenReturn\" in warningsOption) {\n                wForgottenReturn = !!warningsOption.wForgottenReturn;\n            }\n        }\n    }\n    if (\"cancellation\" in opts && opts.cancellation && !config.cancellation) {\n        if (async.haveItemsQueued()) {\n            throw new Error(\n                \"cannot enable cancellation after promises are in use\");\n        }\n        Promise.prototype._clearCancellationData =\n            cancellationClearCancellationData;\n        Promise.prototype._propagateFrom = cancellationPropagateFrom;\n        Promise.prototype._onCancel = cancellationOnCancel;\n        Promise.prototype._setOnCancel = cancellationSetOnCancel;\n        Promise.prototype._attachCancellationCallback =\n            cancellationAttachCancellationCallback;\n        Promise.prototype._execute = cancellationExecute;\n        propagateFromFunction = cancellationPropagateFrom;\n        config.cancellation = true;\n    }\n    if (\"monitoring\" in opts) {\n        if (opts.monitoring && !config.monitoring) {\n            config.monitoring = true;\n            Promise.prototype._fireEvent = activeFireEvent;\n        } else if (!opts.monitoring && config.monitoring) {\n            config.monitoring = false;\n            Promise.prototype._fireEvent = defaultFireEvent;\n        }\n    }\n    return Promise;\n};\n\nfunction defaultFireEvent() { return false; }\n\nPromise.prototype._fireEvent = defaultFireEvent;\nPromise.prototype._execute = function(executor, resolve, reject) {\n    try {\n        executor(resolve, reject);\n    } catch (e) {\n        return e;\n    }\n};\nPromise.prototype._onCancel = function () {};\nPromise.prototype._setOnCancel = function (handler) { ; };\nPromise.prototype._attachCancellationCallback = function(onCancel) {\n    ;\n};\nPromise.prototype._captureStackTrace = function () {};\nPromise.prototype._attachExtraTrace = function () {};\nPromise.prototype._clearCancellationData = function() {};\nPromise.prototype._propagateFrom = function (parent, flags) {\n    ;\n    ;\n};\n\nfunction cancellationExecute(executor, resolve, reject) {\n    var promise = this;\n    try {\n        executor(resolve, reject, function(onCancel) {\n            if (typeof onCancel !== \"function\") {\n                throw new TypeError(\"onCancel must be a function, got: \" +\n                                    util.toString(onCancel));\n            }\n            promise._attachCancellationCallback(onCancel);\n        });\n    } catch (e) {\n        return e;\n    }\n}\n\nfunction cancellationAttachCancellationCallback(onCancel) {\n    if (!this._isCancellable()) return this;\n\n    var previousOnCancel = this._onCancel();\n    if (previousOnCancel !== undefined) {\n        if (util.isArray(previousOnCancel)) {\n            previousOnCancel.push(onCancel);\n        } else {\n            this._setOnCancel([previousOnCancel, onCancel]);\n        }\n    } else {\n        this._setOnCancel(onCancel);\n    }\n}\n\nfunction cancellationOnCancel() {\n    return this._onCancelField;\n}\n\nfunction cancellationSetOnCancel(onCancel) {\n    this._onCancelField = onCancel;\n}\n\nfunction cancellationClearCancellationData() {\n    this._cancellationParent = undefined;\n    this._onCancelField = undefined;\n}\n\nfunction cancellationPropagateFrom(parent, flags) {\n    if ((flags & 1) !== 0) {\n        this._cancellationParent = parent;\n        var branchesRemainingToCancel = parent._branchesRemainingToCancel;\n        if (branchesRemainingToCancel === undefined) {\n            branchesRemainingToCancel = 0;\n        }\n        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;\n    }\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\n\nfunction bindingPropagateFrom(parent, flags) {\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\nvar propagateFromFunction = bindingPropagateFrom;\n\nfunction boundValueFunction() {\n    var ret = this._boundTo;\n    if (ret !== undefined) {\n        if (ret instanceof Promise) {\n            if (ret.isFulfilled()) {\n                return ret.value();\n            } else {\n                return undefined;\n            }\n        }\n    }\n    return ret;\n}\n\nfunction longStackTracesCaptureStackTrace() {\n    this._trace = new CapturedTrace(this._peekContext());\n}\n\nfunction longStackTracesAttachExtraTrace(error, ignoreSelf) {\n    if (canAttachTrace(error)) {\n        var trace = this._trace;\n        if (trace !== undefined) {\n            if (ignoreSelf) trace = trace._parent;\n        }\n        if (trace !== undefined) {\n            trace.attachExtraTrace(error);\n        } else if (!error.__stackCleaned__) {\n            var parsed = parseStackAndMessage(error);\n            util.notEnumerableProp(error, \"stack\",\n                parsed.message + \"\\n\" + parsed.stack.join(\"\\n\"));\n            util.notEnumerableProp(error, \"__stackCleaned__\", true);\n        }\n    }\n}\n\nfunction checkForgottenReturns(returnValue, promiseCreated, name, promise,\n                               parent) {\n    if (returnValue === undefined && promiseCreated !== null &&\n        wForgottenReturn) {\n        if (parent !== undefined && parent._returnedNonUndefined()) return;\n        if ((promise._bitField & 65535) === 0) return;\n\n        if (name) name = name + \" \";\n        var handlerLine = \"\";\n        var creatorLine = \"\";\n        if (promiseCreated._trace) {\n            var traceLines = promiseCreated._trace.stack.split(\"\\n\");\n            var stack = cleanStack(traceLines);\n            for (var i = stack.length - 1; i >= 0; --i) {\n                var line = stack[i];\n                if (!nodeFramePattern.test(line)) {\n                    var lineMatches = line.match(parseLinePattern);\n                    if (lineMatches) {\n                        handlerLine  = \"at \" + lineMatches[1] +\n                            \":\" + lineMatches[2] + \":\" + lineMatches[3] + \" \";\n                    }\n                    break;\n                }\n            }\n\n            if (stack.length > 0) {\n                var firstUserLine = stack[0];\n                for (var i = 0; i < traceLines.length; ++i) {\n\n                    if (traceLines[i] === firstUserLine) {\n                        if (i > 0) {\n                            creatorLine = \"\\n\" + traceLines[i - 1];\n                        }\n                        break;\n                    }\n                }\n\n            }\n        }\n        var msg = \"a promise was created in a \" + name +\n            \"handler \" + handlerLine + \"but was not returned from it, \" +\n            \"see http://goo.gl/rRqMUw\" +\n            creatorLine;\n        promise._warn(msg, true, promiseCreated);\n    }\n}\n\nfunction deprecated(name, replacement) {\n    var message = name +\n        \" is deprecated and will be removed in a future version.\";\n    if (replacement) message += \" Use \" + replacement + \" instead.\";\n    return warn(message);\n}\n\nfunction warn(message, shouldUseOwnTrace, promise) {\n    if (!config.warnings) return;\n    var warning = new Warning(message);\n    var ctx;\n    if (shouldUseOwnTrace) {\n        promise._attachExtraTrace(warning);\n    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {\n        ctx.attachExtraTrace(warning);\n    } else {\n        var parsed = parseStackAndMessage(warning);\n        warning.stack = parsed.message + \"\\n\" + parsed.stack.join(\"\\n\");\n    }\n\n    if (!activeFireEvent(\"warning\", warning)) {\n        formatAndLogError(warning, \"\", true);\n    }\n}\n\nfunction reconstructStack(message, stacks) {\n    for (var i = 0; i < stacks.length - 1; ++i) {\n        stacks[i].push(\"From previous event:\");\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    if (i < stacks.length) {\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    return message + \"\\n\" + stacks.join(\"\\n\");\n}\n\nfunction removeDuplicateOrEmptyJumps(stacks) {\n    for (var i = 0; i < stacks.length; ++i) {\n        if (stacks[i].length === 0 ||\n            ((i + 1 < stacks.length) && stacks[i][0] === stacks[i+1][0])) {\n            stacks.splice(i, 1);\n            i--;\n        }\n    }\n}\n\nfunction removeCommonRoots(stacks) {\n    var current = stacks[0];\n    for (var i = 1; i < stacks.length; ++i) {\n        var prev = stacks[i];\n        var currentLastIndex = current.length - 1;\n        var currentLastLine = current[currentLastIndex];\n        var commonRootMeetPoint = -1;\n\n        for (var j = prev.length - 1; j >= 0; --j) {\n            if (prev[j] === currentLastLine) {\n                commonRootMeetPoint = j;\n                break;\n            }\n        }\n\n        for (var j = commonRootMeetPoint; j >= 0; --j) {\n            var line = prev[j];\n            if (current[currentLastIndex] === line) {\n                current.pop();\n                currentLastIndex--;\n            } else {\n                break;\n            }\n        }\n        current = prev;\n    }\n}\n\nfunction cleanStack(stack) {\n    var ret = [];\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        var isTraceLine = \"    (No stack trace)\" === line ||\n            stackFramePattern.test(line);\n        var isInternalFrame = isTraceLine && shouldIgnore(line);\n        if (isTraceLine && !isInternalFrame) {\n            if (indentStackFrames && line.charAt(0) !== \" \") {\n                line = \"    \" + line;\n            }\n            ret.push(line);\n        }\n    }\n    return ret;\n}\n\nfunction stackFramesAsArray(error) {\n    var stack = error.stack.replace(/\\s+$/g, \"\").split(\"\\n\");\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        if (\"    (No stack trace)\" === line || stackFramePattern.test(line)) {\n            break;\n        }\n    }\n    if (i > 0 && error.name != \"SyntaxError\") {\n        stack = stack.slice(i);\n    }\n    return stack;\n}\n\nfunction parseStackAndMessage(error) {\n    var stack = error.stack;\n    var message = error.toString();\n    stack = typeof stack === \"string\" && stack.length > 0\n                ? stackFramesAsArray(error) : [\"    (No stack trace)\"];\n    return {\n        message: message,\n        stack: error.name == \"SyntaxError\" ? stack : cleanStack(stack)\n    };\n}\n\nfunction formatAndLogError(error, title, isSoft) {\n    if (typeof console !== \"undefined\") {\n        var message;\n        if (util.isObject(error)) {\n            var stack = error.stack;\n            message = title + formatStack(stack, error);\n        } else {\n            message = title + String(error);\n        }\n        if (typeof printWarning === \"function\") {\n            printWarning(message, isSoft);\n        } else if (typeof console.log === \"function\" ||\n            typeof console.log === \"object\") {\n            console.log(message);\n        }\n    }\n}\n\nfunction fireRejectionEvent(name, localHandler, reason, promise) {\n    var localEventFired = false;\n    try {\n        if (typeof localHandler === \"function\") {\n            localEventFired = true;\n            if (name === \"rejectionHandled\") {\n                localHandler(promise);\n            } else {\n                localHandler(reason, promise);\n            }\n        }\n    } catch (e) {\n        async.throwLater(e);\n    }\n\n    if (name === \"unhandledRejection\") {\n        if (!activeFireEvent(name, reason, promise) && !localEventFired) {\n            formatAndLogError(reason, \"Unhandled rejection \");\n        }\n    } else {\n        activeFireEvent(name, promise);\n    }\n}\n\nfunction formatNonError(obj) {\n    var str;\n    if (typeof obj === \"function\") {\n        str = \"[function \" +\n            (obj.name || \"anonymous\") +\n            \"]\";\n    } else {\n        str = obj && typeof obj.toString === \"function\"\n            ? obj.toString() : util.toString(obj);\n        var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n        if (ruselessToString.test(str)) {\n            try {\n                var newStr = JSON.stringify(obj);\n                str = newStr;\n            }\n            catch(e) {\n\n            }\n        }\n        if (str.length === 0) {\n            str = \"(empty array)\";\n        }\n    }\n    return (\"(<\" + snip(str) + \">, no stack trace)\");\n}\n\nfunction snip(str) {\n    var maxChars = 41;\n    if (str.length < maxChars) {\n        return str;\n    }\n    return str.substr(0, maxChars - 3) + \"...\";\n}\n\nfunction longStackTracesIsSupported() {\n    return typeof captureStackTrace === \"function\";\n}\n\nvar shouldIgnore = function() { return false; };\nvar parseLineInfoRegex = /[\\/<\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;\nfunction parseLineInfo(line) {\n    var matches = line.match(parseLineInfoRegex);\n    if (matches) {\n        return {\n            fileName: matches[1],\n            line: parseInt(matches[2], 10)\n        };\n    }\n}\n\nfunction setBounds(firstLineError, lastLineError) {\n    if (!longStackTracesIsSupported()) return;\n    var firstStackLines = firstLineError.stack.split(\"\\n\");\n    var lastStackLines = lastLineError.stack.split(\"\\n\");\n    var firstIndex = -1;\n    var lastIndex = -1;\n    var firstFileName;\n    var lastFileName;\n    for (var i = 0; i < firstStackLines.length; ++i) {\n        var result = parseLineInfo(firstStackLines[i]);\n        if (result) {\n            firstFileName = result.fileName;\n            firstIndex = result.line;\n            break;\n        }\n    }\n    for (var i = 0; i < lastStackLines.length; ++i) {\n        var result = parseLineInfo(lastStackLines[i]);\n        if (result) {\n            lastFileName = result.fileName;\n            lastIndex = result.line;\n            break;\n        }\n    }\n    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName ||\n        firstFileName !== lastFileName || firstIndex >= lastIndex) {\n        return;\n    }\n\n    shouldIgnore = function(line) {\n        if (bluebirdFramePattern.test(line)) return true;\n        var info = parseLineInfo(line);\n        if (info) {\n            if (info.fileName === firstFileName &&\n                (firstIndex <= info.line && info.line <= lastIndex)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n\nfunction CapturedTrace(parent) {\n    this._parent = parent;\n    this._promisesCreated = 0;\n    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);\n    captureStackTrace(this, CapturedTrace);\n    if (length > 32) this.uncycle();\n}\nutil.inherits(CapturedTrace, Error);\nContext.CapturedTrace = CapturedTrace;\n\nCapturedTrace.prototype.uncycle = function() {\n    var length = this._length;\n    if (length < 2) return;\n    var nodes = [];\n    var stackToIndex = {};\n\n    for (var i = 0, node = this; node !== undefined; ++i) {\n        nodes.push(node);\n        node = node._parent;\n    }\n    length = this._length = i;\n    for (var i = length - 1; i >= 0; --i) {\n        var stack = nodes[i].stack;\n        if (stackToIndex[stack] === undefined) {\n            stackToIndex[stack] = i;\n        }\n    }\n    for (var i = 0; i < length; ++i) {\n        var currentStack = nodes[i].stack;\n        var index = stackToIndex[currentStack];\n        if (index !== undefined && index !== i) {\n            if (index > 0) {\n                nodes[index - 1]._parent = undefined;\n                nodes[index - 1]._length = 1;\n            }\n            nodes[i]._parent = undefined;\n            nodes[i]._length = 1;\n            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;\n\n            if (index < length - 1) {\n                cycleEdgeNode._parent = nodes[index + 1];\n                cycleEdgeNode._parent.uncycle();\n                cycleEdgeNode._length =\n                    cycleEdgeNode._parent._length + 1;\n            } else {\n                cycleEdgeNode._parent = undefined;\n                cycleEdgeNode._length = 1;\n            }\n            var currentChildLength = cycleEdgeNode._length + 1;\n            for (var j = i - 2; j >= 0; --j) {\n                nodes[j]._length = currentChildLength;\n                currentChildLength++;\n            }\n            return;\n        }\n    }\n};\n\nCapturedTrace.prototype.attachExtraTrace = function(error) {\n    if (error.__stackCleaned__) return;\n    this.uncycle();\n    var parsed = parseStackAndMessage(error);\n    var message = parsed.message;\n    var stacks = [parsed.stack];\n\n    var trace = this;\n    while (trace !== undefined) {\n        stacks.push(cleanStack(trace.stack.split(\"\\n\")));\n        trace = trace._parent;\n    }\n    removeCommonRoots(stacks);\n    removeDuplicateOrEmptyJumps(stacks);\n    util.notEnumerableProp(error, \"stack\", reconstructStack(message, stacks));\n    util.notEnumerableProp(error, \"__stackCleaned__\", true);\n};\n\nvar captureStackTrace = (function stackDetection() {\n    var v8stackFramePattern = /^\\s*at\\s*/;\n    var v8stackFormatter = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if (error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    if (typeof Error.stackTraceLimit === \"number\" &&\n        typeof Error.captureStackTrace === \"function\") {\n        Error.stackTraceLimit += 6;\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        var captureStackTrace = Error.captureStackTrace;\n\n        shouldIgnore = function(line) {\n            return bluebirdFramePattern.test(line);\n        };\n        return function(receiver, ignoreUntil) {\n            Error.stackTraceLimit += 6;\n            captureStackTrace(receiver, ignoreUntil);\n            Error.stackTraceLimit -= 6;\n        };\n    }\n    var err = new Error();\n\n    if (typeof err.stack === \"string\" &&\n        err.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\") >= 0) {\n        stackFramePattern = /@/;\n        formatStack = v8stackFormatter;\n        indentStackFrames = true;\n        return function captureStackTrace(o) {\n            o.stack = new Error().stack;\n        };\n    }\n\n    var hasStackAfterThrow;\n    try { throw new Error(); }\n    catch(e) {\n        hasStackAfterThrow = (\"stack\" in e);\n    }\n    if (!(\"stack\" in err) && hasStackAfterThrow &&\n        typeof Error.stackTraceLimit === \"number\") {\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        return function captureStackTrace(o) {\n            Error.stackTraceLimit += 6;\n            try { throw new Error(); }\n            catch(e) { o.stack = e.stack; }\n            Error.stackTraceLimit -= 6;\n        };\n    }\n\n    formatStack = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if ((typeof error === \"object\" ||\n            typeof error === \"function\") &&\n            error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    return null;\n\n})([]);\n\nif (typeof console !== \"undefined\" && typeof console.warn !== \"undefined\") {\n    printWarning = function (message) {\n        console.warn(message);\n    };\n    if (util.isNode && process.stderr.isTTY) {\n        printWarning = function(message, isSoft) {\n            var color = isSoft ? \"\\u001b[33m\" : \"\\u001b[31m\";\n            console.warn(color + message + \"\\u001b[0m\\n\");\n        };\n    } else if (!util.isNode && typeof (new Error().stack) === \"string\") {\n        printWarning = function(message, isSoft) {\n            console.warn(\"%c\" + message,\n                        isSoft ? \"color: darkorange\" : \"color: red\");\n        };\n    }\n}\n\nvar config = {\n    warnings: warnings,\n    longStackTraces: false,\n    cancellation: false,\n    monitoring: false\n};\n\nif (longStackTraces) Promise.longStackTraces();\n\nreturn {\n    longStackTraces: function() {\n        return config.longStackTraces;\n    },\n    warnings: function() {\n        return config.warnings;\n    },\n    cancellation: function() {\n        return config.cancellation;\n    },\n    monitoring: function() {\n        return config.monitoring;\n    },\n    propagateFromFunction: function() {\n        return propagateFromFunction;\n    },\n    boundValueFunction: function() {\n        return boundValueFunction;\n    },\n    checkForgottenReturns: checkForgottenReturns,\n    setBounds: setBounds,\n    warn: warn,\n    deprecated: deprecated,\n    CapturedTrace: CapturedTrace,\n    fireDomEvent: fireDomEvent,\n    fireGlobalEvent: fireGlobalEvent\n};\n};\n\n},{\"./errors\":12,\"./util\":36}],10:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction returner() {\n    return this.value;\n}\nfunction thrower() {\n    throw this.reason;\n}\n\nPromise.prototype[\"return\"] =\nPromise.prototype.thenReturn = function (value) {\n    if (value instanceof Promise) value.suppressUnhandledRejections();\n    return this._then(\n        returner, undefined, undefined, {value: value}, undefined);\n};\n\nPromise.prototype[\"throw\"] =\nPromise.prototype.thenThrow = function (reason) {\n    return this._then(\n        thrower, undefined, undefined, {reason: reason}, undefined);\n};\n\nPromise.prototype.catchThrow = function (reason) {\n    if (arguments.length <= 1) {\n        return this._then(\n            undefined, thrower, undefined, {reason: reason}, undefined);\n    } else {\n        var _reason = arguments[1];\n        var handler = function() {throw _reason;};\n        return this.caught(reason, handler);\n    }\n};\n\nPromise.prototype.catchReturn = function (value) {\n    if (arguments.length <= 1) {\n        if (value instanceof Promise) value.suppressUnhandledRejections();\n        return this._then(\n            undefined, returner, undefined, {value: value}, undefined);\n    } else {\n        var _value = arguments[1];\n        if (_value instanceof Promise) _value.suppressUnhandledRejections();\n        var handler = function() {return _value;};\n        return this.caught(value, handler);\n    }\n};\n};\n\n},{}],11:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseReduce = Promise.reduce;\nvar PromiseAll = Promise.all;\n\nfunction promiseAllThis() {\n    return PromiseAll(this);\n}\n\nfunction PromiseMapSeries(promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);\n}\n\nPromise.prototype.each = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, this, undefined);\n};\n\nPromise.prototype.mapSeries = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, INTERNAL);\n};\n\nPromise.each = function (promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, promises, undefined);\n};\n\nPromise.mapSeries = PromiseMapSeries;\n};\n\n\n},{}],12:[function(_dereq_,module,exports){\n\"use strict\";\nvar es5 = _dereq_(\"./es5\");\nvar Objectfreeze = es5.freeze;\nvar util = _dereq_(\"./util\");\nvar inherits = util.inherits;\nvar notEnumerableProp = util.notEnumerableProp;\n\nfunction subError(nameProperty, defaultMessage) {\n    function SubError(message) {\n        if (!(this instanceof SubError)) return new SubError(message);\n        notEnumerableProp(this, \"message\",\n            typeof message === \"string\" ? message : defaultMessage);\n        notEnumerableProp(this, \"name\", nameProperty);\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            Error.call(this);\n        }\n    }\n    inherits(SubError, Error);\n    return SubError;\n}\n\nvar _TypeError, _RangeError;\nvar Warning = subError(\"Warning\", \"warning\");\nvar CancellationError = subError(\"CancellationError\", \"cancellation error\");\nvar TimeoutError = subError(\"TimeoutError\", \"timeout error\");\nvar AggregateError = subError(\"AggregateError\", \"aggregate error\");\ntry {\n    _TypeError = TypeError;\n    _RangeError = RangeError;\n} catch(e) {\n    _TypeError = subError(\"TypeError\", \"type error\");\n    _RangeError = subError(\"RangeError\", \"range error\");\n}\n\nvar methods = (\"join pop push shift unshift slice filter forEach some \" +\n    \"every map indexOf lastIndexOf reduce reduceRight sort reverse\").split(\" \");\n\nfor (var i = 0; i < methods.length; ++i) {\n    if (typeof Array.prototype[methods[i]] === \"function\") {\n        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];\n    }\n}\n\nes5.defineProperty(AggregateError.prototype, \"length\", {\n    value: 0,\n    configurable: false,\n    writable: true,\n    enumerable: true\n});\nAggregateError.prototype[\"isOperational\"] = true;\nvar level = 0;\nAggregateError.prototype.toString = function() {\n    var indent = Array(level * 4 + 1).join(\" \");\n    var ret = \"\\n\" + indent + \"AggregateError of:\" + \"\\n\";\n    level++;\n    indent = Array(level * 4 + 1).join(\" \");\n    for (var i = 0; i < this.length; ++i) {\n        var str = this[i] === this ? \"[Circular AggregateError]\" : this[i] + \"\";\n        var lines = str.split(\"\\n\");\n        for (var j = 0; j < lines.length; ++j) {\n            lines[j] = indent + lines[j];\n        }\n        str = lines.join(\"\\n\");\n        ret += str + \"\\n\";\n    }\n    level--;\n    return ret;\n};\n\nfunction OperationalError(message) {\n    if (!(this instanceof OperationalError))\n        return new OperationalError(message);\n    notEnumerableProp(this, \"name\", \"OperationalError\");\n    notEnumerableProp(this, \"message\", message);\n    this.cause = message;\n    this[\"isOperational\"] = true;\n\n    if (message instanceof Error) {\n        notEnumerableProp(this, \"message\", message.message);\n        notEnumerableProp(this, \"stack\", message.stack);\n    } else if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n    }\n\n}\ninherits(OperationalError, Error);\n\nvar errorTypes = Error[\"__BluebirdErrorTypes__\"];\nif (!errorTypes) {\n    errorTypes = Objectfreeze({\n        CancellationError: CancellationError,\n        TimeoutError: TimeoutError,\n        OperationalError: OperationalError,\n        RejectionError: OperationalError,\n        AggregateError: AggregateError\n    });\n    es5.defineProperty(Error, \"__BluebirdErrorTypes__\", {\n        value: errorTypes,\n        writable: false,\n        enumerable: false,\n        configurable: false\n    });\n}\n\nmodule.exports = {\n    Error: Error,\n    TypeError: _TypeError,\n    RangeError: _RangeError,\n    CancellationError: errorTypes.CancellationError,\n    OperationalError: errorTypes.OperationalError,\n    TimeoutError: errorTypes.TimeoutError,\n    AggregateError: errorTypes.AggregateError,\n    Warning: Warning\n};\n\n},{\"./es5\":13,\"./util\":36}],13:[function(_dereq_,module,exports){\nvar isES5 = (function(){\n    \"use strict\";\n    return this === undefined;\n})();\n\nif (isES5) {\n    module.exports = {\n        freeze: Object.freeze,\n        defineProperty: Object.defineProperty,\n        getDescriptor: Object.getOwnPropertyDescriptor,\n        keys: Object.keys,\n        names: Object.getOwnPropertyNames,\n        getPrototypeOf: Object.getPrototypeOf,\n        isArray: Array.isArray,\n        isES5: isES5,\n        propertyIsWritable: function(obj, prop) {\n            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n            return !!(!descriptor || descriptor.writable || descriptor.set);\n        }\n    };\n} else {\n    var has = {}.hasOwnProperty;\n    var str = {}.toString;\n    var proto = {}.constructor.prototype;\n\n    var ObjectKeys = function (o) {\n        var ret = [];\n        for (var key in o) {\n            if (has.call(o, key)) {\n                ret.push(key);\n            }\n        }\n        return ret;\n    };\n\n    var ObjectGetDescriptor = function(o, key) {\n        return {value: o[key]};\n    };\n\n    var ObjectDefineProperty = function (o, key, desc) {\n        o[key] = desc.value;\n        return o;\n    };\n\n    var ObjectFreeze = function (obj) {\n        return obj;\n    };\n\n    var ObjectGetPrototypeOf = function (obj) {\n        try {\n            return Object(obj).constructor.prototype;\n        }\n        catch (e) {\n            return proto;\n        }\n    };\n\n    var ArrayIsArray = function (obj) {\n        try {\n            return str.call(obj) === \"[object Array]\";\n        }\n        catch(e) {\n            return false;\n        }\n    };\n\n    module.exports = {\n        isArray: ArrayIsArray,\n        keys: ObjectKeys,\n        names: ObjectKeys,\n        defineProperty: ObjectDefineProperty,\n        getDescriptor: ObjectGetDescriptor,\n        freeze: ObjectFreeze,\n        getPrototypeOf: ObjectGetPrototypeOf,\n        isES5: isES5,\n        propertyIsWritable: function() {\n            return true;\n        }\n    };\n}\n\n},{}],14:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseMap = Promise.map;\n\nPromise.prototype.filter = function (fn, options) {\n    return PromiseMap(this, fn, options, INTERNAL);\n};\n\nPromise.filter = function (promises, fn, options) {\n    return PromiseMap(promises, fn, options, INTERNAL);\n};\n};\n\n},{}],15:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, tryConvertToPromise, NEXT_FILTER) {\nvar util = _dereq_(\"./util\");\nvar CancellationError = Promise.CancellationError;\nvar errorObj = util.errorObj;\nvar catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\n\nfunction PassThroughHandlerContext(promise, type, handler) {\n    this.promise = promise;\n    this.type = type;\n    this.handler = handler;\n    this.called = false;\n    this.cancelPromise = null;\n}\n\nPassThroughHandlerContext.prototype.isFinallyHandler = function() {\n    return this.type === 0;\n};\n\nfunction FinallyHandlerCancelReaction(finallyHandler) {\n    this.finallyHandler = finallyHandler;\n}\n\nFinallyHandlerCancelReaction.prototype._resultCancelled = function() {\n    checkCancel(this.finallyHandler);\n};\n\nfunction checkCancel(ctx, reason) {\n    if (ctx.cancelPromise != null) {\n        if (arguments.length > 1) {\n            ctx.cancelPromise._reject(reason);\n        } else {\n            ctx.cancelPromise._cancel();\n        }\n        ctx.cancelPromise = null;\n        return true;\n    }\n    return false;\n}\n\nfunction succeed() {\n    return finallyHandler.call(this, this.promise._target()._settledValue());\n}\nfunction fail(reason) {\n    if (checkCancel(this, reason)) return;\n    errorObj.e = reason;\n    return errorObj;\n}\nfunction finallyHandler(reasonOrValue) {\n    var promise = this.promise;\n    var handler = this.handler;\n\n    if (!this.called) {\n        this.called = true;\n        var ret = this.isFinallyHandler()\n            ? handler.call(promise._boundValue())\n            : handler.call(promise._boundValue(), reasonOrValue);\n        if (ret === NEXT_FILTER) {\n            return ret;\n        } else if (ret !== undefined) {\n            promise._setReturnedNonUndefined();\n            var maybePromise = tryConvertToPromise(ret, promise);\n            if (maybePromise instanceof Promise) {\n                if (this.cancelPromise != null) {\n                    if (maybePromise._isCancelled()) {\n                        var reason =\n                            new CancellationError(\"late cancellation observer\");\n                        promise._attachExtraTrace(reason);\n                        errorObj.e = reason;\n                        return errorObj;\n                    } else if (maybePromise.isPending()) {\n                        maybePromise._attachCancellationCallback(\n                            new FinallyHandlerCancelReaction(this));\n                    }\n                }\n                return maybePromise._then(\n                    succeed, fail, undefined, this, undefined);\n            }\n        }\n    }\n\n    if (promise.isRejected()) {\n        checkCancel(this);\n        errorObj.e = reasonOrValue;\n        return errorObj;\n    } else {\n        checkCancel(this);\n        return reasonOrValue;\n    }\n}\n\nPromise.prototype._passThrough = function(handler, type, success, fail) {\n    if (typeof handler !== \"function\") return this.then();\n    return this._then(success,\n                      fail,\n                      undefined,\n                      new PassThroughHandlerContext(this, type, handler),\n                      undefined);\n};\n\nPromise.prototype.lastly =\nPromise.prototype[\"finally\"] = function (handler) {\n    return this._passThrough(handler,\n                             0,\n                             finallyHandler,\n                             finallyHandler);\n};\n\n\nPromise.prototype.tap = function (handler) {\n    return this._passThrough(handler, 1, finallyHandler);\n};\n\nPromise.prototype.tapCatch = function (handlerOrPredicate) {\n    var len = arguments.length;\n    if(len === 1) {\n        return this._passThrough(handlerOrPredicate,\n                                 1,\n                                 undefined,\n                                 finallyHandler);\n    } else {\n         var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return Promise.reject(new TypeError(\n                    \"tapCatch statement predicate: \"\n                    + \"expecting an object but got \" + util.classString(item)\n                ));\n            }\n        }\n        catchInstances.length = j;\n        var handler = arguments[i];\n        return this._passThrough(catchFilter(catchInstances, handler, this),\n                                 1,\n                                 undefined,\n                                 finallyHandler);\n    }\n\n};\n\nreturn PassThroughHandlerContext;\n};\n\n},{\"./catch_filter\":7,\"./util\":36}],16:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          apiRejection,\n                          INTERNAL,\n                          tryConvertToPromise,\n                          Proxyable,\n                          debug) {\nvar errors = _dereq_(\"./errors\");\nvar TypeError = errors.TypeError;\nvar util = _dereq_(\"./util\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nvar yieldHandlers = [];\n\nfunction promiseFromYieldHandler(value, yieldHandlers, traceParent) {\n    for (var i = 0; i < yieldHandlers.length; ++i) {\n        traceParent._pushContext();\n        var result = tryCatch(yieldHandlers[i])(value);\n        traceParent._popContext();\n        if (result === errorObj) {\n            traceParent._pushContext();\n            var ret = Promise.reject(errorObj.e);\n            traceParent._popContext();\n            return ret;\n        }\n        var maybePromise = tryConvertToPromise(result, traceParent);\n        if (maybePromise instanceof Promise) return maybePromise;\n    }\n    return null;\n}\n\nfunction PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {\n    if (debug.cancellation()) {\n        var internal = new Promise(INTERNAL);\n        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);\n        this._promise = internal.lastly(function() {\n            return _finallyPromise;\n        });\n        internal._captureStackTrace();\n        internal._setOnCancel(this);\n    } else {\n        var promise = this._promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n    }\n    this._stack = stack;\n    this._generatorFunction = generatorFunction;\n    this._receiver = receiver;\n    this._generator = undefined;\n    this._yieldHandlers = typeof yieldHandler === \"function\"\n        ? [yieldHandler].concat(yieldHandlers)\n        : yieldHandlers;\n    this._yieldedPromise = null;\n    this._cancellationPhase = false;\n}\nutil.inherits(PromiseSpawn, Proxyable);\n\nPromiseSpawn.prototype._isResolved = function() {\n    return this._promise === null;\n};\n\nPromiseSpawn.prototype._cleanup = function() {\n    this._promise = this._generator = null;\n    if (debug.cancellation() && this._finallyPromise !== null) {\n        this._finallyPromise._fulfill();\n        this._finallyPromise = null;\n    }\n};\n\nPromiseSpawn.prototype._promiseCancelled = function() {\n    if (this._isResolved()) return;\n    var implementsReturn = typeof this._generator[\"return\"] !== \"undefined\";\n\n    var result;\n    if (!implementsReturn) {\n        var reason = new Promise.CancellationError(\n            \"generator .return() sentinel\");\n        Promise.coroutine.returnSentinel = reason;\n        this._promise._attachExtraTrace(reason);\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"throw\"]).call(this._generator,\n                                                         reason);\n        this._promise._popContext();\n    } else {\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"return\"]).call(this._generator,\n                                                          undefined);\n        this._promise._popContext();\n    }\n    this._cancellationPhase = true;\n    this._yieldedPromise = null;\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseFulfilled = function(value) {\n    this._yieldedPromise = null;\n    this._promise._pushContext();\n    var result = tryCatch(this._generator.next).call(this._generator, value);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseRejected = function(reason) {\n    this._yieldedPromise = null;\n    this._promise._attachExtraTrace(reason);\n    this._promise._pushContext();\n    var result = tryCatch(this._generator[\"throw\"])\n        .call(this._generator, reason);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._resultCancelled = function() {\n    if (this._yieldedPromise instanceof Promise) {\n        var promise = this._yieldedPromise;\n        this._yieldedPromise = null;\n        promise.cancel();\n    }\n};\n\nPromiseSpawn.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseSpawn.prototype._run = function () {\n    this._generator = this._generatorFunction.call(this._receiver);\n    this._receiver =\n        this._generatorFunction = undefined;\n    this._promiseFulfilled(undefined);\n};\n\nPromiseSpawn.prototype._continue = function (result) {\n    var promise = this._promise;\n    if (result === errorObj) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._rejectCallback(result.e, false);\n        }\n    }\n\n    var value = result.value;\n    if (result.done === true) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._resolveCallback(value);\n        }\n    } else {\n        var maybePromise = tryConvertToPromise(value, this._promise);\n        if (!(maybePromise instanceof Promise)) {\n            maybePromise =\n                promiseFromYieldHandler(maybePromise,\n                                        this._yieldHandlers,\n                                        this._promise);\n            if (maybePromise === null) {\n                this._promiseRejected(\n                    new TypeError(\n                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\\u000a\".replace(\"%s\", String(value)) +\n                        \"From coroutine:\\u000a\" +\n                        this._stack.split(\"\\n\").slice(1, -7).join(\"\\n\")\n                    )\n                );\n                return;\n            }\n        }\n        maybePromise = maybePromise._target();\n        var bitField = maybePromise._bitField;\n        ;\n        if (((bitField & 50397184) === 0)) {\n            this._yieldedPromise = maybePromise;\n            maybePromise._proxy(this, null);\n        } else if (((bitField & 33554432) !== 0)) {\n            Promise._async.invoke(\n                this._promiseFulfilled, this, maybePromise._value()\n            );\n        } else if (((bitField & 16777216) !== 0)) {\n            Promise._async.invoke(\n                this._promiseRejected, this, maybePromise._reason()\n            );\n        } else {\n            this._promiseCancelled();\n        }\n    }\n};\n\nPromise.coroutine = function (generatorFunction, options) {\n    if (typeof generatorFunction !== \"function\") {\n        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var yieldHandler = Object(options).yieldHandler;\n    var PromiseSpawn$ = PromiseSpawn;\n    var stack = new Error().stack;\n    return function () {\n        var generator = generatorFunction.apply(this, arguments);\n        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                                      stack);\n        var ret = spawn.promise();\n        spawn._generator = generator;\n        spawn._promiseFulfilled(undefined);\n        return ret;\n    };\n};\n\nPromise.coroutine.addYieldHandler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    yieldHandlers.push(fn);\n};\n\nPromise.spawn = function (generatorFunction) {\n    debug.deprecated(\"Promise.spawn()\", \"Promise.coroutine()\");\n    if (typeof generatorFunction !== \"function\") {\n        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var spawn = new PromiseSpawn(generatorFunction, this);\n    var ret = spawn.promise();\n    spawn._run(Promise.spawn);\n    return ret;\n};\n};\n\n},{\"./errors\":12,\"./util\":36}],17:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async,\n         getDomain) {\nvar util = _dereq_(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar reject;\n\nif (!true) {\nif (canEvaluate) {\n    var thenCallback = function(i) {\n        return new Function(\"value\", \"holder\", \"                             \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = value;                                           \\n\\\n            holder.checkFulfillment(this);                                   \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var promiseSetter = function(i) {\n        return new Function(\"promise\", \"holder\", \"                           \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = promise;                                         \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var generateHolderClass = function(total) {\n        var props = new Array(total);\n        for (var i = 0; i < props.length; ++i) {\n            props[i] = \"this.p\" + (i+1);\n        }\n        var assignment = props.join(\" = \") + \" = null;\";\n        var cancellationCode= \"var promise;\\n\" + props.map(function(prop) {\n            return \"                                                         \\n\\\n                promise = \" + prop + \";                                      \\n\\\n                if (promise instanceof Promise) {                            \\n\\\n                    promise.cancel();                                        \\n\\\n                }                                                            \\n\\\n            \";\n        }).join(\"\\n\");\n        var passedArguments = props.join(\", \");\n        var name = \"Holder$\" + total;\n\n\n        var code = \"return function(tryCatch, errorObj, Promise, async) {    \\n\\\n            'use strict';                                                    \\n\\\n            function [TheName](fn) {                                         \\n\\\n                [TheProperties]                                              \\n\\\n                this.fn = fn;                                                \\n\\\n                this.asyncNeeded = true;                                     \\n\\\n                this.now = 0;                                                \\n\\\n            }                                                                \\n\\\n                                                                             \\n\\\n            [TheName].prototype._callFunction = function(promise) {          \\n\\\n                promise._pushContext();                                      \\n\\\n                var ret = tryCatch(this.fn)([ThePassedArguments]);           \\n\\\n                promise._popContext();                                       \\n\\\n                if (ret === errorObj) {                                      \\n\\\n                    promise._rejectCallback(ret.e, false);                   \\n\\\n                } else {                                                     \\n\\\n                    promise._resolveCallback(ret);                           \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype.checkFulfillment = function(promise) {       \\n\\\n                var now = ++this.now;                                        \\n\\\n                if (now === [TheTotal]) {                                    \\n\\\n                    if (this.asyncNeeded) {                                  \\n\\\n                        async.invoke(this._callFunction, this, promise);     \\n\\\n                    } else {                                                 \\n\\\n                        this._callFunction(promise);                         \\n\\\n                    }                                                        \\n\\\n                                                                             \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype._resultCancelled = function() {              \\n\\\n                [CancellationCode]                                           \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            return [TheName];                                                \\n\\\n        }(tryCatch, errorObj, Promise, async);                               \\n\\\n        \";\n\n        code = code.replace(/\\[TheName\\]/g, name)\n            .replace(/\\[TheTotal\\]/g, total)\n            .replace(/\\[ThePassedArguments\\]/g, passedArguments)\n            .replace(/\\[TheProperties\\]/g, assignment)\n            .replace(/\\[CancellationCode\\]/g, cancellationCode);\n\n        return new Function(\"tryCatch\", \"errorObj\", \"Promise\", \"async\", code)\n                           (tryCatch, errorObj, Promise, async);\n    };\n\n    var holderClasses = [];\n    var thenCallbacks = [];\n    var promiseSetters = [];\n\n    for (var i = 0; i < 8; ++i) {\n        holderClasses.push(generateHolderClass(i + 1));\n        thenCallbacks.push(thenCallback(i + 1));\n        promiseSetters.push(promiseSetter(i + 1));\n    }\n\n    reject = function (reason) {\n        this._reject(reason);\n    };\n}}\n\nPromise.join = function () {\n    var last = arguments.length - 1;\n    var fn;\n    if (last > 0 && typeof arguments[last] === \"function\") {\n        fn = arguments[last];\n        if (!true) {\n            if (last <= 8 && canEvaluate) {\n                var ret = new Promise(INTERNAL);\n                ret._captureStackTrace();\n                var HolderClass = holderClasses[last - 1];\n                var holder = new HolderClass(fn);\n                var callbacks = thenCallbacks;\n\n                for (var i = 0; i < last; ++i) {\n                    var maybePromise = tryConvertToPromise(arguments[i], ret);\n                    if (maybePromise instanceof Promise) {\n                        maybePromise = maybePromise._target();\n                        var bitField = maybePromise._bitField;\n                        ;\n                        if (((bitField & 50397184) === 0)) {\n                            maybePromise._then(callbacks[i], reject,\n                                               undefined, ret, holder);\n                            promiseSetters[i](maybePromise, holder);\n                            holder.asyncNeeded = false;\n                        } else if (((bitField & 33554432) !== 0)) {\n                            callbacks[i].call(ret,\n                                              maybePromise._value(), holder);\n                        } else if (((bitField & 16777216) !== 0)) {\n                            ret._reject(maybePromise._reason());\n                        } else {\n                            ret._cancel();\n                        }\n                    } else {\n                        callbacks[i].call(ret, maybePromise, holder);\n                    }\n                }\n\n                if (!ret._isFateSealed()) {\n                    if (holder.asyncNeeded) {\n                        var domain = getDomain();\n                        if (domain !== null) {\n                            holder.fn = util.domainBind(domain, holder.fn);\n                        }\n                    }\n                    ret._setAsyncGuaranteed();\n                    ret._setOnCancel(holder);\n                }\n                return ret;\n            }\n        }\n    }\n    var args = [].slice.call(arguments);;\n    if (fn) args.pop();\n    var ret = new PromiseArray(args).promise();\n    return fn !== undefined ? ret.spread(fn) : ret;\n};\n\n};\n\n},{\"./util\":36}],18:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nfunction MappingPromiseArray(promises, fn, limit, _filter) {\n    this.constructor$(promises);\n    this._promise._captureStackTrace();\n    var domain = getDomain();\n    this._callback = domain === null ? fn : util.domainBind(domain, fn);\n    this._preservedValues = _filter === INTERNAL\n        ? new Array(this.length())\n        : null;\n    this._limit = limit;\n    this._inFlight = 0;\n    this._queue = [];\n    async.invoke(this._asyncInit, this, undefined);\n}\nutil.inherits(MappingPromiseArray, PromiseArray);\n\nMappingPromiseArray.prototype._asyncInit = function() {\n    this._init$(undefined, -2);\n};\n\nMappingPromiseArray.prototype._init = function () {};\n\nMappingPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var values = this._values;\n    var length = this.length();\n    var preservedValues = this._preservedValues;\n    var limit = this._limit;\n\n    if (index < 0) {\n        index = (index * -1) - 1;\n        values[index] = value;\n        if (limit >= 1) {\n            this._inFlight--;\n            this._drainQueue();\n            if (this._isResolved()) return true;\n        }\n    } else {\n        if (limit >= 1 && this._inFlight >= limit) {\n            values[index] = value;\n            this._queue.push(index);\n            return false;\n        }\n        if (preservedValues !== null) preservedValues[index] = value;\n\n        var promise = this._promise;\n        var callback = this._callback;\n        var receiver = promise._boundValue();\n        promise._pushContext();\n        var ret = tryCatch(callback).call(receiver, value, index, length);\n        var promiseCreated = promise._popContext();\n        debug.checkForgottenReturns(\n            ret,\n            promiseCreated,\n            preservedValues !== null ? \"Promise.filter\" : \"Promise.map\",\n            promise\n        );\n        if (ret === errorObj) {\n            this._reject(ret.e);\n            return true;\n        }\n\n        var maybePromise = tryConvertToPromise(ret, this._promise);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            var bitField = maybePromise._bitField;\n            ;\n            if (((bitField & 50397184) === 0)) {\n                if (limit >= 1) this._inFlight++;\n                values[index] = maybePromise;\n                maybePromise._proxy(this, (index + 1) * -1);\n                return false;\n            } else if (((bitField & 33554432) !== 0)) {\n                ret = maybePromise._value();\n            } else if (((bitField & 16777216) !== 0)) {\n                this._reject(maybePromise._reason());\n                return true;\n            } else {\n                this._cancel();\n                return true;\n            }\n        }\n        values[index] = ret;\n    }\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= length) {\n        if (preservedValues !== null) {\n            this._filter(values, preservedValues);\n        } else {\n            this._resolve(values);\n        }\n        return true;\n    }\n    return false;\n};\n\nMappingPromiseArray.prototype._drainQueue = function () {\n    var queue = this._queue;\n    var limit = this._limit;\n    var values = this._values;\n    while (queue.length > 0 && this._inFlight < limit) {\n        if (this._isResolved()) return;\n        var index = queue.pop();\n        this._promiseFulfilled(values[index], index);\n    }\n};\n\nMappingPromiseArray.prototype._filter = function (booleans, values) {\n    var len = values.length;\n    var ret = new Array(len);\n    var j = 0;\n    for (var i = 0; i < len; ++i) {\n        if (booleans[i]) ret[j++] = values[i];\n    }\n    ret.length = j;\n    this._resolve(ret);\n};\n\nMappingPromiseArray.prototype.preservedValues = function () {\n    return this._preservedValues;\n};\n\nfunction map(promises, fn, options, _filter) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n\n    var limit = 0;\n    if (options !== undefined) {\n        if (typeof options === \"object\" && options !== null) {\n            if (typeof options.concurrency !== \"number\") {\n                return Promise.reject(\n                    new TypeError(\"'concurrency' must be a number but it is \" +\n                                    util.classString(options.concurrency)));\n            }\n            limit = options.concurrency;\n        } else {\n            return Promise.reject(new TypeError(\n                            \"options argument must be an object but it is \" +\n                             util.classString(options)));\n        }\n    }\n    limit = typeof limit === \"number\" &&\n        isFinite(limit) && limit >= 1 ? limit : 0;\n    return new MappingPromiseArray(promises, fn, limit, _filter).promise();\n}\n\nPromise.prototype.map = function (fn, options) {\n    return map(this, fn, options, null);\n};\n\nPromise.map = function (promises, fn, options, _filter) {\n    return map(promises, fn, options, _filter);\n};\n\n\n};\n\n},{\"./util\":36}],19:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\n\nPromise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n        throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return function () {\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value = tryCatch(fn).apply(this, arguments);\n        var promiseCreated = ret._popContext();\n        debug.checkForgottenReturns(\n            value, promiseCreated, \"Promise.method\", ret);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._pushContext();\n    var value;\n    if (arguments.length > 1) {\n        debug.deprecated(\"calling Promise.try with more than 1 argument\");\n        var arg = arguments[1];\n        var ctx = arguments[2];\n        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)\n                                  : tryCatch(fn).call(ctx, arg);\n    } else {\n        value = tryCatch(fn)();\n    }\n    var promiseCreated = ret._popContext();\n    debug.checkForgottenReturns(\n        value, promiseCreated, \"Promise.try\", ret);\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.prototype._resolveFromSyncValue = function (value) {\n    if (value === util.errorObj) {\n        this._rejectCallback(value.e, false);\n    } else {\n        this._resolveCallback(value, true);\n    }\n};\n};\n\n},{\"./util\":36}],20:[function(_dereq_,module,exports){\n\"use strict\";\nvar util = _dereq_(\"./util\");\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar errors = _dereq_(\"./errors\");\nvar OperationalError = errors.OperationalError;\nvar es5 = _dereq_(\"./es5\");\n\nfunction isUntypedError(obj) {\n    return obj instanceof Error &&\n        es5.getPrototypeOf(obj) === Error.prototype;\n}\n\nvar rErrorKey = /^(?:name|message|stack|cause)$/;\nfunction wrapAsOperationalError(obj) {\n    var ret;\n    if (isUntypedError(obj)) {\n        ret = new OperationalError(obj);\n        ret.name = obj.name;\n        ret.message = obj.message;\n        ret.stack = obj.stack;\n        var keys = es5.keys(obj);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!rErrorKey.test(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    util.markAsOriginatingFromRejection(obj);\n    return obj;\n}\n\nfunction nodebackForPromise(promise, multiArgs) {\n    return function(err, value) {\n        if (promise === null) return;\n        if (err) {\n            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));\n            promise._attachExtraTrace(wrapped);\n            promise._reject(wrapped);\n        } else if (!multiArgs) {\n            promise._fulfill(value);\n        } else {\n            var args = [].slice.call(arguments, 1);;\n            promise._fulfill(args);\n        }\n        promise = null;\n    };\n}\n\nmodule.exports = nodebackForPromise;\n\n},{\"./errors\":12,\"./es5\":13,\"./util\":36}],21:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar util = _dereq_(\"./util\");\nvar async = Promise._async;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction spreadAdapter(val, nodeback) {\n    var promise = this;\n    if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);\n    var ret =\n        tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nfunction successAdapter(val, nodeback) {\n    var promise = this;\n    var receiver = promise._boundValue();\n    var ret = val === undefined\n        ? tryCatch(nodeback).call(receiver, null)\n        : tryCatch(nodeback).call(receiver, null, val);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\nfunction errorAdapter(reason, nodeback) {\n    var promise = this;\n    if (!reason) {\n        var newReason = new Error(reason + \"\");\n        newReason.cause = reason;\n        reason = newReason;\n    }\n    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nPromise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback,\n                                                                     options) {\n    if (typeof nodeback == \"function\") {\n        var adapter = successAdapter;\n        if (options !== undefined && Object(options).spread) {\n            adapter = spreadAdapter;\n        }\n        this._then(\n            adapter,\n            errorAdapter,\n            undefined,\n            this,\n            nodeback\n        );\n    }\n    return this;\n};\n};\n\n},{\"./util\":36}],22:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function() {\nvar makeSelfResolutionError = function () {\n    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar reflectHandler = function() {\n    return new Promise.PromiseInspection(this._target());\n};\nvar apiRejection = function(msg) {\n    return Promise.reject(new TypeError(msg));\n};\nfunction Proxyable() {}\nvar UNDEFINED_BINDING = {};\nvar util = _dereq_(\"./util\");\n\nvar getDomain;\nif (util.isNode) {\n    getDomain = function() {\n        var ret = process.domain;\n        if (ret === undefined) ret = null;\n        return ret;\n    };\n} else {\n    getDomain = function() {\n        return null;\n    };\n}\nutil.notEnumerableProp(Promise, \"_getDomain\", getDomain);\n\nvar es5 = _dereq_(\"./es5\");\nvar Async = _dereq_(\"./async\");\nvar async = new Async();\nes5.defineProperty(Promise, \"_async\", {value: async});\nvar errors = _dereq_(\"./errors\");\nvar TypeError = Promise.TypeError = errors.TypeError;\nPromise.RangeError = errors.RangeError;\nvar CancellationError = Promise.CancellationError = errors.CancellationError;\nPromise.TimeoutError = errors.TimeoutError;\nPromise.OperationalError = errors.OperationalError;\nPromise.RejectionError = errors.OperationalError;\nPromise.AggregateError = errors.AggregateError;\nvar INTERNAL = function(){};\nvar APPLY = {};\nvar NEXT_FILTER = {};\nvar tryConvertToPromise = _dereq_(\"./thenables\")(Promise, INTERNAL);\nvar PromiseArray =\n    _dereq_(\"./promise_array\")(Promise, INTERNAL,\n                               tryConvertToPromise, apiRejection, Proxyable);\nvar Context = _dereq_(\"./context\")(Promise);\n /*jshint unused:false*/\nvar createContext = Context.create;\nvar debug = _dereq_(\"./debuggability\")(Promise, Context);\nvar CapturedTrace = debug.CapturedTrace;\nvar PassThroughHandlerContext =\n    _dereq_(\"./finally\")(Promise, tryConvertToPromise, NEXT_FILTER);\nvar catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\nvar nodebackForPromise = _dereq_(\"./nodeback\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nfunction check(self, executor) {\n    if (self == null || self.constructor !== Promise) {\n        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (typeof executor !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(executor));\n    }\n\n}\n\nfunction Promise(executor) {\n    if (executor !== INTERNAL) {\n        check(this, executor);\n    }\n    this._bitField = 0;\n    this._fulfillmentHandler0 = undefined;\n    this._rejectionHandler0 = undefined;\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._resolveFromExecutor(executor);\n    this._promiseCreated();\n    this._fireEvent(\"promiseCreated\", this);\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) {\n    var len = arguments.length;\n    if (len > 1) {\n        var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return apiRejection(\"Catch statement predicate: \" +\n                    \"expecting an object but got \" + util.classString(item));\n            }\n        }\n        catchInstances.length = j;\n        fn = arguments[i];\n        return this.then(undefined, catchFilter(catchInstances, fn, this));\n    }\n    return this.then(undefined, fn);\n};\n\nPromise.prototype.reflect = function () {\n    return this._then(reflectHandler,\n        reflectHandler, undefined, this, undefined);\n};\n\nPromise.prototype.then = function (didFulfill, didReject) {\n    if (debug.warnings() && arguments.length > 0 &&\n        typeof didFulfill !== \"function\" &&\n        typeof didReject !== \"function\") {\n        var msg = \".then() only accepts functions but was passed: \" +\n                util.classString(didFulfill);\n        if (arguments.length > 1) {\n            msg += \", \" + util.classString(didReject);\n        }\n        this._warn(msg);\n    }\n    return this._then(didFulfill, didReject, undefined, undefined, undefined);\n};\n\nPromise.prototype.done = function (didFulfill, didReject) {\n    var promise =\n        this._then(didFulfill, didReject, undefined, undefined, undefined);\n    promise._setIsFinal();\n};\n\nPromise.prototype.spread = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    return this.all()._then(fn, undefined, undefined, APPLY, undefined);\n};\n\nPromise.prototype.toJSON = function () {\n    var ret = {\n        isFulfilled: false,\n        isRejected: false,\n        fulfillmentValue: undefined,\n        rejectionReason: undefined\n    };\n    if (this.isFulfilled()) {\n        ret.fulfillmentValue = this.value();\n        ret.isFulfilled = true;\n    } else if (this.isRejected()) {\n        ret.rejectionReason = this.reason();\n        ret.isRejected = true;\n    }\n    return ret;\n};\n\nPromise.prototype.all = function () {\n    if (arguments.length > 0) {\n        this._warn(\".all() was passed arguments but it does not take any\");\n    }\n    return new PromiseArray(this).promise();\n};\n\nPromise.prototype.error = function (fn) {\n    return this.caught(util.originatesFromRejection, fn);\n};\n\nPromise.getNewLibraryCopy = module.exports;\n\nPromise.is = function (val) {\n    return val instanceof Promise;\n};\n\nPromise.fromNode = Promise.fromCallback = function(fn) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs\n                                         : false;\n    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));\n    if (result === errorObj) {\n        ret._rejectCallback(result.e, true);\n    }\n    if (!ret._isFateSealed()) ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.all = function (promises) {\n    return new PromiseArray(promises).promise();\n};\n\nPromise.cast = function (obj) {\n    var ret = tryConvertToPromise(obj);\n    if (!(ret instanceof Promise)) {\n        ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._setFulfilled();\n        ret._rejectionHandler0 = obj;\n    }\n    return ret;\n};\n\nPromise.resolve = Promise.fulfilled = Promise.cast;\n\nPromise.reject = Promise.rejected = function (reason) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._rejectCallback(reason, true);\n    return ret;\n};\n\nPromise.setScheduler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return async.setScheduler(fn);\n};\n\nPromise.prototype._then = function (\n    didFulfill,\n    didReject,\n    _,    receiver,\n    internalData\n) {\n    var haveInternalData = internalData !== undefined;\n    var promise = haveInternalData ? internalData : new Promise(INTERNAL);\n    var target = this._target();\n    var bitField = target._bitField;\n\n    if (!haveInternalData) {\n        promise._propagateFrom(this, 3);\n        promise._captureStackTrace();\n        if (receiver === undefined &&\n            ((this._bitField & 2097152) !== 0)) {\n            if (!((bitField & 50397184) === 0)) {\n                receiver = this._boundValue();\n            } else {\n                receiver = target === this ? undefined : this._boundTo;\n            }\n        }\n        this._fireEvent(\"promiseChained\", this, promise);\n    }\n\n    var domain = getDomain();\n    if (!((bitField & 50397184) === 0)) {\n        var handler, value, settler = target._settlePromiseCtx;\n        if (((bitField & 33554432) !== 0)) {\n            value = target._rejectionHandler0;\n            handler = didFulfill;\n        } else if (((bitField & 16777216) !== 0)) {\n            value = target._fulfillmentHandler0;\n            handler = didReject;\n            target._unsetRejectionIsUnhandled();\n        } else {\n            settler = target._settlePromiseLateCancellationObserver;\n            value = new CancellationError(\"late cancellation observer\");\n            target._attachExtraTrace(value);\n            handler = didReject;\n        }\n\n        async.invoke(settler, target, {\n            handler: domain === null ? handler\n                : (typeof handler === \"function\" &&\n                    util.domainBind(domain, handler)),\n            promise: promise,\n            receiver: receiver,\n            value: value\n        });\n    } else {\n        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);\n    }\n\n    return promise;\n};\n\nPromise.prototype._length = function () {\n    return this._bitField & 65535;\n};\n\nPromise.prototype._isFateSealed = function () {\n    return (this._bitField & 117506048) !== 0;\n};\n\nPromise.prototype._isFollowing = function () {\n    return (this._bitField & 67108864) === 67108864;\n};\n\nPromise.prototype._setLength = function (len) {\n    this._bitField = (this._bitField & -65536) |\n        (len & 65535);\n};\n\nPromise.prototype._setFulfilled = function () {\n    this._bitField = this._bitField | 33554432;\n    this._fireEvent(\"promiseFulfilled\", this);\n};\n\nPromise.prototype._setRejected = function () {\n    this._bitField = this._bitField | 16777216;\n    this._fireEvent(\"promiseRejected\", this);\n};\n\nPromise.prototype._setFollowing = function () {\n    this._bitField = this._bitField | 67108864;\n    this._fireEvent(\"promiseResolved\", this);\n};\n\nPromise.prototype._setIsFinal = function () {\n    this._bitField = this._bitField | 4194304;\n};\n\nPromise.prototype._isFinal = function () {\n    return (this._bitField & 4194304) > 0;\n};\n\nPromise.prototype._unsetCancelled = function() {\n    this._bitField = this._bitField & (~65536);\n};\n\nPromise.prototype._setCancelled = function() {\n    this._bitField = this._bitField | 65536;\n    this._fireEvent(\"promiseCancelled\", this);\n};\n\nPromise.prototype._setWillBeCancelled = function() {\n    this._bitField = this._bitField | 8388608;\n};\n\nPromise.prototype._setAsyncGuaranteed = function() {\n    if (async.hasCustomScheduler()) return;\n    this._bitField = this._bitField | 134217728;\n};\n\nPromise.prototype._receiverAt = function (index) {\n    var ret = index === 0 ? this._receiver0 : this[\n            index * 4 - 4 + 3];\n    if (ret === UNDEFINED_BINDING) {\n        return undefined;\n    } else if (ret === undefined && this._isBound()) {\n        return this._boundValue();\n    }\n    return ret;\n};\n\nPromise.prototype._promiseAt = function (index) {\n    return this[\n            index * 4 - 4 + 2];\n};\n\nPromise.prototype._fulfillmentHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 0];\n};\n\nPromise.prototype._rejectionHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 1];\n};\n\nPromise.prototype._boundValue = function() {};\n\nPromise.prototype._migrateCallback0 = function (follower) {\n    var bitField = follower._bitField;\n    var fulfill = follower._fulfillmentHandler0;\n    var reject = follower._rejectionHandler0;\n    var promise = follower._promise0;\n    var receiver = follower._receiverAt(0);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._migrateCallbackAt = function (follower, index) {\n    var fulfill = follower._fulfillmentHandlerAt(index);\n    var reject = follower._rejectionHandlerAt(index);\n    var promise = follower._promiseAt(index);\n    var receiver = follower._receiverAt(index);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._addCallbacks = function (\n    fulfill,\n    reject,\n    promise,\n    receiver,\n    domain\n) {\n    var index = this._length();\n\n    if (index >= 65535 - 4) {\n        index = 0;\n        this._setLength(0);\n    }\n\n    if (index === 0) {\n        this._promise0 = promise;\n        this._receiver0 = receiver;\n        if (typeof fulfill === \"function\") {\n            this._fulfillmentHandler0 =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this._rejectionHandler0 =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    } else {\n        var base = index * 4 - 4;\n        this[base + 2] = promise;\n        this[base + 3] = receiver;\n        if (typeof fulfill === \"function\") {\n            this[base + 0] =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this[base + 1] =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    }\n    this._setLength(index + 1);\n    return index;\n};\n\nPromise.prototype._proxy = function (proxyable, arg) {\n    this._addCallbacks(undefined, undefined, arg, proxyable, null);\n};\n\nPromise.prototype._resolveCallback = function(value, shouldBind) {\n    if (((this._bitField & 117506048) !== 0)) return;\n    if (value === this)\n        return this._rejectCallback(makeSelfResolutionError(), false);\n    var maybePromise = tryConvertToPromise(value, this);\n    if (!(maybePromise instanceof Promise)) return this._fulfill(value);\n\n    if (shouldBind) this._propagateFrom(maybePromise, 2);\n\n    var promise = maybePromise._target();\n\n    if (promise === this) {\n        this._reject(makeSelfResolutionError());\n        return;\n    }\n\n    var bitField = promise._bitField;\n    if (((bitField & 50397184) === 0)) {\n        var len = this._length();\n        if (len > 0) promise._migrateCallback0(this);\n        for (var i = 1; i < len; ++i) {\n            promise._migrateCallbackAt(this, i);\n        }\n        this._setFollowing();\n        this._setLength(0);\n        this._setFollowee(promise);\n    } else if (((bitField & 33554432) !== 0)) {\n        this._fulfill(promise._value());\n    } else if (((bitField & 16777216) !== 0)) {\n        this._reject(promise._reason());\n    } else {\n        var reason = new CancellationError(\"late cancellation observer\");\n        promise._attachExtraTrace(reason);\n        this._reject(reason);\n    }\n};\n\nPromise.prototype._rejectCallback =\nfunction(reason, synchronous, ignoreNonErrorWarnings) {\n    var trace = util.ensureErrorObject(reason);\n    var hasStack = trace === reason;\n    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {\n        var message = \"a promise was rejected with a non-error: \" +\n            util.classString(reason);\n        this._warn(message, true);\n    }\n    this._attachExtraTrace(trace, synchronous ? hasStack : false);\n    this._reject(reason);\n};\n\nPromise.prototype._resolveFromExecutor = function (executor) {\n    if (executor === INTERNAL) return;\n    var promise = this;\n    this._captureStackTrace();\n    this._pushContext();\n    var synchronous = true;\n    var r = this._execute(executor, function(value) {\n        promise._resolveCallback(value);\n    }, function (reason) {\n        promise._rejectCallback(reason, synchronous);\n    });\n    synchronous = false;\n    this._popContext();\n\n    if (r !== undefined) {\n        promise._rejectCallback(r, true);\n    }\n};\n\nPromise.prototype._settlePromiseFromHandler = function (\n    handler, receiver, value, promise\n) {\n    var bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n    promise._pushContext();\n    var x;\n    if (receiver === APPLY) {\n        if (!value || typeof value.length !== \"number\") {\n            x = errorObj;\n            x.e = new TypeError(\"cannot .spread() a non-array: \" +\n                                    util.classString(value));\n        } else {\n            x = tryCatch(handler).apply(this._boundValue(), value);\n        }\n    } else {\n        x = tryCatch(handler).call(receiver, value);\n    }\n    var promiseCreated = promise._popContext();\n    bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n\n    if (x === NEXT_FILTER) {\n        promise._reject(value);\n    } else if (x === errorObj) {\n        promise._rejectCallback(x.e, false);\n    } else {\n        debug.checkForgottenReturns(x, promiseCreated, \"\",  promise, this);\n        promise._resolveCallback(x);\n    }\n};\n\nPromise.prototype._target = function() {\n    var ret = this;\n    while (ret._isFollowing()) ret = ret._followee();\n    return ret;\n};\n\nPromise.prototype._followee = function() {\n    return this._rejectionHandler0;\n};\n\nPromise.prototype._setFollowee = function(promise) {\n    this._rejectionHandler0 = promise;\n};\n\nPromise.prototype._settlePromise = function(promise, handler, receiver, value) {\n    var isPromise = promise instanceof Promise;\n    var bitField = this._bitField;\n    var asyncGuaranteed = ((bitField & 134217728) !== 0);\n    if (((bitField & 65536) !== 0)) {\n        if (isPromise) promise._invokeInternalOnCancel();\n\n        if (receiver instanceof PassThroughHandlerContext &&\n            receiver.isFinallyHandler()) {\n            receiver.cancelPromise = promise;\n            if (tryCatch(handler).call(receiver, value) === errorObj) {\n                promise._reject(errorObj.e);\n            }\n        } else if (handler === reflectHandler) {\n            promise._fulfill(reflectHandler.call(receiver));\n        } else if (receiver instanceof Proxyable) {\n            receiver._promiseCancelled(promise);\n        } else if (isPromise || promise instanceof PromiseArray) {\n            promise._cancel();\n        } else {\n            receiver.cancel();\n        }\n    } else if (typeof handler === \"function\") {\n        if (!isPromise) {\n            handler.call(receiver, value, promise);\n        } else {\n            if (asyncGuaranteed) promise._setAsyncGuaranteed();\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (receiver instanceof Proxyable) {\n        if (!receiver._isResolved()) {\n            if (((bitField & 33554432) !== 0)) {\n                receiver._promiseFulfilled(value, promise);\n            } else {\n                receiver._promiseRejected(value, promise);\n            }\n        }\n    } else if (isPromise) {\n        if (asyncGuaranteed) promise._setAsyncGuaranteed();\n        if (((bitField & 33554432) !== 0)) {\n            promise._fulfill(value);\n        } else {\n            promise._reject(value);\n        }\n    }\n};\n\nPromise.prototype._settlePromiseLateCancellationObserver = function(ctx) {\n    var handler = ctx.handler;\n    var promise = ctx.promise;\n    var receiver = ctx.receiver;\n    var value = ctx.value;\n    if (typeof handler === \"function\") {\n        if (!(promise instanceof Promise)) {\n            handler.call(receiver, value, promise);\n        } else {\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (promise instanceof Promise) {\n        promise._reject(value);\n    }\n};\n\nPromise.prototype._settlePromiseCtx = function(ctx) {\n    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);\n};\n\nPromise.prototype._settlePromise0 = function(handler, value, bitField) {\n    var promise = this._promise0;\n    var receiver = this._receiverAt(0);\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._settlePromise(promise, handler, receiver, value);\n};\n\nPromise.prototype._clearCallbackDataAtIndex = function(index) {\n    var base = index * 4 - 4;\n    this[base + 2] =\n    this[base + 3] =\n    this[base + 0] =\n    this[base + 1] = undefined;\n};\n\nPromise.prototype._fulfill = function (value) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    if (value === this) {\n        var err = makeSelfResolutionError();\n        this._attachExtraTrace(err);\n        return this._reject(err);\n    }\n    this._setFulfilled();\n    this._rejectionHandler0 = value;\n\n    if ((bitField & 65535) > 0) {\n        if (((bitField & 134217728) !== 0)) {\n            this._settlePromises();\n        } else {\n            async.settlePromises(this);\n        }\n    }\n};\n\nPromise.prototype._reject = function (reason) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    this._setRejected();\n    this._fulfillmentHandler0 = reason;\n\n    if (this._isFinal()) {\n        return async.fatalError(reason, util.isNode);\n    }\n\n    if ((bitField & 65535) > 0) {\n        async.settlePromises(this);\n    } else {\n        this._ensurePossibleRejectionHandled();\n    }\n};\n\nPromise.prototype._fulfillPromises = function (len, value) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._fulfillmentHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, value);\n    }\n};\n\nPromise.prototype._rejectPromises = function (len, reason) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._rejectionHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, reason);\n    }\n};\n\nPromise.prototype._settlePromises = function () {\n    var bitField = this._bitField;\n    var len = (bitField & 65535);\n\n    if (len > 0) {\n        if (((bitField & 16842752) !== 0)) {\n            var reason = this._fulfillmentHandler0;\n            this._settlePromise0(this._rejectionHandler0, reason, bitField);\n            this._rejectPromises(len, reason);\n        } else {\n            var value = this._rejectionHandler0;\n            this._settlePromise0(this._fulfillmentHandler0, value, bitField);\n            this._fulfillPromises(len, value);\n        }\n        this._setLength(0);\n    }\n    this._clearCancellationData();\n};\n\nPromise.prototype._settledValue = function() {\n    var bitField = this._bitField;\n    if (((bitField & 33554432) !== 0)) {\n        return this._rejectionHandler0;\n    } else if (((bitField & 16777216) !== 0)) {\n        return this._fulfillmentHandler0;\n    }\n};\n\nfunction deferResolve(v) {this.promise._resolveCallback(v);}\nfunction deferReject(v) {this.promise._rejectCallback(v, false);}\n\nPromise.defer = Promise.pending = function() {\n    debug.deprecated(\"Promise.defer\", \"new Promise\");\n    var promise = new Promise(INTERNAL);\n    return {\n        promise: promise,\n        resolve: deferResolve,\n        reject: deferReject\n    };\n};\n\nutil.notEnumerableProp(Promise,\n                       \"_makeSelfResolutionError\",\n                       makeSelfResolutionError);\n\n_dereq_(\"./method\")(Promise, INTERNAL, tryConvertToPromise, apiRejection,\n    debug);\n_dereq_(\"./bind\")(Promise, INTERNAL, tryConvertToPromise, debug);\n_dereq_(\"./cancel\")(Promise, PromiseArray, apiRejection, debug);\n_dereq_(\"./direct_resolve\")(Promise);\n_dereq_(\"./synchronous_inspection\")(Promise);\n_dereq_(\"./join\")(\n    Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);\nPromise.Promise = Promise;\nPromise.version = \"3.5.0\";\n_dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n_dereq_('./call_get.js')(Promise);\n_dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);\n_dereq_('./timers.js')(Promise, INTERNAL, debug);\n_dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);\n_dereq_('./nodeify.js')(Promise);\n_dereq_('./promisify.js')(Promise, INTERNAL);\n_dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);\n_dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);\n_dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n_dereq_('./settle.js')(Promise, PromiseArray, debug);\n_dereq_('./some.js')(Promise, PromiseArray, apiRejection);\n_dereq_('./filter.js')(Promise, INTERNAL);\n_dereq_('./each.js')(Promise, INTERNAL);\n_dereq_('./any.js')(Promise);\n                                                         \n    util.toFastProperties(Promise);                                          \n    util.toFastProperties(Promise.prototype);                                \n    function fillTypes(value) {                                              \n        var p = new Promise(INTERNAL);                                       \n        p._fulfillmentHandler0 = value;                                      \n        p._rejectionHandler0 = value;                                        \n        p._promise0 = value;                                                 \n        p._receiver0 = value;                                                \n    }                                                                        \n    // Complete slack tracking, opt out of field-type tracking and           \n    // stabilize map                                                         \n    fillTypes({a: 1});                                                       \n    fillTypes({b: 2});                                                       \n    fillTypes({c: 3});                                                       \n    fillTypes(1);                                                            \n    fillTypes(function(){});                                                 \n    fillTypes(undefined);                                                    \n    fillTypes(false);                                                        \n    fillTypes(new Promise(INTERNAL));                                        \n    debug.setBounds(Async.firstLineError, util.lastLineError);               \n    return Promise;                                                          \n\n};\n\n},{\"./any.js\":1,\"./async\":2,\"./bind\":3,\"./call_get.js\":5,\"./cancel\":6,\"./catch_filter\":7,\"./context\":8,\"./debuggability\":9,\"./direct_resolve\":10,\"./each.js\":11,\"./errors\":12,\"./es5\":13,\"./filter.js\":14,\"./finally\":15,\"./generators.js\":16,\"./join\":17,\"./map.js\":18,\"./method\":19,\"./nodeback\":20,\"./nodeify.js\":21,\"./promise_array\":23,\"./promisify.js\":24,\"./props.js\":25,\"./race.js\":27,\"./reduce.js\":28,\"./settle.js\":30,\"./some.js\":31,\"./synchronous_inspection\":32,\"./thenables\":33,\"./timers.js\":34,\"./using.js\":35,\"./util\":36}],23:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise,\n    apiRejection, Proxyable) {\nvar util = _dereq_(\"./util\");\nvar isArray = util.isArray;\n\nfunction toResolutionValue(val) {\n    switch(val) {\n    case -2: return [];\n    case -3: return {};\n    case -6: return new Map();\n    }\n}\n\nfunction PromiseArray(values) {\n    var promise = this._promise = new Promise(INTERNAL);\n    if (values instanceof Promise) {\n        promise._propagateFrom(values, 3);\n    }\n    promise._setOnCancel(this);\n    this._values = values;\n    this._length = 0;\n    this._totalResolved = 0;\n    this._init(undefined, -2);\n}\nutil.inherits(PromiseArray, Proxyable);\n\nPromiseArray.prototype.length = function () {\n    return this._length;\n};\n\nPromiseArray.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {\n    var values = tryConvertToPromise(this._values, this._promise);\n    if (values instanceof Promise) {\n        values = values._target();\n        var bitField = values._bitField;\n        ;\n        this._values = values;\n\n        if (((bitField & 50397184) === 0)) {\n            this._promise._setAsyncGuaranteed();\n            return values._then(\n                init,\n                this._reject,\n                undefined,\n                this,\n                resolveValueIfEmpty\n           );\n        } else if (((bitField & 33554432) !== 0)) {\n            values = values._value();\n        } else if (((bitField & 16777216) !== 0)) {\n            return this._reject(values._reason());\n        } else {\n            return this._cancel();\n        }\n    }\n    values = util.asArray(values);\n    if (values === null) {\n        var err = apiRejection(\n            \"expecting an array or an iterable object but got \" + util.classString(values)).reason();\n        this._promise._rejectCallback(err, false);\n        return;\n    }\n\n    if (values.length === 0) {\n        if (resolveValueIfEmpty === -5) {\n            this._resolveEmptyArray();\n        }\n        else {\n            this._resolve(toResolutionValue(resolveValueIfEmpty));\n        }\n        return;\n    }\n    this._iterate(values);\n};\n\nPromiseArray.prototype._iterate = function(values) {\n    var len = this.getActualLength(values.length);\n    this._length = len;\n    this._values = this.shouldCopyValues() ? new Array(len) : this._values;\n    var result = this._promise;\n    var isResolved = false;\n    var bitField = null;\n    for (var i = 0; i < len; ++i) {\n        var maybePromise = tryConvertToPromise(values[i], result);\n\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            bitField = maybePromise._bitField;\n        } else {\n            bitField = null;\n        }\n\n        if (isResolved) {\n            if (bitField !== null) {\n                maybePromise.suppressUnhandledRejections();\n            }\n        } else if (bitField !== null) {\n            if (((bitField & 50397184) === 0)) {\n                maybePromise._proxy(this, i);\n                this._values[i] = maybePromise;\n            } else if (((bitField & 33554432) !== 0)) {\n                isResolved = this._promiseFulfilled(maybePromise._value(), i);\n            } else if (((bitField & 16777216) !== 0)) {\n                isResolved = this._promiseRejected(maybePromise._reason(), i);\n            } else {\n                isResolved = this._promiseCancelled(i);\n            }\n        } else {\n            isResolved = this._promiseFulfilled(maybePromise, i);\n        }\n    }\n    if (!isResolved) result._setAsyncGuaranteed();\n};\n\nPromiseArray.prototype._isResolved = function () {\n    return this._values === null;\n};\n\nPromiseArray.prototype._resolve = function (value) {\n    this._values = null;\n    this._promise._fulfill(value);\n};\n\nPromiseArray.prototype._cancel = function() {\n    if (this._isResolved() || !this._promise._isCancellable()) return;\n    this._values = null;\n    this._promise._cancel();\n};\n\nPromiseArray.prototype._reject = function (reason) {\n    this._values = null;\n    this._promise._rejectCallback(reason, false);\n};\n\nPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nPromiseArray.prototype._promiseCancelled = function() {\n    this._cancel();\n    return true;\n};\n\nPromiseArray.prototype._promiseRejected = function (reason) {\n    this._totalResolved++;\n    this._reject(reason);\n    return true;\n};\n\nPromiseArray.prototype._resultCancelled = function() {\n    if (this._isResolved()) return;\n    var values = this._values;\n    this._cancel();\n    if (values instanceof Promise) {\n        values.cancel();\n    } else {\n        for (var i = 0; i < values.length; ++i) {\n            if (values[i] instanceof Promise) {\n                values[i].cancel();\n            }\n        }\n    }\n};\n\nPromiseArray.prototype.shouldCopyValues = function () {\n    return true;\n};\n\nPromiseArray.prototype.getActualLength = function (len) {\n    return len;\n};\n\nreturn PromiseArray;\n};\n\n},{\"./util\":36}],24:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar THIS = {};\nvar util = _dereq_(\"./util\");\nvar nodebackForPromise = _dereq_(\"./nodeback\");\nvar withAppended = util.withAppended;\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar canEvaluate = util.canEvaluate;\nvar TypeError = _dereq_(\"./errors\").TypeError;\nvar defaultSuffix = \"Async\";\nvar defaultPromisified = {__isPromisified__: true};\nvar noCopyProps = [\n    \"arity\",    \"length\",\n    \"name\",\n    \"arguments\",\n    \"caller\",\n    \"callee\",\n    \"prototype\",\n    \"__isPromisified__\"\n];\nvar noCopyPropsPattern = new RegExp(\"^(?:\" + noCopyProps.join(\"|\") + \")$\");\n\nvar defaultFilter = function(name) {\n    return util.isIdentifier(name) &&\n        name.charAt(0) !== \"_\" &&\n        name !== \"constructor\";\n};\n\nfunction propsFilter(key) {\n    return !noCopyPropsPattern.test(key);\n}\n\nfunction isPromisified(fn) {\n    try {\n        return fn.__isPromisified__ === true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\nfunction hasPromisified(obj, key, suffix) {\n    var val = util.getDataPropertyOrDefault(obj, key + suffix,\n                                            defaultPromisified);\n    return val ? isPromisified(val) : false;\n}\nfunction checkValid(ret, suffix, suffixRegexp) {\n    for (var i = 0; i < ret.length; i += 2) {\n        var key = ret[i];\n        if (suffixRegexp.test(key)) {\n            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, \"\");\n            for (var j = 0; j < ret.length; j += 2) {\n                if (ret[j] === keyWithoutAsyncSuffix) {\n                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\"\n                        .replace(\"%s\", suffix));\n                }\n            }\n        }\n    }\n}\n\nfunction promisifiableMethods(obj, suffix, suffixRegexp, filter) {\n    var keys = util.inheritedDataKeys(obj);\n    var ret = [];\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var value = obj[key];\n        var passesDefaultFilter = filter === defaultFilter\n            ? true : defaultFilter(key, value, obj);\n        if (typeof value === \"function\" &&\n            !isPromisified(value) &&\n            !hasPromisified(obj, key, suffix) &&\n            filter(key, value, obj, passesDefaultFilter)) {\n            ret.push(key, value);\n        }\n    }\n    checkValid(ret, suffix, suffixRegexp);\n    return ret;\n}\n\nvar escapeIdentRegex = function(str) {\n    return str.replace(/([$])/, \"\\\\$\");\n};\n\nvar makeNodePromisifiedEval;\nif (!true) {\nvar switchCaseArgumentOrder = function(likelyArgumentCount) {\n    var ret = [likelyArgumentCount];\n    var min = Math.max(0, likelyArgumentCount - 1 - 3);\n    for(var i = likelyArgumentCount - 1; i >= min; --i) {\n        ret.push(i);\n    }\n    for(var i = likelyArgumentCount + 1; i <= 3; ++i) {\n        ret.push(i);\n    }\n    return ret;\n};\n\nvar argumentSequence = function(argumentCount) {\n    return util.filledRange(argumentCount, \"_arg\", \"\");\n};\n\nvar parameterDeclaration = function(parameterCount) {\n    return util.filledRange(\n        Math.max(parameterCount, 3), \"_arg\", \"\");\n};\n\nvar parameterCount = function(fn) {\n    if (typeof fn.length === \"number\") {\n        return Math.max(Math.min(fn.length, 1023 + 1), 0);\n    }\n    return 0;\n};\n\nmakeNodePromisifiedEval =\nfunction(callback, receiver, originalName, fn, _, multiArgs) {\n    var newParameterCount = Math.max(0, parameterCount(fn) - 1);\n    var argumentOrder = switchCaseArgumentOrder(newParameterCount);\n    var shouldProxyThis = typeof callback === \"string\" || receiver === THIS;\n\n    function generateCallForArgumentCount(count) {\n        var args = argumentSequence(count).join(\", \");\n        var comma = count > 0 ? \", \" : \"\";\n        var ret;\n        if (shouldProxyThis) {\n            ret = \"ret = callback.call(this, {{args}}, nodeback); break;\\n\";\n        } else {\n            ret = receiver === undefined\n                ? \"ret = callback({{args}}, nodeback); break;\\n\"\n                : \"ret = callback.call(receiver, {{args}}, nodeback); break;\\n\";\n        }\n        return ret.replace(\"{{args}}\", args).replace(\", \", comma);\n    }\n\n    function generateArgumentSwitchCase() {\n        var ret = \"\";\n        for (var i = 0; i < argumentOrder.length; ++i) {\n            ret += \"case \" + argumentOrder[i] +\":\" +\n                generateCallForArgumentCount(argumentOrder[i]);\n        }\n\n        ret += \"                                                             \\n\\\n        default:                                                             \\n\\\n            var args = new Array(len + 1);                                   \\n\\\n            var i = 0;                                                       \\n\\\n            for (var i = 0; i < len; ++i) {                                  \\n\\\n               args[i] = arguments[i];                                       \\n\\\n            }                                                                \\n\\\n            args[i] = nodeback;                                              \\n\\\n            [CodeForCall]                                                    \\n\\\n            break;                                                           \\n\\\n        \".replace(\"[CodeForCall]\", (shouldProxyThis\n                                ? \"ret = callback.apply(this, args);\\n\"\n                                : \"ret = callback.apply(receiver, args);\\n\"));\n        return ret;\n    }\n\n    var getFunctionCode = typeof callback === \"string\"\n                                ? (\"this != null ? this['\"+callback+\"'] : fn\")\n                                : \"fn\";\n    var body = \"'use strict';                                                \\n\\\n        var ret = function (Parameters) {                                    \\n\\\n            'use strict';                                                    \\n\\\n            var len = arguments.length;                                      \\n\\\n            var promise = new Promise(INTERNAL);                             \\n\\\n            promise._captureStackTrace();                                    \\n\\\n            var nodeback = nodebackForPromise(promise, \" + multiArgs + \");   \\n\\\n            var ret;                                                         \\n\\\n            var callback = tryCatch([GetFunctionCode]);                      \\n\\\n            switch(len) {                                                    \\n\\\n                [CodeForSwitchCase]                                          \\n\\\n            }                                                                \\n\\\n            if (ret === errorObj) {                                          \\n\\\n                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\\n\\\n            }                                                                \\n\\\n            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \\n\\\n            return promise;                                                  \\n\\\n        };                                                                   \\n\\\n        notEnumerableProp(ret, '__isPromisified__', true);                   \\n\\\n        return ret;                                                          \\n\\\n    \".replace(\"[CodeForSwitchCase]\", generateArgumentSwitchCase())\n        .replace(\"[GetFunctionCode]\", getFunctionCode);\n    body = body.replace(\"Parameters\", parameterDeclaration(newParameterCount));\n    return new Function(\"Promise\",\n                        \"fn\",\n                        \"receiver\",\n                        \"withAppended\",\n                        \"maybeWrapAsError\",\n                        \"nodebackForPromise\",\n                        \"tryCatch\",\n                        \"errorObj\",\n                        \"notEnumerableProp\",\n                        \"INTERNAL\",\n                        body)(\n                    Promise,\n                    fn,\n                    receiver,\n                    withAppended,\n                    maybeWrapAsError,\n                    nodebackForPromise,\n                    util.tryCatch,\n                    util.errorObj,\n                    util.notEnumerableProp,\n                    INTERNAL);\n};\n}\n\nfunction makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {\n    var defaultThis = (function() {return this;})();\n    var method = callback;\n    if (typeof method === \"string\") {\n        callback = fn;\n    }\n    function promisified() {\n        var _receiver = receiver;\n        if (receiver === THIS) _receiver = this;\n        var promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n        var cb = typeof method === \"string\" && this !== defaultThis\n            ? this[method] : callback;\n        var fn = nodebackForPromise(promise, multiArgs);\n        try {\n            cb.apply(_receiver, withAppended(arguments, fn));\n        } catch(e) {\n            promise._rejectCallback(maybeWrapAsError(e), true, true);\n        }\n        if (!promise._isFateSealed()) promise._setAsyncGuaranteed();\n        return promise;\n    }\n    util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n    return promisified;\n}\n\nvar makeNodePromisified = canEvaluate\n    ? makeNodePromisifiedEval\n    : makeNodePromisifiedClosure;\n\nfunction promisifyAll(obj, suffix, filter, promisifier, multiArgs) {\n    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + \"$\");\n    var methods =\n        promisifiableMethods(obj, suffix, suffixRegexp, filter);\n\n    for (var i = 0, len = methods.length; i < len; i+= 2) {\n        var key = methods[i];\n        var fn = methods[i+1];\n        var promisifiedKey = key + suffix;\n        if (promisifier === makeNodePromisified) {\n            obj[promisifiedKey] =\n                makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);\n        } else {\n            var promisified = promisifier(fn, function() {\n                return makeNodePromisified(key, THIS, key,\n                                           fn, suffix, multiArgs);\n            });\n            util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n            obj[promisifiedKey] = promisified;\n        }\n    }\n    util.toFastProperties(obj);\n    return obj;\n}\n\nfunction promisify(callback, receiver, multiArgs) {\n    return makeNodePromisified(callback, receiver, undefined,\n                                callback, null, multiArgs);\n}\n\nPromise.promisify = function (fn, options) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    if (isPromisified(fn)) {\n        return fn;\n    }\n    options = Object(options);\n    var receiver = options.context === undefined ? THIS : options.context;\n    var multiArgs = !!options.multiArgs;\n    var ret = promisify(fn, receiver, multiArgs);\n    util.copyDescriptors(fn, ret, propsFilter);\n    return ret;\n};\n\nPromise.promisifyAll = function (target, options) {\n    if (typeof target !== \"function\" && typeof target !== \"object\") {\n        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    options = Object(options);\n    var multiArgs = !!options.multiArgs;\n    var suffix = options.suffix;\n    if (typeof suffix !== \"string\") suffix = defaultSuffix;\n    var filter = options.filter;\n    if (typeof filter !== \"function\") filter = defaultFilter;\n    var promisifier = options.promisifier;\n    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;\n\n    if (!util.isIdentifier(suffix)) {\n        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n\n    var keys = util.inheritedDataKeys(target);\n    for (var i = 0; i < keys.length; ++i) {\n        var value = target[keys[i]];\n        if (keys[i] !== \"constructor\" &&\n            util.isClass(value)) {\n            promisifyAll(value.prototype, suffix, filter, promisifier,\n                multiArgs);\n            promisifyAll(value, suffix, filter, promisifier, multiArgs);\n        }\n    }\n\n    return promisifyAll(target, suffix, filter, promisifier, multiArgs);\n};\n};\n\n\n},{\"./errors\":12,\"./nodeback\":20,\"./util\":36}],25:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, PromiseArray, tryConvertToPromise, apiRejection) {\nvar util = _dereq_(\"./util\");\nvar isObject = util.isObject;\nvar es5 = _dereq_(\"./es5\");\nvar Es6Map;\nif (typeof Map === \"function\") Es6Map = Map;\n\nvar mapToEntries = (function() {\n    var index = 0;\n    var size = 0;\n\n    function extractEntry(value, key) {\n        this[index] = value;\n        this[index + size] = key;\n        index++;\n    }\n\n    return function mapToEntries(map) {\n        size = map.size;\n        index = 0;\n        var ret = new Array(map.size * 2);\n        map.forEach(extractEntry, ret);\n        return ret;\n    };\n})();\n\nvar entriesToMap = function(entries) {\n    var ret = new Es6Map();\n    var length = entries.length / 2 | 0;\n    for (var i = 0; i < length; ++i) {\n        var key = entries[length + i];\n        var value = entries[i];\n        ret.set(key, value);\n    }\n    return ret;\n};\n\nfunction PropertiesPromiseArray(obj) {\n    var isMap = false;\n    var entries;\n    if (Es6Map !== undefined && obj instanceof Es6Map) {\n        entries = mapToEntries(obj);\n        isMap = true;\n    } else {\n        var keys = es5.keys(obj);\n        var len = keys.length;\n        entries = new Array(len * 2);\n        for (var i = 0; i < len; ++i) {\n            var key = keys[i];\n            entries[i] = obj[key];\n            entries[i + len] = key;\n        }\n    }\n    this.constructor$(entries);\n    this._isMap = isMap;\n    this._init$(undefined, isMap ? -6 : -3);\n}\nutil.inherits(PropertiesPromiseArray, PromiseArray);\n\nPropertiesPromiseArray.prototype._init = function () {};\n\nPropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        var val;\n        if (this._isMap) {\n            val = entriesToMap(this._values);\n        } else {\n            val = {};\n            var keyOffset = this.length();\n            for (var i = 0, len = this.length(); i < len; ++i) {\n                val[this._values[i + keyOffset]] = this._values[i];\n            }\n        }\n        this._resolve(val);\n        return true;\n    }\n    return false;\n};\n\nPropertiesPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nPropertiesPromiseArray.prototype.getActualLength = function (len) {\n    return len >> 1;\n};\n\nfunction props(promises) {\n    var ret;\n    var castValue = tryConvertToPromise(promises);\n\n    if (!isObject(castValue)) {\n        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    } else if (castValue instanceof Promise) {\n        ret = castValue._then(\n            Promise.props, undefined, undefined, undefined, undefined);\n    } else {\n        ret = new PropertiesPromiseArray(castValue).promise();\n    }\n\n    if (castValue instanceof Promise) {\n        ret._propagateFrom(castValue, 2);\n    }\n    return ret;\n}\n\nPromise.prototype.props = function () {\n    return props(this);\n};\n\nPromise.props = function (promises) {\n    return props(promises);\n};\n};\n\n},{\"./es5\":13,\"./util\":36}],26:[function(_dereq_,module,exports){\n\"use strict\";\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n        src[j + srcIndex] = void 0;\n    }\n}\n\nfunction Queue(capacity) {\n    this._capacity = capacity;\n    this._length = 0;\n    this._front = 0;\n}\n\nQueue.prototype._willBeOverCapacity = function (size) {\n    return this._capacity < size;\n};\n\nQueue.prototype._pushOne = function (arg) {\n    var length = this.length();\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = arg;\n    this._length = length + 1;\n};\n\nQueue.prototype.push = function (fn, receiver, arg) {\n    var length = this.length() + 3;\n    if (this._willBeOverCapacity(length)) {\n        this._pushOne(fn);\n        this._pushOne(receiver);\n        this._pushOne(arg);\n        return;\n    }\n    var j = this._front + length - 3;\n    this._checkCapacity(length);\n    var wrapMask = this._capacity - 1;\n    this[(j + 0) & wrapMask] = fn;\n    this[(j + 1) & wrapMask] = receiver;\n    this[(j + 2) & wrapMask] = arg;\n    this._length = length;\n};\n\nQueue.prototype.shift = function () {\n    var front = this._front,\n        ret = this[front];\n\n    this[front] = undefined;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length--;\n    return ret;\n};\n\nQueue.prototype.length = function () {\n    return this._length;\n};\n\nQueue.prototype._checkCapacity = function (size) {\n    if (this._capacity < size) {\n        this._resizeTo(this._capacity << 1);\n    }\n};\n\nQueue.prototype._resizeTo = function (capacity) {\n    var oldCapacity = this._capacity;\n    this._capacity = capacity;\n    var front = this._front;\n    var length = this._length;\n    var moveItemsCount = (front + length) & (oldCapacity - 1);\n    arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n};\n\nmodule.exports = Queue;\n\n},{}],27:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, INTERNAL, tryConvertToPromise, apiRejection) {\nvar util = _dereq_(\"./util\");\n\nvar raceLater = function (promise) {\n    return promise.then(function(array) {\n        return race(array, promise);\n    });\n};\n\nfunction race(promises, parent) {\n    var maybePromise = tryConvertToPromise(promises);\n\n    if (maybePromise instanceof Promise) {\n        return raceLater(maybePromise);\n    } else {\n        promises = util.asArray(promises);\n        if (promises === null)\n            return apiRejection(\"expecting an array or an iterable object but got \" + util.classString(promises));\n    }\n\n    var ret = new Promise(INTERNAL);\n    if (parent !== undefined) {\n        ret._propagateFrom(parent, 3);\n    }\n    var fulfill = ret._fulfill;\n    var reject = ret._reject;\n    for (var i = 0, len = promises.length; i < len; ++i) {\n        var val = promises[i];\n\n        if (val === undefined && !(i in promises)) {\n            continue;\n        }\n\n        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);\n    }\n    return ret;\n}\n\nPromise.race = function (promises) {\n    return race(promises, undefined);\n};\n\nPromise.prototype.race = function () {\n    return race(this, undefined);\n};\n\n};\n\n},{\"./util\":36}],28:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\n\nfunction ReductionPromiseArray(promises, fn, initialValue, _each) {\n    this.constructor$(promises);\n    var domain = getDomain();\n    this._fn = domain === null ? fn : util.domainBind(domain, fn);\n    if (initialValue !== undefined) {\n        initialValue = Promise.resolve(initialValue);\n        initialValue._attachCancellationCallback(this);\n    }\n    this._initialValue = initialValue;\n    this._currentCancellable = null;\n    if(_each === INTERNAL) {\n        this._eachValues = Array(this._length);\n    } else if (_each === 0) {\n        this._eachValues = null;\n    } else {\n        this._eachValues = undefined;\n    }\n    this._promise._captureStackTrace();\n    this._init$(undefined, -5);\n}\nutil.inherits(ReductionPromiseArray, PromiseArray);\n\nReductionPromiseArray.prototype._gotAccum = function(accum) {\n    if (this._eachValues !== undefined && \n        this._eachValues !== null && \n        accum !== INTERNAL) {\n        this._eachValues.push(accum);\n    }\n};\n\nReductionPromiseArray.prototype._eachComplete = function(value) {\n    if (this._eachValues !== null) {\n        this._eachValues.push(value);\n    }\n    return this._eachValues;\n};\n\nReductionPromiseArray.prototype._init = function() {};\n\nReductionPromiseArray.prototype._resolveEmptyArray = function() {\n    this._resolve(this._eachValues !== undefined ? this._eachValues\n                                                 : this._initialValue);\n};\n\nReductionPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nReductionPromiseArray.prototype._resolve = function(value) {\n    this._promise._resolveCallback(value);\n    this._values = null;\n};\n\nReductionPromiseArray.prototype._resultCancelled = function(sender) {\n    if (sender === this._initialValue) return this._cancel();\n    if (this._isResolved()) return;\n    this._resultCancelled$();\n    if (this._currentCancellable instanceof Promise) {\n        this._currentCancellable.cancel();\n    }\n    if (this._initialValue instanceof Promise) {\n        this._initialValue.cancel();\n    }\n};\n\nReductionPromiseArray.prototype._iterate = function (values) {\n    this._values = values;\n    var value;\n    var i;\n    var length = values.length;\n    if (this._initialValue !== undefined) {\n        value = this._initialValue;\n        i = 0;\n    } else {\n        value = Promise.resolve(values[0]);\n        i = 1;\n    }\n\n    this._currentCancellable = value;\n\n    if (!value.isRejected()) {\n        for (; i < length; ++i) {\n            var ctx = {\n                accum: null,\n                value: values[i],\n                index: i,\n                length: length,\n                array: this\n            };\n            value = value._then(gotAccum, undefined, undefined, ctx, undefined);\n        }\n    }\n\n    if (this._eachValues !== undefined) {\n        value = value\n            ._then(this._eachComplete, undefined, undefined, this, undefined);\n    }\n    value._then(completed, completed, undefined, value, this);\n};\n\nPromise.prototype.reduce = function (fn, initialValue) {\n    return reduce(this, fn, initialValue, null);\n};\n\nPromise.reduce = function (promises, fn, initialValue, _each) {\n    return reduce(promises, fn, initialValue, _each);\n};\n\nfunction completed(valueOrReason, array) {\n    if (this.isFulfilled()) {\n        array._resolve(valueOrReason);\n    } else {\n        array._reject(valueOrReason);\n    }\n}\n\nfunction reduce(promises, fn, initialValue, _each) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);\n    return array.promise();\n}\n\nfunction gotAccum(accum) {\n    this.accum = accum;\n    this.array._gotAccum(accum);\n    var value = tryConvertToPromise(this.value, this.array._promise);\n    if (value instanceof Promise) {\n        this.array._currentCancellable = value;\n        return value._then(gotValue, undefined, undefined, this, undefined);\n    } else {\n        return gotValue.call(this, value);\n    }\n}\n\nfunction gotValue(value) {\n    var array = this.array;\n    var promise = array._promise;\n    var fn = tryCatch(array._fn);\n    promise._pushContext();\n    var ret;\n    if (array._eachValues !== undefined) {\n        ret = fn.call(promise._boundValue(), value, this.index, this.length);\n    } else {\n        ret = fn.call(promise._boundValue(),\n                              this.accum, value, this.index, this.length);\n    }\n    if (ret instanceof Promise) {\n        array._currentCancellable = ret;\n    }\n    var promiseCreated = promise._popContext();\n    debug.checkForgottenReturns(\n        ret,\n        promiseCreated,\n        array._eachValues !== undefined ? \"Promise.each\" : \"Promise.reduce\",\n        promise\n    );\n    return ret;\n}\n};\n\n},{\"./util\":36}],29:[function(_dereq_,module,exports){\n\"use strict\";\nvar util = _dereq_(\"./util\");\nvar schedule;\nvar noAsyncScheduler = function() {\n    throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar NativePromise = util.getNativePromise();\nif (util.isNode && typeof MutationObserver === \"undefined\") {\n    var GlobalSetImmediate = global.setImmediate;\n    var ProcessNextTick = process.nextTick;\n    schedule = util.isRecentNode\n                ? function(fn) { GlobalSetImmediate.call(global, fn); }\n                : function(fn) { ProcessNextTick.call(process, fn); };\n} else if (typeof NativePromise === \"function\" &&\n           typeof NativePromise.resolve === \"function\") {\n    var nativePromise = NativePromise.resolve();\n    schedule = function(fn) {\n        nativePromise.then(fn);\n    };\n} else if ((typeof MutationObserver !== \"undefined\") &&\n          !(typeof window !== \"undefined\" &&\n            window.navigator &&\n            (window.navigator.standalone || window.cordova))) {\n    schedule = (function() {\n        var div = document.createElement(\"div\");\n        var opts = {attributes: true};\n        var toggleScheduled = false;\n        var div2 = document.createElement(\"div\");\n        var o2 = new MutationObserver(function() {\n            div.classList.toggle(\"foo\");\n            toggleScheduled = false;\n        });\n        o2.observe(div2, opts);\n\n        var scheduleToggle = function() {\n            if (toggleScheduled) return;\n            toggleScheduled = true;\n            div2.classList.toggle(\"foo\");\n        };\n\n        return function schedule(fn) {\n            var o = new MutationObserver(function() {\n                o.disconnect();\n                fn();\n            });\n            o.observe(div, opts);\n            scheduleToggle();\n        };\n    })();\n} else if (typeof setImmediate !== \"undefined\") {\n    schedule = function (fn) {\n        setImmediate(fn);\n    };\n} else if (typeof setTimeout !== \"undefined\") {\n    schedule = function (fn) {\n        setTimeout(fn, 0);\n    };\n} else {\n    schedule = noAsyncScheduler;\n}\nmodule.exports = schedule;\n\n},{\"./util\":36}],30:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\n    function(Promise, PromiseArray, debug) {\nvar PromiseInspection = Promise.PromiseInspection;\nvar util = _dereq_(\"./util\");\n\nfunction SettledPromiseArray(values) {\n    this.constructor$(values);\n}\nutil.inherits(SettledPromiseArray, PromiseArray);\n\nSettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n    this._values[index] = inspection;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nSettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 33554432;\n    ret._settledValueField = value;\n    return this._promiseResolved(index, ret);\n};\nSettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 16777216;\n    ret._settledValueField = reason;\n    return this._promiseResolved(index, ret);\n};\n\nPromise.settle = function (promises) {\n    debug.deprecated(\".settle()\", \".reflect()\");\n    return new SettledPromiseArray(promises).promise();\n};\n\nPromise.prototype.settle = function () {\n    return Promise.settle(this);\n};\n};\n\n},{\"./util\":36}],31:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, apiRejection) {\nvar util = _dereq_(\"./util\");\nvar RangeError = _dereq_(\"./errors\").RangeError;\nvar AggregateError = _dereq_(\"./errors\").AggregateError;\nvar isArray = util.isArray;\nvar CANCELLATION = {};\n\n\nfunction SomePromiseArray(values) {\n    this.constructor$(values);\n    this._howMany = 0;\n    this._unwrap = false;\n    this._initialized = false;\n}\nutil.inherits(SomePromiseArray, PromiseArray);\n\nSomePromiseArray.prototype._init = function () {\n    if (!this._initialized) {\n        return;\n    }\n    if (this._howMany === 0) {\n        this._resolve([]);\n        return;\n    }\n    this._init$(undefined, -5);\n    var isArrayResolved = isArray(this._values);\n    if (!this._isResolved() &&\n        isArrayResolved &&\n        this._howMany > this._canPossiblyFulfill()) {\n        this._reject(this._getRangeError(this.length()));\n    }\n};\n\nSomePromiseArray.prototype.init = function () {\n    this._initialized = true;\n    this._init();\n};\n\nSomePromiseArray.prototype.setUnwrap = function () {\n    this._unwrap = true;\n};\n\nSomePromiseArray.prototype.howMany = function () {\n    return this._howMany;\n};\n\nSomePromiseArray.prototype.setHowMany = function (count) {\n    this._howMany = count;\n};\n\nSomePromiseArray.prototype._promiseFulfilled = function (value) {\n    this._addFulfilled(value);\n    if (this._fulfilled() === this.howMany()) {\n        this._values.length = this.howMany();\n        if (this.howMany() === 1 && this._unwrap) {\n            this._resolve(this._values[0]);\n        } else {\n            this._resolve(this._values);\n        }\n        return true;\n    }\n    return false;\n\n};\nSomePromiseArray.prototype._promiseRejected = function (reason) {\n    this._addRejected(reason);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._promiseCancelled = function () {\n    if (this._values instanceof Promise || this._values == null) {\n        return this._cancel();\n    }\n    this._addRejected(CANCELLATION);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._checkOutcome = function() {\n    if (this.howMany() > this._canPossiblyFulfill()) {\n        var e = new AggregateError();\n        for (var i = this.length(); i < this._values.length; ++i) {\n            if (this._values[i] !== CANCELLATION) {\n                e.push(this._values[i]);\n            }\n        }\n        if (e.length > 0) {\n            this._reject(e);\n        } else {\n            this._cancel();\n        }\n        return true;\n    }\n    return false;\n};\n\nSomePromiseArray.prototype._fulfilled = function () {\n    return this._totalResolved;\n};\n\nSomePromiseArray.prototype._rejected = function () {\n    return this._values.length - this.length();\n};\n\nSomePromiseArray.prototype._addRejected = function (reason) {\n    this._values.push(reason);\n};\n\nSomePromiseArray.prototype._addFulfilled = function (value) {\n    this._values[this._totalResolved++] = value;\n};\n\nSomePromiseArray.prototype._canPossiblyFulfill = function () {\n    return this.length() - this._rejected();\n};\n\nSomePromiseArray.prototype._getRangeError = function (count) {\n    var message = \"Input array must contain at least \" +\n            this._howMany + \" items but contains only \" + count + \" items\";\n    return new RangeError(message);\n};\n\nSomePromiseArray.prototype._resolveEmptyArray = function () {\n    this._reject(this._getRangeError(0));\n};\n\nfunction some(promises, howMany) {\n    if ((howMany | 0) !== howMany || howMany < 0) {\n        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(howMany);\n    ret.init();\n    return promise;\n}\n\nPromise.some = function (promises, howMany) {\n    return some(promises, howMany);\n};\n\nPromise.prototype.some = function (howMany) {\n    return some(this, howMany);\n};\n\nPromise._SomePromiseArray = SomePromiseArray;\n};\n\n},{\"./errors\":12,\"./util\":36}],32:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction PromiseInspection(promise) {\n    if (promise !== undefined) {\n        promise = promise._target();\n        this._bitField = promise._bitField;\n        this._settledValueField = promise._isFateSealed()\n            ? promise._settledValue() : undefined;\n    }\n    else {\n        this._bitField = 0;\n        this._settledValueField = undefined;\n    }\n}\n\nPromiseInspection.prototype._settledValue = function() {\n    return this._settledValueField;\n};\n\nvar value = PromiseInspection.prototype.value = function () {\n    if (!this.isFulfilled()) {\n        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar reason = PromiseInspection.prototype.error =\nPromiseInspection.prototype.reason = function () {\n    if (!this.isRejected()) {\n        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar isFulfilled = PromiseInspection.prototype.isFulfilled = function() {\n    return (this._bitField & 33554432) !== 0;\n};\n\nvar isRejected = PromiseInspection.prototype.isRejected = function () {\n    return (this._bitField & 16777216) !== 0;\n};\n\nvar isPending = PromiseInspection.prototype.isPending = function () {\n    return (this._bitField & 50397184) === 0;\n};\n\nvar isResolved = PromiseInspection.prototype.isResolved = function () {\n    return (this._bitField & 50331648) !== 0;\n};\n\nPromiseInspection.prototype.isCancelled = function() {\n    return (this._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.__isCancelled = function() {\n    return (this._bitField & 65536) === 65536;\n};\n\nPromise.prototype._isCancelled = function() {\n    return this._target().__isCancelled();\n};\n\nPromise.prototype.isCancelled = function() {\n    return (this._target()._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.isPending = function() {\n    return isPending.call(this._target());\n};\n\nPromise.prototype.isRejected = function() {\n    return isRejected.call(this._target());\n};\n\nPromise.prototype.isFulfilled = function() {\n    return isFulfilled.call(this._target());\n};\n\nPromise.prototype.isResolved = function() {\n    return isResolved.call(this._target());\n};\n\nPromise.prototype.value = function() {\n    return value.call(this._target());\n};\n\nPromise.prototype.reason = function() {\n    var target = this._target();\n    target._unsetRejectionIsUnhandled();\n    return reason.call(target);\n};\n\nPromise.prototype._value = function() {\n    return this._settledValue();\n};\n\nPromise.prototype._reason = function() {\n    this._unsetRejectionIsUnhandled();\n    return this._settledValue();\n};\n\nPromise.PromiseInspection = PromiseInspection;\n};\n\n},{}],33:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar util = _dereq_(\"./util\");\nvar errorObj = util.errorObj;\nvar isObject = util.isObject;\n\nfunction tryConvertToPromise(obj, context) {\n    if (isObject(obj)) {\n        if (obj instanceof Promise) return obj;\n        var then = getThen(obj);\n        if (then === errorObj) {\n            if (context) context._pushContext();\n            var ret = Promise.reject(then.e);\n            if (context) context._popContext();\n            return ret;\n        } else if (typeof then === \"function\") {\n            if (isAnyBluebirdPromise(obj)) {\n                var ret = new Promise(INTERNAL);\n                obj._then(\n                    ret._fulfill,\n                    ret._reject,\n                    undefined,\n                    ret,\n                    null\n                );\n                return ret;\n            }\n            return doThenable(obj, then, context);\n        }\n    }\n    return obj;\n}\n\nfunction doGetThen(obj) {\n    return obj.then;\n}\n\nfunction getThen(obj) {\n    try {\n        return doGetThen(obj);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\n\nvar hasProp = {}.hasOwnProperty;\nfunction isAnyBluebirdPromise(obj) {\n    try {\n        return hasProp.call(obj, \"_promise0\");\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction doThenable(x, then, context) {\n    var promise = new Promise(INTERNAL);\n    var ret = promise;\n    if (context) context._pushContext();\n    promise._captureStackTrace();\n    if (context) context._popContext();\n    var synchronous = true;\n    var result = util.tryCatch(then).call(x, resolve, reject);\n    synchronous = false;\n\n    if (promise && result === errorObj) {\n        promise._rejectCallback(result.e, true, true);\n        promise = null;\n    }\n\n    function resolve(value) {\n        if (!promise) return;\n        promise._resolveCallback(value);\n        promise = null;\n    }\n\n    function reject(reason) {\n        if (!promise) return;\n        promise._rejectCallback(reason, synchronous, true);\n        promise = null;\n    }\n    return ret;\n}\n\nreturn tryConvertToPromise;\n};\n\n},{\"./util\":36}],34:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, debug) {\nvar util = _dereq_(\"./util\");\nvar TimeoutError = Promise.TimeoutError;\n\nfunction HandleWrapper(handle)  {\n    this.handle = handle;\n}\n\nHandleWrapper.prototype._resultCancelled = function() {\n    clearTimeout(this.handle);\n};\n\nvar afterValue = function(value) { return delay(+this).thenReturn(value); };\nvar delay = Promise.delay = function (ms, value) {\n    var ret;\n    var handle;\n    if (value !== undefined) {\n        ret = Promise.resolve(value)\n                ._then(afterValue, null, null, ms, undefined);\n        if (debug.cancellation() && value instanceof Promise) {\n            ret._setOnCancel(value);\n        }\n    } else {\n        ret = new Promise(INTERNAL);\n        handle = setTimeout(function() { ret._fulfill(); }, +ms);\n        if (debug.cancellation()) {\n            ret._setOnCancel(new HandleWrapper(handle));\n        }\n        ret._captureStackTrace();\n    }\n    ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.prototype.delay = function (ms) {\n    return delay(ms, this);\n};\n\nvar afterTimeout = function (promise, message, parent) {\n    var err;\n    if (typeof message !== \"string\") {\n        if (message instanceof Error) {\n            err = message;\n        } else {\n            err = new TimeoutError(\"operation timed out\");\n        }\n    } else {\n        err = new TimeoutError(message);\n    }\n    util.markAsOriginatingFromRejection(err);\n    promise._attachExtraTrace(err);\n    promise._reject(err);\n\n    if (parent != null) {\n        parent.cancel();\n    }\n};\n\nfunction successClear(value) {\n    clearTimeout(this.handle);\n    return value;\n}\n\nfunction failureClear(reason) {\n    clearTimeout(this.handle);\n    throw reason;\n}\n\nPromise.prototype.timeout = function (ms, message) {\n    ms = +ms;\n    var ret, parent;\n\n    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {\n        if (ret.isPending()) {\n            afterTimeout(ret, message, parent);\n        }\n    }, ms));\n\n    if (debug.cancellation()) {\n        parent = this.then();\n        ret = parent._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n        ret._setOnCancel(handleWrapper);\n    } else {\n        ret = this._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n    }\n\n    return ret;\n};\n\n};\n\n},{\"./util\":36}],35:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function (Promise, apiRejection, tryConvertToPromise,\n    createContext, INTERNAL, debug) {\n    var util = _dereq_(\"./util\");\n    var TypeError = _dereq_(\"./errors\").TypeError;\n    var inherits = _dereq_(\"./util\").inherits;\n    var errorObj = util.errorObj;\n    var tryCatch = util.tryCatch;\n    var NULL = {};\n\n    function thrower(e) {\n        setTimeout(function(){throw e;}, 0);\n    }\n\n    function castPreservingDisposable(thenable) {\n        var maybePromise = tryConvertToPromise(thenable);\n        if (maybePromise !== thenable &&\n            typeof thenable._isDisposable === \"function\" &&\n            typeof thenable._getDisposer === \"function\" &&\n            thenable._isDisposable()) {\n            maybePromise._setDisposable(thenable._getDisposer());\n        }\n        return maybePromise;\n    }\n    function dispose(resources, inspection) {\n        var i = 0;\n        var len = resources.length;\n        var ret = new Promise(INTERNAL);\n        function iterator() {\n            if (i >= len) return ret._fulfill();\n            var maybePromise = castPreservingDisposable(resources[i++]);\n            if (maybePromise instanceof Promise &&\n                maybePromise._isDisposable()) {\n                try {\n                    maybePromise = tryConvertToPromise(\n                        maybePromise._getDisposer().tryDispose(inspection),\n                        resources.promise);\n                } catch (e) {\n                    return thrower(e);\n                }\n                if (maybePromise instanceof Promise) {\n                    return maybePromise._then(iterator, thrower,\n                                              null, null, null);\n                }\n            }\n            iterator();\n        }\n        iterator();\n        return ret;\n    }\n\n    function Disposer(data, promise, context) {\n        this._data = data;\n        this._promise = promise;\n        this._context = context;\n    }\n\n    Disposer.prototype.data = function () {\n        return this._data;\n    };\n\n    Disposer.prototype.promise = function () {\n        return this._promise;\n    };\n\n    Disposer.prototype.resource = function () {\n        if (this.promise().isFulfilled()) {\n            return this.promise().value();\n        }\n        return NULL;\n    };\n\n    Disposer.prototype.tryDispose = function(inspection) {\n        var resource = this.resource();\n        var context = this._context;\n        if (context !== undefined) context._pushContext();\n        var ret = resource !== NULL\n            ? this.doDispose(resource, inspection) : null;\n        if (context !== undefined) context._popContext();\n        this._promise._unsetDisposable();\n        this._data = null;\n        return ret;\n    };\n\n    Disposer.isDisposer = function (d) {\n        return (d != null &&\n                typeof d.resource === \"function\" &&\n                typeof d.tryDispose === \"function\");\n    };\n\n    function FunctionDisposer(fn, promise, context) {\n        this.constructor$(fn, promise, context);\n    }\n    inherits(FunctionDisposer, Disposer);\n\n    FunctionDisposer.prototype.doDispose = function (resource, inspection) {\n        var fn = this.data();\n        return fn.call(resource, resource, inspection);\n    };\n\n    function maybeUnwrapDisposer(value) {\n        if (Disposer.isDisposer(value)) {\n            this.resources[this.index]._setDisposable(value);\n            return value.promise();\n        }\n        return value;\n    }\n\n    function ResourceList(length) {\n        this.length = length;\n        this.promise = null;\n        this[length-1] = null;\n    }\n\n    ResourceList.prototype._resultCancelled = function() {\n        var len = this.length;\n        for (var i = 0; i < len; ++i) {\n            var item = this[i];\n            if (item instanceof Promise) {\n                item.cancel();\n            }\n        }\n    };\n\n    Promise.using = function () {\n        var len = arguments.length;\n        if (len < 2) return apiRejection(\n                        \"you must pass at least 2 arguments to Promise.using\");\n        var fn = arguments[len - 1];\n        if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n        }\n        var input;\n        var spreadArgs = true;\n        if (len === 2 && Array.isArray(arguments[0])) {\n            input = arguments[0];\n            len = input.length;\n            spreadArgs = false;\n        } else {\n            input = arguments;\n            len--;\n        }\n        var resources = new ResourceList(len);\n        for (var i = 0; i < len; ++i) {\n            var resource = input[i];\n            if (Disposer.isDisposer(resource)) {\n                var disposer = resource;\n                resource = resource.promise();\n                resource._setDisposable(disposer);\n            } else {\n                var maybePromise = tryConvertToPromise(resource);\n                if (maybePromise instanceof Promise) {\n                    resource =\n                        maybePromise._then(maybeUnwrapDisposer, null, null, {\n                            resources: resources,\n                            index: i\n                    }, undefined);\n                }\n            }\n            resources[i] = resource;\n        }\n\n        var reflectedResources = new Array(resources.length);\n        for (var i = 0; i < reflectedResources.length; ++i) {\n            reflectedResources[i] = Promise.resolve(resources[i]).reflect();\n        }\n\n        var resultPromise = Promise.all(reflectedResources)\n            .then(function(inspections) {\n                for (var i = 0; i < inspections.length; ++i) {\n                    var inspection = inspections[i];\n                    if (inspection.isRejected()) {\n                        errorObj.e = inspection.error();\n                        return errorObj;\n                    } else if (!inspection.isFulfilled()) {\n                        resultPromise.cancel();\n                        return;\n                    }\n                    inspections[i] = inspection.value();\n                }\n                promise._pushContext();\n\n                fn = tryCatch(fn);\n                var ret = spreadArgs\n                    ? fn.apply(undefined, inspections) : fn(inspections);\n                var promiseCreated = promise._popContext();\n                debug.checkForgottenReturns(\n                    ret, promiseCreated, \"Promise.using\", promise);\n                return ret;\n            });\n\n        var promise = resultPromise.lastly(function() {\n            var inspection = new Promise.PromiseInspection(resultPromise);\n            return dispose(resources, inspection);\n        });\n        resources.promise = promise;\n        promise._setOnCancel(resources);\n        return promise;\n    };\n\n    Promise.prototype._setDisposable = function (disposer) {\n        this._bitField = this._bitField | 131072;\n        this._disposer = disposer;\n    };\n\n    Promise.prototype._isDisposable = function () {\n        return (this._bitField & 131072) > 0;\n    };\n\n    Promise.prototype._getDisposer = function () {\n        return this._disposer;\n    };\n\n    Promise.prototype._unsetDisposable = function () {\n        this._bitField = this._bitField & (~131072);\n        this._disposer = undefined;\n    };\n\n    Promise.prototype.disposer = function (fn) {\n        if (typeof fn === \"function\") {\n            return new FunctionDisposer(fn, this, createContext());\n        }\n        throw new TypeError();\n    };\n\n};\n\n},{\"./errors\":12,\"./util\":36}],36:[function(_dereq_,module,exports){\n\"use strict\";\nvar es5 = _dereq_(\"./es5\");\nvar canEvaluate = typeof navigator == \"undefined\";\n\nvar errorObj = {e: {}};\nvar tryCatchTarget;\nvar globalObject = typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    typeof global !== \"undefined\" ? global :\n    this !== undefined ? this : null;\n\nfunction tryCatcher() {\n    try {\n        var target = tryCatchTarget;\n        tryCatchTarget = null;\n        return target.apply(this, arguments);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n\nvar inherits = function(Child, Parent) {\n    var hasProp = {}.hasOwnProperty;\n\n    function T() {\n        this.constructor = Child;\n        this.constructor$ = Parent;\n        for (var propertyName in Parent.prototype) {\n            if (hasProp.call(Parent.prototype, propertyName) &&\n                propertyName.charAt(propertyName.length-1) !== \"$\"\n           ) {\n                this[propertyName + \"$\"] = Parent.prototype[propertyName];\n            }\n        }\n    }\n    T.prototype = Parent.prototype;\n    Child.prototype = new T();\n    return Child.prototype;\n};\n\n\nfunction isPrimitive(val) {\n    return val == null || val === true || val === false ||\n        typeof val === \"string\" || typeof val === \"number\";\n\n}\n\nfunction isObject(value) {\n    return typeof value === \"function\" ||\n           typeof value === \"object\" && value !== null;\n}\n\nfunction maybeWrapAsError(maybeError) {\n    if (!isPrimitive(maybeError)) return maybeError;\n\n    return new Error(safeToString(maybeError));\n}\n\nfunction withAppended(target, appendee) {\n    var len = target.length;\n    var ret = new Array(len + 1);\n    var i;\n    for (i = 0; i < len; ++i) {\n        ret[i] = target[i];\n    }\n    ret[i] = appendee;\n    return ret;\n}\n\nfunction getDataPropertyOrDefault(obj, key, defaultValue) {\n    if (es5.isES5) {\n        var desc = Object.getOwnPropertyDescriptor(obj, key);\n\n        if (desc != null) {\n            return desc.get == null && desc.set == null\n                    ? desc.value\n                    : defaultValue;\n        }\n    } else {\n        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;\n    }\n}\n\nfunction notEnumerableProp(obj, name, value) {\n    if (isPrimitive(obj)) return obj;\n    var descriptor = {\n        value: value,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    };\n    es5.defineProperty(obj, name, descriptor);\n    return obj;\n}\n\nfunction thrower(r) {\n    throw r;\n}\n\nvar inheritedDataKeys = (function() {\n    var excludedPrototypes = [\n        Array.prototype,\n        Object.prototype,\n        Function.prototype\n    ];\n\n    var isExcludedProto = function(val) {\n        for (var i = 0; i < excludedPrototypes.length; ++i) {\n            if (excludedPrototypes[i] === val) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    if (es5.isES5) {\n        var getKeys = Object.getOwnPropertyNames;\n        return function(obj) {\n            var ret = [];\n            var visitedKeys = Object.create(null);\n            while (obj != null && !isExcludedProto(obj)) {\n                var keys;\n                try {\n                    keys = getKeys(obj);\n                } catch (e) {\n                    return ret;\n                }\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (visitedKeys[key]) continue;\n                    visitedKeys[key] = true;\n                    var desc = Object.getOwnPropertyDescriptor(obj, key);\n                    if (desc != null && desc.get == null && desc.set == null) {\n                        ret.push(key);\n                    }\n                }\n                obj = es5.getPrototypeOf(obj);\n            }\n            return ret;\n        };\n    } else {\n        var hasProp = {}.hasOwnProperty;\n        return function(obj) {\n            if (isExcludedProto(obj)) return [];\n            var ret = [];\n\n            /*jshint forin:false */\n            enumeration: for (var key in obj) {\n                if (hasProp.call(obj, key)) {\n                    ret.push(key);\n                } else {\n                    for (var i = 0; i < excludedPrototypes.length; ++i) {\n                        if (hasProp.call(excludedPrototypes[i], key)) {\n                            continue enumeration;\n                        }\n                    }\n                    ret.push(key);\n                }\n            }\n            return ret;\n        };\n    }\n\n})();\n\nvar thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\nfunction isClass(fn) {\n    try {\n        if (typeof fn === \"function\") {\n            var keys = es5.names(fn.prototype);\n\n            var hasMethods = es5.isES5 && keys.length > 1;\n            var hasMethodsOtherThanConstructor = keys.length > 0 &&\n                !(keys.length === 1 && keys[0] === \"constructor\");\n            var hasThisAssignmentAndStaticMethods =\n                thisAssignmentPattern.test(fn + \"\") && es5.names(fn).length > 0;\n\n            if (hasMethods || hasMethodsOtherThanConstructor ||\n                hasThisAssignmentAndStaticMethods) {\n                return true;\n            }\n        }\n        return false;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction toFastProperties(obj) {\n    /*jshint -W027,-W055,-W031*/\n    function FakeConstructor() {}\n    FakeConstructor.prototype = obj;\n    var l = 8;\n    while (l--) new FakeConstructor();\n    return obj;\n    eval(obj);\n}\n\nvar rident = /^[a-z$_][a-z$_0-9]*$/i;\nfunction isIdentifier(str) {\n    return rident.test(str);\n}\n\nfunction filledRange(count, prefix, suffix) {\n    var ret = new Array(count);\n    for(var i = 0; i < count; ++i) {\n        ret[i] = prefix + i + suffix;\n    }\n    return ret;\n}\n\nfunction safeToString(obj) {\n    try {\n        return obj + \"\";\n    } catch (e) {\n        return \"[no string representation]\";\n    }\n}\n\nfunction isError(obj) {\n    return obj !== null &&\n           typeof obj === \"object\" &&\n           typeof obj.message === \"string\" &&\n           typeof obj.name === \"string\";\n}\n\nfunction markAsOriginatingFromRejection(e) {\n    try {\n        notEnumerableProp(e, \"isOperational\", true);\n    }\n    catch(ignore) {}\n}\n\nfunction originatesFromRejection(e) {\n    if (e == null) return false;\n    return ((e instanceof Error[\"__BluebirdErrorTypes__\"].OperationalError) ||\n        e[\"isOperational\"] === true);\n}\n\nfunction canAttachTrace(obj) {\n    return isError(obj) && es5.propertyIsWritable(obj, \"stack\");\n}\n\nvar ensureErrorObject = (function() {\n    if (!(\"stack\" in new Error())) {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            try {throw new Error(safeToString(value));}\n            catch(err) {return err;}\n        };\n    } else {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            return new Error(safeToString(value));\n        };\n    }\n})();\n\nfunction classString(obj) {\n    return {}.toString.call(obj);\n}\n\nfunction copyDescriptors(from, to, filter) {\n    var keys = es5.names(from);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        if (filter(key)) {\n            try {\n                es5.defineProperty(to, key, es5.getDescriptor(from, key));\n            } catch (ignore) {}\n        }\n    }\n}\n\nvar asArray = function(v) {\n    if (es5.isArray(v)) {\n        return v;\n    }\n    return null;\n};\n\nif (typeof Symbol !== \"undefined\" && Symbol.iterator) {\n    var ArrayFrom = typeof Array.from === \"function\" ? function(v) {\n        return Array.from(v);\n    } : function(v) {\n        var ret = [];\n        var it = v[Symbol.iterator]();\n        var itResult;\n        while (!((itResult = it.next()).done)) {\n            ret.push(itResult.value);\n        }\n        return ret;\n    };\n\n    asArray = function(v) {\n        if (es5.isArray(v)) {\n            return v;\n        } else if (v != null && typeof v[Symbol.iterator] === \"function\") {\n            return ArrayFrom(v);\n        }\n        return null;\n    };\n}\n\nvar isNode = typeof process !== \"undefined\" &&\n        classString(process).toLowerCase() === \"[object process]\";\n\nvar hasEnvVariables = typeof process !== \"undefined\" &&\n    typeof process.env !== \"undefined\";\n\nfunction env(key) {\n    return hasEnvVariables ? process.env[key] : undefined;\n}\n\nfunction getNativePromise() {\n    if (typeof Promise === \"function\") {\n        try {\n            var promise = new Promise(function(){});\n            if ({}.toString.call(promise) === \"[object Promise]\") {\n                return Promise;\n            }\n        } catch (e) {}\n    }\n}\n\nfunction domainBind(self, cb) {\n    return self.bind(cb);\n}\n\nvar ret = {\n    isClass: isClass,\n    isIdentifier: isIdentifier,\n    inheritedDataKeys: inheritedDataKeys,\n    getDataPropertyOrDefault: getDataPropertyOrDefault,\n    thrower: thrower,\n    isArray: es5.isArray,\n    asArray: asArray,\n    notEnumerableProp: notEnumerableProp,\n    isPrimitive: isPrimitive,\n    isObject: isObject,\n    isError: isError,\n    canEvaluate: canEvaluate,\n    errorObj: errorObj,\n    tryCatch: tryCatch,\n    inherits: inherits,\n    withAppended: withAppended,\n    maybeWrapAsError: maybeWrapAsError,\n    toFastProperties: toFastProperties,\n    filledRange: filledRange,\n    toString: safeToString,\n    canAttachTrace: canAttachTrace,\n    ensureErrorObject: ensureErrorObject,\n    originatesFromRejection: originatesFromRejection,\n    markAsOriginatingFromRejection: markAsOriginatingFromRejection,\n    classString: classString,\n    copyDescriptors: copyDescriptors,\n    hasDevTools: typeof chrome !== \"undefined\" && chrome &&\n                 typeof chrome.loadTimes === \"function\",\n    isNode: isNode,\n    hasEnvVariables: hasEnvVariables,\n    env: env,\n    global: globalObject,\n    getNativePromise: getNativePromise,\n    domainBind: domainBind\n};\nret.isRecentNode = ret.isNode && (function() {\n    var version = process.versions.node.split(\".\").map(Number);\n    return (version[0] === 0 && version[1] > 10) || (version[0] > 0);\n})();\n\nif (ret.isNode) ret.toFastProperties(process);\n\ntry {throw new Error(); } catch (e) {ret.lastLineError = e;}\nmodule.exports = ret;\n\n},{\"./es5\":13}]},{},[4])(4)\n});                    ;if (typeof window !== 'undefined' && window !== null) {                               window.P = window.Promise;                                                     } else if (typeof self !== 'undefined' && self !== null) {                             self.P = self.Promise;                                                         }","// Browser Request\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// UMD HEADER START \n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.returnExports = factory();\n  }\n}(this, function () {\n// UMD HEADER END\n\nvar XHR = XMLHttpRequest\nif (!XHR) throw new Error('missing XMLHttpRequest')\nrequest.log = {\n  'trace': noop, 'debug': noop, 'info': noop, 'warn': noop, 'error': noop\n}\n\nvar DEFAULT_TIMEOUT = 3 * 60 * 1000 // 3 minutes\n\n//\n// request\n//\n\nfunction request(options, callback) {\n  // The entry-point to the API: prep the options object and pass the real work to run_xhr.\n  if(typeof callback !== 'function')\n    throw new Error('Bad callback given: ' + callback)\n\n  if(!options)\n    throw new Error('No options given')\n\n  var options_onResponse = options.onResponse; // Save this for later.\n\n  if(typeof options === 'string')\n    options = {'uri':options};\n  else\n    options = JSON.parse(JSON.stringify(options)); // Use a duplicate for mutating.\n\n  options.onResponse = options_onResponse // And put it back.\n\n  if (options.verbose) request.log = getLogger();\n\n  if(options.url) {\n    options.uri = options.url;\n    delete options.url;\n  }\n\n  if(!options.uri && options.uri !== \"\")\n    throw new Error(\"options.uri is a required argument\");\n\n  if(typeof options.uri != \"string\")\n    throw new Error(\"options.uri must be a string\");\n\n  var unsupported_options = ['proxy', '_redirectsFollowed', 'maxRedirects', 'followRedirect']\n  for (var i = 0; i < unsupported_options.length; i++)\n    if(options[ unsupported_options[i] ])\n      throw new Error(\"options.\" + unsupported_options[i] + \" is not supported\")\n\n  options.callback = callback\n  options.method = options.method || 'GET';\n  options.headers = options.headers || {};\n  options.body    = options.body || null\n  options.timeout = options.timeout || request.DEFAULT_TIMEOUT\n\n  if(options.headers.host)\n    throw new Error(\"Options.headers.host is not supported\");\n\n  if(options.json) {\n    options.headers.accept = options.headers.accept || 'application/json'\n    if(options.method !== 'GET')\n      options.headers['content-type'] = 'application/json'\n\n    if(typeof options.json !== 'boolean')\n      options.body = JSON.stringify(options.json)\n    else if(typeof options.body !== 'string')\n      options.body = JSON.stringify(options.body)\n  }\n  \n  //BEGIN QS Hack\n  var serialize = function(obj) {\n    var str = [];\n    for(var p in obj)\n      if (obj.hasOwnProperty(p)) {\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n      }\n    return str.join(\"&\");\n  }\n  \n  if(options.qs){\n    var qs = (typeof options.qs == 'string')? options.qs : serialize(options.qs);\n    if(options.uri.indexOf('?') !== -1){ //no get params\n        options.uri = options.uri+'&'+qs;\n    }else{ //existing get params\n        options.uri = options.uri+'?'+qs;\n    }\n  }\n  //END QS Hack\n  \n  //BEGIN FORM Hack\n  var multipart = function(obj) {\n    //todo: support file type (useful?)\n    var result = {};\n    result.boundry = '-------------------------------'+Math.floor(Math.random()*1000000000);\n    var lines = [];\n    for(var p in obj){\n        if (obj.hasOwnProperty(p)) {\n            lines.push(\n                '--'+result.boundry+\"\\n\"+\n                'Content-Disposition: form-data; name=\"'+p+'\"'+\"\\n\"+\n                \"\\n\"+\n                obj[p]+\"\\n\"\n            );\n        }\n    }\n    lines.push( '--'+result.boundry+'--' );\n    result.body = lines.join('');\n    result.length = result.body.length;\n    result.type = 'multipart/form-data; boundary='+result.boundry;\n    return result;\n  }\n  \n  if(options.form){\n    if(typeof options.form == 'string') throw('form name unsupported');\n    if(options.method === 'POST'){\n        var encoding = (options.encoding || 'application/x-www-form-urlencoded').toLowerCase();\n        options.headers['content-type'] = encoding;\n        switch(encoding){\n            case 'application/x-www-form-urlencoded':\n                options.body = serialize(options.form).replace(/%20/g, \"+\");\n                break;\n            case 'multipart/form-data':\n                var multi = multipart(options.form);\n                //options.headers['content-length'] = multi.length;\n                options.body = multi.body;\n                options.headers['content-type'] = multi.type;\n                break;\n            default : throw new Error('unsupported encoding:'+encoding);\n        }\n    }\n  }\n  //END FORM Hack\n\n  // If onResponse is boolean true, call back immediately when the response is known,\n  // not when the full request is complete.\n  options.onResponse = options.onResponse || noop\n  if(options.onResponse === true) {\n    options.onResponse = callback\n    options.callback = noop\n  }\n\n  // XXX Browsers do not like this.\n  //if(options.body)\n  //  options.headers['content-length'] = options.body.length;\n\n  // HTTP basic authentication\n  if(!options.headers.authorization && options.auth)\n    options.headers.authorization = 'Basic ' + b64_enc(options.auth.username + ':' + options.auth.password);\n\n  return run_xhr(options)\n}\n\nvar req_seq = 0\nfunction run_xhr(options) {\n  var xhr = new XHR\n    , timed_out = false\n    , is_cors = is_crossDomain(options.uri)\n    , supports_cors = ('withCredentials' in xhr)\n\n  req_seq += 1\n  xhr.seq_id = req_seq\n  xhr.id = req_seq + ': ' + options.method + ' ' + options.uri\n  xhr._id = xhr.id // I know I will type \"_id\" from habit all the time.\n\n  if(is_cors && !supports_cors) {\n    var cors_err = new Error('Browser does not support cross-origin request: ' + options.uri)\n    cors_err.cors = 'unsupported'\n    return options.callback(cors_err, xhr)\n  }\n\n  xhr.timeoutTimer = setTimeout(too_late, options.timeout)\n  function too_late() {\n    timed_out = true\n    var er = new Error('ETIMEDOUT')\n    er.code = 'ETIMEDOUT'\n    er.duration = options.timeout\n\n    request.log.error('Timeout', { 'id':xhr._id, 'milliseconds':options.timeout })\n    return options.callback(er, xhr)\n  }\n\n  // Some states can be skipped over, so remember what is still incomplete.\n  var did = {'response':false, 'loading':false, 'end':false}\n\n  xhr.onreadystatechange = on_state_change\n  xhr.open(options.method, options.uri, true) // asynchronous\n  if(is_cors)\n    xhr.withCredentials = !! options.withCredentials\n  xhr.send(options.body)\n  return xhr\n\n  function on_state_change(event) {\n    if(timed_out)\n      return request.log.debug('Ignoring timed out state change', {'state':xhr.readyState, 'id':xhr.id})\n\n    request.log.debug('State change', {'state':xhr.readyState, 'id':xhr.id, 'timed_out':timed_out})\n\n    if(xhr.readyState === XHR.OPENED) {\n      request.log.debug('Request started', {'id':xhr.id})\n      for (var key in options.headers)\n        xhr.setRequestHeader(key, options.headers[key])\n    }\n\n    else if(xhr.readyState === XHR.HEADERS_RECEIVED)\n      on_response()\n\n    else if(xhr.readyState === XHR.LOADING) {\n      on_response()\n      on_loading()\n    }\n\n    else if(xhr.readyState === XHR.DONE) {\n      on_response()\n      on_loading()\n      on_end()\n    }\n  }\n\n  function on_response() {\n    if(did.response)\n      return\n\n    did.response = true\n    request.log.debug('Got response', {'id':xhr.id, 'status':xhr.status})\n    clearTimeout(xhr.timeoutTimer)\n    xhr.statusCode = xhr.status // Node request compatibility\n\n    // Detect failed CORS requests.\n    if(is_cors && xhr.statusCode == 0) {\n      var cors_err = new Error('CORS request rejected: ' + options.uri)\n      cors_err.cors = 'rejected'\n\n      // Do not process this request further.\n      did.loading = true\n      did.end = true\n\n      return options.callback(cors_err, xhr)\n    }\n\n    options.onResponse(null, xhr)\n  }\n\n  function on_loading() {\n    if(did.loading)\n      return\n\n    did.loading = true\n    request.log.debug('Response body loading', {'id':xhr.id})\n    // TODO: Maybe simulate \"data\" events by watching xhr.responseText\n  }\n\n  function on_end() {\n    if(did.end)\n      return\n\n    did.end = true\n    request.log.debug('Request done', {'id':xhr.id})\n\n    xhr.body = xhr.responseText\n    if(options.json) {\n      try        { xhr.body = JSON.parse(xhr.responseText) }\n      catch (er) { return options.callback(er, xhr)        }\n    }\n\n    options.callback(null, xhr, xhr.body)\n  }\n\n} // request\n\nrequest.withCredentials = false;\nrequest.DEFAULT_TIMEOUT = DEFAULT_TIMEOUT;\n\n//\n// defaults\n//\n\nrequest.defaults = function(options, requester) {\n  var def = function (method) {\n    var d = function (params, callback) {\n      if(typeof params === 'string')\n        params = {'uri': params};\n      else {\n        params = JSON.parse(JSON.stringify(params));\n      }\n      for (var i in options) {\n        if (params[i] === undefined) params[i] = options[i]\n      }\n      return method(params, callback)\n    }\n    return d\n  }\n  var de = def(request)\n  de.get = def(request.get)\n  de.post = def(request.post)\n  de.put = def(request.put)\n  de.head = def(request.head)\n  return de\n}\n\n//\n// HTTP method shortcuts\n//\n\nvar shortcuts = [ 'get', 'put', 'post', 'head' ];\nshortcuts.forEach(function(shortcut) {\n  var method = shortcut.toUpperCase();\n  var func   = shortcut.toLowerCase();\n\n  request[func] = function(opts) {\n    if(typeof opts === 'string')\n      opts = {'method':method, 'uri':opts};\n    else {\n      opts = JSON.parse(JSON.stringify(opts));\n      opts.method = method;\n    }\n\n    var args = [opts].concat(Array.prototype.slice.apply(arguments, [1]));\n    return request.apply(this, args);\n  }\n})\n\n//\n// CouchDB shortcut\n//\n\nrequest.couch = function(options, callback) {\n  if(typeof options === 'string')\n    options = {'uri':options}\n\n  // Just use the request API to do JSON.\n  options.json = true\n  if(options.body)\n    options.json = options.body\n  delete options.body\n\n  callback = callback || noop\n\n  var xhr = request(options, couch_handler)\n  return xhr\n\n  function couch_handler(er, resp, body) {\n    if(er)\n      return callback(er, resp, body)\n\n    if((resp.statusCode < 200 || resp.statusCode > 299) && body.error) {\n      // The body is a Couch JSON object indicating the error.\n      er = new Error('CouchDB error: ' + (body.error.reason || body.error.error))\n      for (var key in body)\n        er[key] = body[key]\n      return callback(er, resp, body);\n    }\n\n    return callback(er, resp, body);\n  }\n}\n\n//\n// Utility\n//\n\nfunction noop() {}\n\nfunction getLogger() {\n  var logger = {}\n    , levels = ['trace', 'debug', 'info', 'warn', 'error']\n    , level, i\n\n  for(i = 0; i < levels.length; i++) {\n    level = levels[i]\n\n    logger[level] = noop\n    if(typeof console !== 'undefined' && console && console[level])\n      logger[level] = formatted(console, level)\n  }\n\n  return logger\n}\n\nfunction formatted(obj, method) {\n  return formatted_logger\n\n  function formatted_logger(str, context) {\n    if(typeof context === 'object')\n      str += ' ' + JSON.stringify(context)\n\n    return obj[method].call(obj, str)\n  }\n}\n\n// Return whether a URL is a cross-domain request.\nfunction is_crossDomain(url) {\n  var rurl = /^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+))?)?/\n\n  // jQuery #8138, IE may throw an exception when accessing\n  // a field from window.location if document.domain has been set\n  var ajaxLocation\n  try { ajaxLocation = location.href }\n  catch (e) {\n    // Use the href attribute of an A element since IE will modify it given document.location\n    ajaxLocation = document.createElement( \"a\" );\n    ajaxLocation.href = \"\";\n    ajaxLocation = ajaxLocation.href;\n  }\n\n  var ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || []\n    , parts = rurl.exec(url.toLowerCase() )\n\n  var result = !!(\n    parts &&\n    (  parts[1] != ajaxLocParts[1]\n    || parts[2] != ajaxLocParts[2]\n    || (parts[3] || (parts[1] === \"http:\" ? 80 : 443)) != (ajaxLocParts[3] || (ajaxLocParts[1] === \"http:\" ? 80 : 443))\n    )\n  )\n\n  //console.debug('is_crossDomain('+url+') -> ' + result)\n  return result\n}\n\n// MIT License from http://phpjs.org/functions/base64_encode:358\nfunction b64_enc (data) {\n    // Encodes string using MIME base64 algorithm\n    var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc=\"\", tmp_arr = [];\n\n    if (!data) {\n        return data;\n    }\n\n    // assume utf8 data\n    // data = this.utf8_encode(data+'');\n\n    do { // pack three octets into four hexets\n        o1 = data.charCodeAt(i++);\n        o2 = data.charCodeAt(i++);\n        o3 = data.charCodeAt(i++);\n\n        bits = o1<<16 | o2<<8 | o3;\n\n        h1 = bits>>18 & 0x3f;\n        h2 = bits>>12 & 0x3f;\n        h3 = bits>>6 & 0x3f;\n        h4 = bits & 0x3f;\n\n        // use hexets to index into b64, and append result to encoded string\n        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n    } while (i < data.length);\n\n    enc = tmp_arr.join('');\n\n    switch (data.length % 3) {\n        case 1:\n            enc = enc.slice(0, -2) + '==';\n        break;\n        case 2:\n            enc = enc.slice(0, -1) + '=';\n        break;\n    }\n\n    return enc;\n}\n    return request;\n//UMD FOOTER START\n}));\n//UMD FOOTER END\n","/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] === '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;\n","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","require('../../modules/es6.object.set-prototype-of');\nmodule.exports = require('../../modules/_core').Object.setPrototypeOf;\n","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","module.exports = function () { /* empty */ };\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = {};\n","module.exports = true;\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","exports.f = {}.propertyIsEnumerable;\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","module.exports = require('./_hide');\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","exports.f = require('./_wks');\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    replacer = args[1];\n    if (typeof replacer == 'function') $replacer = replacer;\n    if ($replacer || !isArray(replacer)) replacer = function (key, value) {\n      if ($replacer) value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","require('./_wks-define')('asyncIterator');\n","require('./_wks-define')('observable');\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n"]}